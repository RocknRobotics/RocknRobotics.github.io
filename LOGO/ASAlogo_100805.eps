%!PS-Adobe-3.1 EPSF-3.0%%Title: ASAlogo(new).ai%%Creator: Adobe Illustrator(R) 11%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: Marcy Folgate%%CreationDate: 10/5/05%%BoundingBox: 0 0 202 76%%HiResBoundingBox: 0 0 201.0523 75.8409%%CropBox: 0 0 201.0523 75.8409%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)%%+ procset Adobe_CoolType_Core (2.23 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 48 8%%BeginData: 6926 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD1FFFCFFFCFCFC9CFFD6FFFCFCFC9C9C8C8FD04C7C6C6C0C6C0C7%FD70FFCEC0C6C6C6C0C6C6C6C0C6C6C6C0C7FF8451FD0852A8FD08FFA87D%527DFD2452A8FFA8FD2EFFCAFFA8FFC6C6C0C6C0C6C0C6C0C6C0C6C0C6CF%A8FD0AF827FD05FF7D27FD29F8A8FF7D52FD29FFCAB5BCB5B68CC4CFFD0D%C6CFAFFD0BF852FD04FF52FD2BF8A8FF7DF87DFD28FF93FC8CB58CB5CACD%C0C6C0C6C0C6C0C6C0C6C0C6CEFFFD0CF852FFFFFF52FD2CF8A8FFA8F8F8%7DFD26FFCAB5B0B58DB0BDFFC0FD0BC6C9FF00FD0CF852FFFFA8FD2DF87D%FFA8F8F8F8A8FD25FFBC8CB58CB08CCBC7C6C0C6C0C6C0C6C0C6C0C6C8FF%27FD0DF852FFFF52FD2DF8A8FFA8FD04F8A8FD24FF8DB5B0B58CC3FFC7FD%0AC6C7FF52FD0EF852FFFF27FD2DF87DFFA8FD04F827FD23FFBDFC8CB58C%B09ACACACFC0C6C0C6C0C6C0C6C6FF52FD0FF852FFA8FD0BF8277D527D52%7D527D527D527D527D527D527D527D527D527D527D27FD08F8A8FFA8FD05%F827FD22FFB6FCB58DB5B0B08CCACEFD08C6FF7DFD10F852FFFFFD09F827%A8FD1AFF7DFD08F8A8FF7DFD06F852FD20FFC38CB08CB58CB58CB5CAC7C0%C6C0C6C0C6C0FF7EFD11F827FFA8FD09F827FD1BFF52FD08F8A8FFA8FD07%F87DFD1FFFCAC3BCB58DB5B0B0C3CFFD07C6CFA8FD12F852FFFFFD09F852%FD1BFF7DFD08F8A8FF7DFD08F8A8FD20FFCA8CB58CB593FFC6C6C0C6C0C6%C0CEAF27FD12F852FFA8FD0AF8A8FD1AFF52FD08F8A8FFA8FD09F8A8FD1F%FFB6B5B0B58CC4CEFD05C6C0C7C9FFA827FD06F827A8FD09F852FFFFFD0B%F8275252527D7D7D52FD047DFD04A8FD0AFF7DFD08F87DFFA8FD0AF8FD1E%FFCAB08CB58CB5CAC7C0C6C0C6C0C69ECEA927FD07F8FF7DFD09F852FFA8%27FD1BF827277DFD06FF52FD08F8A8FFFF52FD0AF8FD1DFFC38CB5B0B0BD%CFFD06C6C0CEFF27FD07F8FFFFA8FD09F852FFFF27FD1EF827A8FD04FF7D%FD08F87DFFFFFF52FD09F827FD1CFF8DB08CB58DFFC7C6C0C6C0C6C0CDFF%27FD07F8A8FFFF7DFD09F852FFFF7DFD20F8A8FFFFFF52FD08F8A8FD04FF%27FD09F827FD1AFFBDB0B0B58CC3CFC6C0C6C6C6C0CEFF27FD07F87DFFFF%FFA8FD09F852FFFFA827FD1FF852FFFFFF7DFD08F8A8FD05FF27FD09F852%FD19FFB58CB58CB0A8CDC0C6C0C6C0C8FF52FD07F87DFD04FF7DFD09F827%FFFFFF7DFD20F8A8FFFF52FD08F8A8FD06FFFD0AF852FD17FFCA8CB5B0B0%BCFFFD05C6CDFF52FD07F852FD05FFA8FD09F852FD04FFA852FD1EF852FF%FF7DFD08F8A8FD06FFA8FD0AF87DFD16FF93B08CB58CC4CFCEC6C6C0CDFF%52FD07F827FD06FF7DFD09F852FD06FFA87D7D5252FD0427F827FD13F852%FFFF52FD08F8A8FD07FFA8FD0AF87DFD14FFCAB5B0B58DB5FCCBCEC6C6C8%FF53FD07F827FD07FFA8FD09F852FD14FFFD04A87D7DFD0AF827FFFF7DFD%08F87DFD08FF7DFD0AF8A8FD13FFBC8CB58CB58CBDCFC6C0C7FF53FD08F8%A8FD07FF7DFD09F852FD1AFFA8FD09F827A8FF52FD08F8A8FD09FF52FD0A%F8A8FD12FF8DB5B0B58CB6FFC7C0CCFF7DFD08F8A8FD08FFA8FD09F852FD%1BFF27FD09F8FFFF7DFD08F87DFD0AFF52FD09F827FD11FFBCFC8CB58CB0%CACEC0C7FF7DFD08F87DFD09FF7DFD09F852FD1BFFFD0AF8A8FF52FD08F8%A8FD0BFF27FD09F852FD10FFCABCB58CB0C3CFC0C7FF7EFD08F87DFD0AFF%A8FD09F87DFD1AFF7DFD09F827FFFF7DFD08F8A8FD0CFF27FD09F852FD11%FF93FC93FFC0C6FF7EFD09F8522752275227522752A8FF7DFD0AF8522752%2752275227522752275227522752275227522752275227FD0AF827FFFF52%FD08F82727522752275227522752275227FD0AF87DFD0FFFC4B08DFFC7C6%FFA8FD13F8FFFFA8FD2EF852FFFF7DFD21F87DFD0EFFB68CC4C9C6CFA8FD%14F8A8FF7DFD2EF87DFFFF52FD22F8A8FD0CFFC48CBDCFC6CFFFFD15F8FF%FFA8FD2DF827A8FFFF7DFD23F8FD0CFF8DB5CAC7CFFFFD16F8A8FF7DFD2D%F87DFFFFFF52FD24F8FD0AFFC3FCCACECEFF27FD16F8FFFFA8FD2CF87DFD%04FF7DFD24F827FD08FFCAB0BCCFC9FF27FD17F8A8FF7DFD2AF827A8FD05%FF52FD25F827FD07FFC393FFCFFF52FD0427522727275227272752272727%5227272752272727FFFFA8FD052752272727522727275227272752272727%5227272752272727522727275227272752527D7DFD08FF7D272727522727%275227272752272727522727275227272752272727522727275227272752%27277DFD06FF8CCACFFD7CFFBCC3FD7DFFC4BCFD7EFFBDCAFD7DFFCAC3FD%05FF7D5252FF7DA8A87D527D527DA85252A87D7DFFA87DFF52527DA8527D%52A87DFF7D527DFF52FFA87DFFFFFF7D277DFFA85252A87D7DFF7D7DA87D%FD04527D7DA8A85252A87D7DFF52FF7D5252FD0DFF7D5252FF52A8FF7DA8%7D52527D7D5252A87D52FF7D5252FF7D5252A8FFFFFFC3FD05FF7DF87DF8%52277D52F8A8F8277DF85252277DF8FFF852272752F8A852F8A8522752F8%7DF852F87D7DF8FFFFA8F87DF852F8525227F852FF52F8A8F87D52F87D7D%F8A8F852F8522727A8277DF8522727FD0BFF7DF87DF8522752A8F87DF87D%A87DF87DF85252277DF87DF85227522727FFFFCAFD06FF7DF8FFF852F87D%5227FF2727FFF87D7D2752F827F8522752A8F8FF52F8FF7D2752F8FFF852%F8275227FFFF7DF87D7D52F87D7DF82727FF2727A8F8A8A8F8FF7DF87DF8%7D522752F852F87DF87D7D7DFFFF7D52277D52527DFFFF7DF8FFF85227F8%F8F852F8A8FF7DF8A85227522752F8FF527DF8A82727FD09FF7DF827F852%277D7DF8FF2752FFF87D7D277DF8F8F852272727F8FF7DF8FF522752F8A8%275227F82727FFFFFF52F8A8FFF87D7D272752FF5227A8F8A87DF8A8A8F8%A8F87D275227F8F827A8A8F8A8FFFFFF52277D2727A8FFFFFF7DF852F852%52F8F8F87DF8527DA8F852F87D522752F8FFFFA8F8272727FD09FF7DF87D%F852F87D5227FF2727FFF87D52275227F8FD04277DF8FF52F8FF52F852F8%FFF8522727F852FFFFA8FF27F87DF87D7DF82727FF2727A8F87D7DF8FF7D%F87DF87D52272727F8F8A8FF7DF87DFFFF52275227F8277DFFFF7DF8A8F8%52FD042752F87DFF7DF852F852522752F8FF7D7DF87D2727FD09FF7DF8A8%2752277D7DF8FF2752FFF87DA8275227FF5252277D7DF8FF7DF8FF522752%F8FF2752277DF827FFFF7DF8FFF852F8A87D272752FF5227FFF8A87DF8A8%A8F8A8F8A85252277D52F87D27A85227FFFF52277D27277DFFFFFF7D27FF%F852527DA8277DF8A8FFA8F8FF2752522752F8FFF827277D5227FD09FF7D%F8A8F8522752F827FF2727FFF82727275227FF522727527DF8FF52F8FF52%F87DF852F87DF8A82727FFFF7DF852F87DFD0527F87D27F852F8A87DF8FF%7DF8A8F82727522752A8F87DF852F852FFFF52272727F8A8FFFFFF7DF8FF%F85227A8FFF852F8277D52F8A8272752F87DF852F852F87D5227FD09FFA8%A8FFA8A8FF7D7DA8FFA8A8FFFF7D7DFFFFA8FFFD06A8FFA87DFFA8A8FFA8%52A8FFA8FFFF7DFFFFFFA87DA8FFA87D7DFFA87D7DFF7D7DA8FFA8A8FFFF%7DFFA87D7DFFA8A8FFA8FFFF52A8FD04FF7D7DA8A8FD04FFA8A8FFFD04A8%FF7DFF7D7D7DA87DFFFD04A8FFA852A8FFFD04A8FD12FFA8FD4FFFA8FD1E%FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 68 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/agm_sethalftone{ 	dup	begin		/_Data load		/Thresholds xdf	end	level3 	{ sethalftone }{		dup /HalftoneType get 3 eq {			sethalftone		} {pop} ifelse	}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ imageDict begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height { 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 	dup type /dicttype eq		{			AGMCORE_tmp			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			AGMCORE_tmp exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	AGMCORE_tmp 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{	/indexed_colorspace_dict AGMCORE_gget dup null ne {		/CSD known	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 216 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_gradientcache 32 dict def/AGMCORE_in_pattern false def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/add_grad{	AGMCORE_gradientcache 3 1 roll put}bdf/exec_grad{	AGMCORE_gradientcache exch get exec}bdf/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&usrshfill /shfill load def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not currentpagedevice/OverrideSeparations known and							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		/AGMCORE_IsSeparationAProcessColor			{			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or			}def		level3 {			/AGMCORE_IsCurrentColor				{				gsave				false setoverprint				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor				currentgray 0 eq 				grestore				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				clonedict				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					currentdict end					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop								[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 xpt					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 xpt						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/currentpagedevice currentpagedevice def/getrampcolor {/indx exch def0 1 NumComp 1 sub {dupSamples exch getdup type /stringtype eq { indx get } ifexchScaling exch get aload pop3 1 rollmul add} forColorSpaceFamily /Separation eq	{	sep	}	{	ColorSpaceFamily /DeviceN eq		{		devn		}		{		setcolor		}ifelse	}ifelse} bind def/sssetbackground { aload pop setcolor } bind def/RadialShade {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/r2 exch def/c2y exch def/c2x exch def/r1 exch def/c1y exch def/c1x exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifc1x c2x eq{c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse}{/slope c2y c1y sub c2x c1x sub div def/theta slope 1 atan defc2x c1x lt c2y c1y ge and { /theta theta 180 sub def} ifc2x c1x lt c2y c1y lt and { /theta theta 180 add def} if}ifelsegsaveclippathc1x c1y translatetheta rotate-90 rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{/max { 2 copy gt { pop } {exch pop} ifelse } bind def/min { 2 copy lt { pop } {exch pop} ifelse } bind deframpdict begin40 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavec1x c1y translatetheta rotate-90 rotate/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def/c1y 0 def/c1x 0 def/c2x 0 defext0 {0 getrampcolorc2y r2 add r1 sub 0.0001 lt{c1x c1y r1 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2y r1 add r2 le{c1x c1y r1 0 360 arcfill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r1 neg def/p1y c1y def/p2x r1 def/p2y c1y defp1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y p1x SS1 div neg def/SS2 90 theta sub dup sin exch cos div def/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y p2x SS2 div neg defr1 r2 gt{/L1maxX p1x yMin p1y sub SS1 div add def/L2maxX p2x yMin p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifc1x c2x sub dup mulc1y c2y sub dup muladd 0.5 exp0 dtransformdup mul exch dup mul add 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if pop/hires exch defhires mul/numpix exch def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} if/xInc c2x c1x sub numsteps div def/yInc c2y c1y sub numsteps div def/rInc r2 r1 sub numsteps div def/cx c1x def/cy c1y def/radius r1 defnewpathxInc 0 eq yInc 0 eq rInc 0 eq and and{0 getrampcolorcx cy radius 0 360 arcstrokeNumSamples 1 sub getrampcolorcx cy radius 72 hires div add 0 360 arc0 setlinewidthstroke}{0numsteps{dupsubsampling { round cvi } ifgetrampcolorcx cy radius 0 360 arc/cx cx xInc add def/cy cy yInc add def/radius radius rInc add defcx cy radius 360 0 arcneofillrampIndxInc add}repeatpop} ifelseext1 {c2y r2 add r1 lt{c2x c2y r2 0 360 arcfill}{c2y r1 add r2 sub 0.0001 le{c2x c2y r2 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r2 neg def/p1y c2y def/p2x r2 def/p2y c2y defp1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y c2y p1x SS1 div sub def/SS2 90 theta sub dup sin exch cos div def/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y c2y p2x SS2 div sub defr1 r2 lt{/L1maxX p1x yMax p1y sub SS1 div add def/L2maxX p2x yMax p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifgrestoregrestoreendendend} ifelse} bind def/GenStrips {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/y2 exch def/x2 exch def/y1 exch def/x1 exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifx1 x2 eq{y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse}{/slope y2 y1 sub x2 x1 sub div def/theta slope 1 atan defx2 x1 lt y2 y1 ge and { /theta theta 180 sub def} ifx2 x1 lt y2 y1 lt and { /theta theta 180 add def} if}ifelsegsaveclippathx1 y1 translatetheta rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{rampdict begin20 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavex1 y1 translatetheta rotate/xStart 0 def/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def/ySpan yMax yMin sub def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defxStart 0 transformxEnd 0 transform3 -1 rollsub dup mul3 1 rollsub dup muladd 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if popmul/numpix exch defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} ifext0 {0 getrampcolorxMin xStart lt{ xMin yMin xMin neg ySpan rectfill } if} if/xInc xEnd xStart sub numsteps div def/x xStart def0numsteps{dupsubsampling { round cvi } ifgetrampcolorx yMin xInc ySpan rectfill/x x xInc add deframpIndxInc add}repeatpopext1 {xMax xEnd gt{ xEnd yMin xMax xEnd sub ySpan rectfill } if} ifgrestoregrestoreendendend} ifelse} bind def}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		6 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get 0 get null eq {					dup /Names get names_index get /name xdf					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq					or or or not {						/AliasedColorants false def						exit					} if				} if			} for			AliasedColorants {				dup begin				/Names new_names def				/AliasedColorants true def				/LookupTables new_LookupTables def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				currentdict /NComponents known not {					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			Names {				AvoidAliasedColorants {					/currentspotalias current_spot_alias def					false set_spot_alias				} if				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				AvoidAliasedColorants {					currentspotalias set_spot_alias				} if				/names_index names_index 1 add def			} forall			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				/setcolor ldf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSD known {			CSD get_csd /Names known {				CSD get_csd begin				currentdict devncs				AGMCORE_host_sep{					4 dict begin					/devnCompCnt Names length def					/NewLookup HiVal 1 add string def					0 1 HiVal {						/tableIndex xdf						Lookup dup type /stringtype eq {							devnCompCnt tableIndex map_index						}{							exec						} ifelse						setdevicencolor						currentgray						tableIndex exch						HiVal mul cvi 						NewLookup 3 1 roll put					} for					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt					end				}{					level3					{					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{					[/Indexed MappedCSA HiVal						[						Lookup dup type /stringtype eq							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx						]cvx					]setcolorspace_opt					}ifelse				} ifelse				end			}{			} ifelse			set_crd		}		{			/MappedCSA CSA map_csa def			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {			begin			CSD get_csd begin			map_indexed_devn			devn			end			end		}{			AGMCORE_gget/Lookup get 4 3 -1 roll map_index			pop setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		1 dict begin		/name xdf		AGMCORE_CSA_cache		{			0 get name eq {				exit			}{				pop			} ifelse		}forall		end		end	}{		pop	} ifelse}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get		dup wrap_paintproc	}if}def/wrap_paintproc{   statusdict /currentfilenameextend known{	  begin		/OldPaintProc /PaintProc load def		/PaintProc		{		  mark exch		  dup /OldPaintProc get stopped		  {closefile restore end} if		  cleartomark		}  def	  end  } {pop} ifelse} def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse	Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	Adobe_AGM_Core begin	/setcustomcolor	{		dup /customcolor_tint exch AGMCORE_gput		current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.23 0%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.23 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.23 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpacking/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel		2 copy known not			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 2 sub 1 index lt				{ pop count 1 sub }			if			dup /argCount exch def			dup 0 gt				{				exch 1 index 2 add 1 roll				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count 1 sub /restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup begin		mark			{				(*) { pop stop } 128 string /Category			resourceforall			}		stopped		cleartomark		currentdict eq dup			{ end }		if		not		}		{ false }	ifelse	def/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end	userdict /Adobe_CoolType_Data 10 dict dup		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end put	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.19 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 25 add dict copy }	{ 25 dict }ifelse putAdobe_CoolType_Utility	begin	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {			((Hex) 57 StartData			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec			} }			{ {			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	currentcolorspace 0 get dup /DeviceCMYK eq {		pop 4	}	{		/DeviceRGB eq {			pop 3		}{			1		} ifelse	} ifelse} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/srcDataStrs xdf	/dstDataStr xdf	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/samplesNeedDecoding		0 0 1 origDecode length 1 sub {			origDecode exch get add		} for		origDecode length 2 div div		dup 1 eq {			/decodeDivisor 2 origBitsPerComponent exp 1 sub def		} if		2 origBitsPerComponent exp 1 sub ne	def	[		0 1 dsCnt 1 sub [			currentdict /origMultipleDataSources get {				dup currentdict /origDataSource get exch get dup type			}{				currentdict /origDataSource get dup type			} ifelse			dup /filetype eq {				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx			}{				/stringtype ne {					/exec cvx				} if				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx			} ifelse		] cvx /for cvx		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [			0 1 Width 1 sub [				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx				currentdict /origMultipleDataSources get {					0 1 dsCnt 1 sub [						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs								BitsPerComponent /decode_image_sample load /exec cvx							} ifelse						} if					] cvx /for cvx				}{					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx							currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 					[						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx								BitsPerComponent /decode_image_sample load /exec cvx								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx							} ifelse						} if					] cvx /forall cvx				} ifelse				currentdict /convProc get /exec cvx				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx					currentdict /convProc get /filter_indexed_devn load ne {						255 /mul cvx /cvi cvx 					} if					/put cvx 				] cvx /for cvx			] cvx /for cvx			currentdict /dstDataStr get		] cvx /if cvx	] cvx bind	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	2 dict begin	dup dup	/dstDataStr exch /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						dstDataStr srcDataStrs devn_alt_datasource /exec cvx						] cvx 0 () /SubFileDecode filter def					/MultipleDataSources false def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA map_csa 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							[							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							dstDataStr srcDataStrs devn_alt_datasource /exec cvx							] cvx						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource [								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								dstDataStr srcDataStrs devn_alt_datasource /exec cvx								] cvx 0 () /SubFileDecode filter def							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get map_csa				}{					/CSD get get_csd /Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin					CSD get_csd begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: ASAlogo(new).ai 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about='uuid:6c126c2a-35b6-11da-a098-00112432aee4'
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
  <pdf:Producer>Adobe PDF library 6.66</pdf:Producer>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:6c126c2a-35b6-11da-a098-00112432aee4'
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:6c126c2a-35b6-11da-a098-00112432aee4'
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2005-08-04T07:09:25-05:00</xap:CreateDate>
  <xap:ModifyDate>2005-10-05T15:44:13Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:MetadataDate>2005-10-03T20:36:38-05:00</xap:MetadataDate>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>100</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgECWAJYAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABACWAAAAAEA&#xA;AQJYAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqxG9863&#xA;CXMsdtDG0SMVR2JPIDauxGcBrPbHJHJKOOMTEEgE3v5u8xdkxMQZE2hH86au3RYU+Sn+LHNfP2w1&#xA;h5CA+B/SS3jsrEO9QfzbrrdJ1T5In8Qcxp+1WuPKYH+bH9ILYOzcI6faVWx1XWLtpZbjUDbWNsjT&#xA;Xt0xWNIolBZmZqADYHrmZ2Vq+0Ndl4RlkID6jsKHy5no06nFgwxvhF9Hn1x/zmb+VFtPLbRWWtXU&#xA;cLtGlzHBb8JVU0Ei+rcpJRqVHJQfEA56VGPCAO558myp/wDQ6v5Wf9WrXP8ApHtP+yvJIZZ+Wn/O&#xA;Rnkj8w/MTaBotjqdveLbvdGS9it0i4RsqkVinmavxj9nFXqmKsF83/nh+VvlGd7XWdfgW+jNHsrc&#xA;PczK38rpAJOB/wBemKsCu/8AnMv8pYCfSttXuqGlYraEVHj+9nj2xVDf9Dq/lZ/1atc/6R7T/srx&#xA;V3/Q6v5Wf9WrXP8ApHtP+yvFXf8AQ6v5Wf8AVq1z/pHtP+yvFXf9Dq/lZ/1atc/6R7T/ALK8Vd/0&#xA;Or+Vn/Vq1z/pHtP+yvFXf9Dq/lZ/1atc/wCke0/7K8Vd/wBDq/lZ/wBWrXP+ke0/7K8Vd/0Or+Vn&#xA;/Vq1z/pHtP8AsrxVOPKH/OVv5d+avM2neXdP07V4r3UpRBBJcQ2yxBiCauUuXYDbspxV6t/iHRx5&#xA;h/w81yq6wbUX6Wh2ZrcyGIuvZuLrRqdKjxxVMsVdirsVdirsVdirsVdirsVQuqajbabpt1qF03G3&#xA;tInmlP8AkopY099sEpACy24MMss4wj9UjXzfJWredvNOpX1zdTapdqLmRpPQWeQRoGYsEVeVAq9A&#xA;M0cs0ibt9j0/ZenxQERCPpHPhF+96R+UNpewaNqnmi9mkknuf9x+nmVmY9jLIORPgAD7EZhdp6w6&#xA;fSTnfql6Y/HmfgHmfaGcZZYaeIAEfXKvsCf55e4bsVRFjY3F7dJbwLV3PXsB3J9hmXotFk1OUY8Y&#xA;9R+zzLVmzRxxMpPAv+ckPzot7lZPy88pXHLR7Z6a7qMZ/wB67hTvChH+6o2HxH9ptvsrVvYOzez8&#xA;ekxDHD4nvPe8rqM8ssuIvnjM9odir3X/AJw2/wDJuTf9sq5/5Ow4q9b/AOcsPzi1Pypplp5U8v3L&#xA;WmsavG097eRNxlhs6lFEZG6tK6sOQ3AU+NQq+MCSSSTUnck9a4q1irsVdirsVdirsVdirsVdir0D&#xA;8gf/ACcnlP8A5jl/4i2KvZf+cute1Ty3+ZPk/X9GnNrqtnZyPDcL1+GY/Cw7qQ7BgeoJGKvc/wAn&#xA;fzY0f8yPKyana8YNUt+MWr6fXeGYjqtdzG9Ko30dQcVZ5irsVdirsVdirsVdirsVeV/85A+ZPqPl&#xA;q30WF6T6pJWUDr6EJDH/AIJ+P45ha3JUa73rvZDReJnOU8sY+0/sv7HzxmqfSXu/5beZdK17y4NH&#xA;bTZbGDy/ahmuo5Q0byOe4Kijyvyb78x+1dNgz6cyy8URiiTsevy6l4DtnRZNPn8UTEzmlyI3A+fK&#xA;IRmeXsV0UcksixxqXkchVUdSTk8eOU5CMRcjyDGUgBZ5PNv+cgvzfTyVpc3kjy3cD/FF/GBreoRH&#xA;4rOCRaiGNh9mWRT16qu/UqV9b7C7GjosW++WX1H9A8h9rzGt1ZzS/ojk+Ss3jhOxV2Kvdf8AnDb/&#xA;AMm5N/2yrn/k7DiqRf8AOUmpSXv5268rEmOzW1toQeyraxsw6/78djiryfFWS/l35B1vz55qtfLm&#xA;jmNLmcNJLPMSI4ooxV5GpU7dgOpxV9E2n/ODlv6I+ueb3Mx6iGxAUe1WnJPz2xVX/wChHdK/6m6f&#xA;/pCT/qtirv8AoR3Sv+pun/6Qk/6rYq7/AKEd0r/qbp/+kJP+q2Ku/wChHdK/6m6f/pCT/qtirv8A&#xA;oR3Sv+pun/6Qk/6rYq87/PH/AJxysvyz8p2mvQa7Jqb3N/HYmB7dYQokhml58hI/T0aUp3xV4dir&#xA;0D8gf/JyeU/+Y5f+Itir1X/nN7/lKvLX/MDN/wAnsVeK/ln+Y2u/l/5qttf0luQT93e2bMRHcW7E&#xA;c4np96n9lqHFX6F+SPOmhec/LVn5h0Sb1bO7X4kO0kUi7PFKv7Lodj94qCDiqfYq7FXYq7FXYq7F&#xA;XYqwb81PLfk+50G813XbUyXFhblbeZJHjetT6cex4/FI9NweuY2pxwMTKXR3/YGt1Mc0cOGVCctx&#xA;V+8/IPl3NM+sPevK2i/4e8lWNg68NQ1Ol/qFRRgGFIYz/qruR45z/tRq+DHHTjnL1S/3o/S+f63U&#xA;/mdVKf8ABD0R/wB8fn9iJzh0I+8j1Oy8laxq+g3VjBrsMDmC61J2itbVafHLIwR/iVKsKilaV2rn&#xA;oXshoMPCc1iWTl/V/afu+Lou1c874OUfvfn3f3d1eX1xd3c7XV1cSPLPcuSzSSOxZnYt8RLE13zu&#xA;HTKmlaXqOralbaZptu91f3kiw21vGKs8jmiqMVRvm/yxe+VvMl95fvnSS805xFcNHUp6nEMwUnqA&#xA;TSuKpPir3X/nDb/ybk3/AGyrn/k7DirF/wDnJSJ4/wA7/NCuOJM1uwHs9pCyn6QcVeZYqz78kfzJ&#xA;g/Lvz7ba/dWz3Vg0MlrfRRU9X0paHlHyIXkropoTuNtuuKvru0/5yr/I+eBZJddktHPWGayvC42r&#xA;uYopE+5sVR0f/OSn5ISIHXzTCA24DQXan6Q0IIxVGJ/zkB+TLorDzZZAMARUup38QVBGKoyP86vy&#xA;kkKhfN+kgvQDldxKN/EsRT6cVZFo/mby3ral9G1Wz1NFFWazuIrgAe5jZvHFUzxV8/8A/Oav/krN&#xA;K/7blv8A9Ql3ir4rxV6B+QP/AJOTyn/zHL/xFsVet/8AOb1ndjXvLN76L/VDazwieh4eoJAxTl0r&#xA;xNaYq+ZMVenfkT+c2oflv5kDTF7jy3qDKmrWQNePYXEQ/wB+R/8ADDbwIVffml6pp+q6dbalptwl&#xA;1YXkazW1xEeSOjioYHFUVirsVdirsVdirsVeJ/8AORPmeiWHluB92/0y9A8BVYV/4kxHyzXa7Jyi&#xA;937G6H6s5/qx/T+j7XnX5Z+WU8webbW3uB/uPtQbzUCdx6MNCQfZ2ov05hYgLuX0x3PuD03beuOn&#xA;00pR+uXpj7z+rm9i1K9a9vZrltvUb4V8FGyj6BnmHaOsOpzyyn+I/Z0+x47BiGOAj3N6fp8l5Ky8&#xA;lihiUyXFw5okaLuWYnbLey+zMmsy8EOXU9w/HIMdTqI4o2XzR/zkD+eUfmiQ+UfKshj8n2TgzTiq&#xA;vfzof7x+/pKfsL3+0f2Qvrui0WPTYxjxioj7fM+by2bNLJLilzeIgEkACpOwA61zLan2x/zjN+Q4&#xA;8n6bH5r8xW//ADtF/H/otvIPisbeQfZoek0in4+6j4f5qqvmb8/v/JyebP8AmOb/AIiuKvP8Ve6/&#xA;84bf+Tcm/wC2Vc/8nYcVR3/OZXk260/z7aeaI4ybDW7ZIpJh0F1aj0yp8Kw+mV8d/DFXz5irsVdi&#xA;rsVdirsVV7G+vrC6jvLG4ltLuFg0NxA7RyIw6FXUhgflir7A/wCcYvz/ANV813TeTvNk4uNZjiMu&#xA;laiQA9wkYrJFLTZpEX4g1PiUGu4qVUb/AM5q/wDkrNK/7blv/wBQl3ir4rxV6B+QP/k5PKf/ADHL&#xA;/wARbFX3p578kaF528sXfl7WoudpdLVJFp6kMq/YmjJrR0P9DsTir88fzF/L/XfIfmm68v6wn72E&#xA;87a5UER3EDE8Jo69mpuOxqDuMVYzir3z/nGb8+W8oajH5T8xXB/wvfy/6LcyN8NjPIftVPSGQ/b7&#xA;Kfi/mqq+1wQwBBqDuCOhGKt4q7FXYq7FVOeeK3gknmYJDEpeRz0VVFST8hgJplCJkQBzL5A83eYJ&#xA;fMHmTUNXkqBdSkxKeqxL8Ma/QgAzRZZ8UiX2ns7RjTYI4h/CN/f1+16d+SUekSeXdZt4Lj09Zl4y&#xA;3jvG/ppaxmir6gHGrMSaVqfDbMfXYfE0mSMZCBrcnlwh5X2mlkGfHIi8Q2juLMj5fj7WTWFhcX1y&#xA;tvAKsd2Y/ZVR1Y+2ecaDQZNVlGPGN/sA7y67NmjjjxSeAf8AOQ355W95FN5C8mXFdFibjrOrRNve&#xA;yDZoUYf7pU/aP7fb4ftevdm9nY9JiGOHxPUnveW1GolllxF885ntD6h/5xX/ACG+tPb/AJgeZ7f/&#xA;AEaMiTy9Yyj+8YdLt1P7K/7qHc/F2Wqr6zxV+df5/f8Ak5PNn/Mc3/EVxV5/ir3X/nDb/wAm5N/2&#xA;yrn/AJOw4q+x/NvlHy95t0OfQ9fs1vdOuKFo2qGV1+y8bijI69iDir5n8z/84R3ouHk8r+Y4mt2J&#xA;MdtqcbI6DsDNAHD/AD9IYqxG4/5w2/NuIvwn0mfj09O5lHL5c4U/GmKpfP8A84kfnRGAUsLSYnqE&#xA;u4gR8+ZTFUDL/wA4sfnmjlV8urKB+2l7YgH/AIKdT+GKpdP/AM46/nVDGZH8q3RUdkeCRv8AgUkY&#xA;4qwXWNE1jRb59P1exn06+joZLa6jeGQA9DxcA0PY4qgsVZJ+W2uTaD+YHl3V4n4G01C3eQ9KxGQL&#xA;Kp9mjLA4q+sP+c1f/JWaV/23Lf8A6hLvFXxXir0D8gf/ACcnlP8A5jl/4i2Kv0UxV53+dn5Q6Z+Z&#xA;PlZrJuMGuWQaXR78/sSEbxvTf05KUbw2PbFX5+a1o2qaJqt1pOq2z2mo2UjQ3NvIKMrr+sHqCNiN&#xA;xiqCxV9Zf84sfn0bhbf8v/M9xW4UCPy/fysPjUCgtHY/tD/dR7/Z7LVV9RYq7FXYq7FWB/nRqGq2&#xA;3km4tdNtp7iW/YQTvBG7+lB9qRmKg0DAcN/HMbVyIhQ6vQ+zOHHLViWQgCG4sjc9P1/B8zWlndXd&#xA;3FZ20TS3U7rFFCo+JnY0Cj6c04BJoPqeTJGETKRqIFkvoPQPLQ0LSLfyxYAS30pEurTr0ef+Wv8A&#xA;JF0/tzn+29RPPkGiwbm/X7+73R6+fufO9VrfHyHUT2gNoDuj+uTxz/nIb87IdHt7r8vfJ9zW6NYv&#xA;MmsREVqRRrSJh4VpIR0+z15Z1nZHZOPRYuGO8j9Uu/8AZ3PMarVSzSs8ugfMGbVxntf/ADjh+Rcv&#xA;nzWRrmtwsvlLTZB6oO31ydaH0FP8g29Qjt8I3NQq+5oooookiiRY4o1CxxqAqqqigAA2AAxVfir8&#xA;6/z+/wDJyebP+Y5v+Irirz/FXuv/ADht/wCTcm/7ZVz/AMnYcVfb+KuxV2KuxV2KuxV8pf8AOcM+&#xA;kGXypApjOroLt5AtPVFu3pBOdN+JdW41/wAqnfFXyxiqI08yi/tjCA0olT01boW5CgP04q+zP+c1&#xA;f/JWaV/23Lf/AKhLvFXxXir0D8gf/JyeU/8AmOX/AIi2Kv0UxV2KvCv+cl/yKXzppTeZdAgH+KtO&#xA;j/eRIADe26b+mfGVB/dnv9n+Wir4hZWVirAqymjKdiCMVbjkkikWSNikiEMjqSGDA1BBHQjFX3J/&#xA;zjd+eqee9I/QOuzBfNunRgs7UH12BdvWUD/di/7sX/ZDqQqr27FXYq7FUg89eaIfLPli91V6GaNe&#xA;FpGf2532jH37n2ByrNk4Ikux7K0B1WojjHLr7uv473k/5VeWLu3jPm6/Qz6xqbOujxvu9XJ9W6av&#xA;c1IX6T3zm9dqpYIDgHFny7QH3y+H42ex7e1sZH8tDbFjrj+HKH62P/n7+ckfkTTpvKHlu5D+cL+P&#xA;/cvqMbVayhkFQiN2mdTUHqo+LqVpndi9jx0cLPqyy+qX6B5ffzeJ1mrOU7bRHIPkMkk1O5PU5u3D&#xA;axVkOm/mL+YOl2MVhpnmfVrGxgBEFpbX1zDEgJLEJGjqq7knYYqiv+Vsfmn/ANTlrn/cSu/+qmKv&#xA;pT/nDXzZ5q8wf4v/AE9rN9q/1b9HfVvr1zNc+n6n1rnw9Vn48uC1p1oMVeAfn9/5OTzZ/wAxzf8A&#xA;EVxV5/iqP0bXtd0O7N7ouo3Wl3hQxm5sppLeXgxBK84mVqGg2riqef8AK2PzT/6nLXP+4ld/9VMV&#xA;d/ytj80/+py1z/uJXf8A1UxV3/K2PzT/AOpy1z/uJXf/AFUxV3/K2PzT/wCpy1z/ALiV3/1UxV3/&#xA;ACtj80/+py1z/uJXf/VTFVr/AJrfmi6Mj+cNbZGBDKdSuyCD1BHqYqx29vr2+uZLq9uJLq6lNZZ5&#xA;naSRj4szEk4qoYqyf8sfLdx5k/MHy/osCGT63fQ+sB2hRhJM3+xiVjir6t/5zV/8lZpX/bct/wDq&#xA;Eu8VfFeKojT9R1DTr2G+0+5ls723bnBdW7tFLG38yOhDKfkcVZH/AMrY/NP/AKnLXP8AuJXf/VTF&#xA;Xf8AK2PzT/6nLXP+4ld/9VMVd/ytj80/+py1z/uJXf8A1UxVjV3d3V5dTXd3NJc3Vw7S3FxKxeSS&#xA;RzyZ3diWZmJqScVUcVR2h63quhavaavpNy9pqNlIJba4j+0rD57EHoQdiNjir9A/yV/N7S/zJ8rr&#xA;epxt9bswsesaev8AuuQjaSOpJMUlCV8NwemKvQ8VdiryDzfG/n3z6mgIzDy55cIk1aVKn1J229Ja&#xA;ftn+7Xw+LNbqcgJ3+mHPzPcPM8g9p2cR2fo/G/y+baHlHv8Ad/Ef81Afnh+bln+WehiGxETectTh&#xA;9LS7NeLJYWqjgsrJQii0ooIozf5KnIaLRETOfL/ey2r+ZHpEf749S8tqNRxekHbmT/OPeXw/eXl3&#xA;e3c15eTPcXdw7S3FxKxeSSRzyZ3ZqlmYmpJzauIo4q7FXYq7FX1V/wA4Mf8ATbf9uv8A7G8VeK/n&#xA;9/5OTzZ/zHN/xFcVef4q7FXYq7FXYq7FXYq7FXYqn/lnyD5180XCQaBot3qLOQBJFE3pLXu8ppGg&#xA;36swGKvsr/nHz/nHyL8vIpNb1uSO7803cfp/u/ihtIWoWjjYgcnanxv9A7kqpV/zmr/5KzSv+25b&#xA;/wDUJd4q+K8VdirsVdirsVdirsVdirJfy98/a95E80WvmDRZKTw/BcW7E+ncQMQXhkA6q1PoNCNx&#xA;ir9DPIHnvQfPPle08w6LLyt7gcZoGp6kEygepDKOzIT9IoRsRiqI8365No+iyS2ietqdywtdLtxu&#xA;ZLqXaMfJftN7A5Xlnwjbn0c7s7SjNlAkaxx9Uj3RHP8AUPMqPkryjbeXNFitOXr3jsbi/uju0ty/&#xA;23JP3L7e+V4sAAF7/r72ztPtGWpymXKPKI7ojkP1pjd+X9AvJ2uLvTbW4nanKWWCN3NBQVZlJ6Zk&#xA;OtUf8J+Vf+rNY/8ASND/AM04q7/CflX/AKs1j/0jQ/8ANOKu/wAJ+Vf+rNY/9I0P/NOKu/wn5V/6&#xA;s1j/ANI0P/NOKu/wn5V/6s1j/wBI0P8AzTiqLsdJ0rT+f1CygtPVp6noRJFy41py4AVpU0xVQuPL&#xA;fl25mee40uzmnkNZJZIImdj4lipJxVT/AMJ+Vf8AqzWP/SND/wA04q7/AAn5V/6s1j/0jQ/804q7&#xA;/CflX/qzWP8A0jQ/804q7/CflX/qzWP/AEjQ/wDNOKu/wn5V/wCrNY/9I0P/ADTirv8ACflX/qzW&#xA;P/SND/zTirv8J+Vf+rNY/wDSND/zTirv8J+Vf+rNY/8ASND/AM04qiLfQ9FtgBbafbQAHkBHDGlG&#xA;8fhA3xVHYq7FUPe6dp9/EIb62iuolbmsc6LIoYAjkAwIrQnFUD/hPyr/ANWax/6Rof8AmnFXf4T8&#xA;q/8AVmsf+kaH/mnFXf4T8q/9Wax/6Rof+acVd/hPyr/1ZrH/AKRof+acVd/hPyr/ANWax/6Rof8A&#xA;mnFXf4T8q/8AVmsf+kaH/mnFXf4T8q/9Wax/6Rof+acVd/hPyr/1ZrH/AKRof+acVd/hPyr/ANWa&#xA;x/6Rof8AmnFUZY6ZptgjJYWkNojmrrBGkYYjuQgFcVQp0w3OuDUbpapZIYtOjNCA0gHrTf6xFEXw&#xA;Ab+bIcNys9HL8fhw8Ef4t5fDlH9J+Hcu8yaq+keXdU1ZIxK+n2c90sRNAxgiaQKT78cm4j5y8sfn&#xA;b+aczfl9rmoajZ3WnedtYk0u50gWaxLbIl1Hb84plcyMSJC3xHb3xVDJ/wA5D/mQfyj0fzOZrX9K&#xA;3vmJ9Knb6uvA2ywCQAJXZuR64qyz/F/5vf8AK7P+Vc/4nsvR+qfpD9Ifopa8ac/S9L6x4bcuf0Yq&#xA;wuz/AOcg/wA1rjyhD+YJvbJdPl8ypoP+HPqgMYia2+tep9Z5+ryp8H4+2Ko/WP8AnKTXNGufzJ0m&#xA;9eA6to+oS2nlMCIAFI7x7dxLv8ZjjCv774qiE/Ob80devLXTtO1O10h7XyiPMt3crZpcPcXCwiVo&#xA;iJG4xoxYU4io9+yqh5n/ADt/Nez/ACZ8s/mTa6nYxNq9w2m3OlfUQw9WOS7U3AmaUn4ltF+Dh1Na&#xA;9sVZL5t/ND8xvJXn+Hy3fajaa1DB5X1DXbiX6mLQS3FtHeyxLxWSUotLZFNG338cVY55e/O380Y4&#xA;/wAv9Z1LUbS/sfPc+oQS6YLNIRZ/UrgW6tFMjF3rzDfH4U98VQGgf85QectT8jWc7y2qeZU8yWWn&#xA;XpEK8JNOvYpnDKldmDwFSR028cVezfn/AOf9f8ifl1ca5oUKSX5uIbYTSqXSBZSQZWXoaEBRXapH&#xA;yxV5trH5sfnH5S0DzBqty8HmXQhpdnf6B5pFoILYz3U1tC8TCFgjBRcuV3rVR7gKpLrH53/mx5eW&#xA;ygutXttSbXvKUXmW1nNlFA9nNMjyCJQpZZVX0iKuN69qYqyj8wPzd89aP+T/AOX/AJlsL2OPV9el&#xA;tE1OYwRMriaBpHojKVWrD9kYqu1jz7+Z2oee/wAx9F0jzBFpNn5RtU1GzDWMF0XjS2MkkBLlCObs&#xA;DzJNKdMVYjcfm9+cdp+SFv8AmJJ5lhmudR1BbGCx/R1ughCPMrt6m4fn6Q24CmKp95+/OD8yo/PH&#xA;nzTdF1O30vTvJVgl9BD9US4a6JMAKyvKfh/vzug/riqG0z/nI7zSPzF8t6fq8sEWjeYNFtJmhjiU&#xA;CK/vLfnG6u1X4mYBeLMQA3tiqCsPz6/Me98tfl7FPqdvpc3mq9u4NS8zTWsTxxLDdCFESP4YVIVv&#xA;iLe243xV7R+UWtfmLf6fqtn56sjDqGmXr29nqPo/V1vbYfYmWP7Pb9ntTFVaf86fy4h8wNoL6m/1&#xA;yO9XSpZltrlrVL9yQtq1yIzCJTxPw8ux8DiqP8pfmZ5Q83em/l6a7vbaUOY739HahDaN6Zo4F1NB&#xA;HBUHanOuKsJ/Mjzv53X83fKv5e+XNRh0aHW7S4u7nU3tku5VMKTOFVJCEpS3/HFXk9h/zlB59j8o&#xA;eVfMGpywGM69c6frnpQIDc2dvFaTEgUPCTjcuKpTttiqK1v/AJyZ85XFr+YOp+X7qAabpV3Y23l5&#xA;zDG4WGWWSJ5txV/VEPIc60rirMfzG80fmr5J/Kn/ABd/ixNSvbz6j6ETadawrD9Y+J91589jTcYq&#xA;k2q/mz+aflrzN5k8uXmsQ6x9U8tS61ZX/wBSit5LecQrInJELIygmh5Dfbpiqn5e/OP8zfNOr/l5&#xA;5TtdWh0q+8zaXdajqWtizhuJOcUl6EVIW4xABbGnTvirb/m7+eCHyR5X1u3j8t+YfMGpTWV5qUls&#xA;kkjW6GARTJAzekKmdw3iV244qz7/AJx8/MXzR5w0/wAxQeYpYrq60PUmsoryKIQtLGK0Lop4Vqv7&#xA;IxV61irH/wAwv+UA8zf9sq+/6hnxV8deUNA0m10n8ldZgg4alqPmho7yfm55rBqMCxjiWKLxB/ZA&#xA;xVKra8s5fyU8u6FHPG2tr5wd20sOv1oK1uqBjDX1OJc8a067Yq96/wDXyf8Atx/8ysVeCaZe2afk&#xA;TaaA88a64vnuOc6WWH1oRDTxEX9GvPj6nwVp12xVlt/+U1n5nuvzQ83yMqjy7rPmlrqMk1lCW0kt&#xA;px7fu7j4j7HFUHoegaTrXmBIdTg+sR2v5creW683TjPDaqY3+BlrSvQ7Yqrecv8A1jbyJ/23Jv8A&#xA;k7qeKs2/PqOSX88XjjUvI/kHVlRFBLFjbakAAB1JxVgGhahYXug/kZptncR3Oo6feay9/Zwusk0C&#xA;yX6yIZUUlkDRozDkPsivTFWJWnkmWy8ufl55vtg31TV9Sazv6E8RdW163ose1XhJA/1Dir7A/wCc&#xA;gvOdz5R/LubUU0WDXrO4uEstSsrrl6Itp0cF34g/thF/2WKvnHzBqAsPLP5neRfKmpNrv5fWllYa&#xA;rpcyt9ZW1ll1Gyd4EmSo40kk5D/IJ68qqpf541LT9Vn8tNpd1FfLpv5b21tqDWzrKLeeOGZXilKE&#xA;8HVpFDKdwSMVZH+ZfmLy/f8A5CflrZ2Op2l1d6XPYDU7eGeOSS2/0Z1/forFo9wR8QGKso0HULDV&#xA;fzG/PDVNLuIr7TZtDYRX1s6zQOfqlPhkQsh3Ruh7YqwfWf8A1jbQf+24/wDyducVR35h39jp/wCZ&#xA;n5zxX9zFaS3+jRxWMc7rE08h+qMEiDkF2KqTRfDFWPSeRZvNl29pCjDU9M/L+w1XTgKhvWtmtmoo&#xA;8XhZ1X3IxVPfKPmXRh+VHkfyP5o0+2PlXzPcagtxrtzJ6JsZ4rpws0Uh+BHTmDVjShofhJxV7L/z&#xA;i75l1/VvJmpWGpXf6UsdA1CTTdI1g1rcW8QBXck8goI4n+UgdsVeMX88C6/rlm0ii7b82LaZbcke&#xA;oY/UuxzCfa41Yb++KvW/+cSdP1dPyw0++k1VpNLka8jh0gwxBY5PrRrKJgPVb7LfCTTf2xVLPzV0&#xA;DSdf/wCcnvIekavB9Z0+50q69eDm8fL04ryRfijZGFGQHY4q8M8g+WrbzP5R8oeXrluEWqeZ9Xtj&#xA;J/Iz6ZYhX/2LUbFVfzd5N/wdo35heWx8UmnL5YF0y7qZ5bb1Z2B/lM0jUxV6N+brflrF/wA4/tb+&#xA;UbzTpr6R9Ll1WCxuo7iQOFIrKiu5T4mI6DfFUh8x6NpflTz9530jSxItpqPkiaVkndrhxIYY5CFm&#xA;mLyhf3dacv4UVUPy2vLPR/zE/JzWdWnjsNJHl+9iN/cusUAdZtUBUyOQtazIOv7Q8cVUbvzfrH5p&#xA;+avy1vfNtpELa81u7soIoVkgWWyD2YrUOWrzZ1LK3bFXrf8AzitZ21jcfmHZWqenbWuvywwR1J4x&#xA;xl1VakkmgHfFXveKqdx9X+ry/WeH1fg3repThwp8XKu1Kda4qlEX+C/RsPS/Rvo+qf0Xx9Dj63IV&#xA;9Cm3PnT7G9cVdH/gv9PP6f6N/T9f3nH0Prld+tP3vjiqL/3Afpn/AI9P016f/Ff1r06f8jOOKoEf&#xA;4G/xEafov/Em1f8Aef693p/xb44qjIv8O/V9Q9L6n9X5y/pXh6XDnT999YptWn2+f04qh4P8G+qf&#xA;Q/R3q/Vd+HocvqlPbf0uP+xxVqb/AAX+hoPX/Rv6F9Q/VefofVfUq1fTr+75fb6e+KoyX9BfpiH1&#xA;fqv6Z9M+hy9P616XxV4V/ecftdNuuKoDS/8AAn6Ruf0V+i/0l8X1z6r9X9etBy9X0/j6deWKqy/4&#xA;Q/RcHD9H/or1R9Wp6P1f1qmnD9jnWvTfFUyvPqf1WX676f1TifX9bj6fDvz5fDT54ql2hf4T/R8v&#xA;6A+ofo7k3rfUPR9HlT4uXpfDWnWuKqen/wCC/Qu/0d+jfQ4H6/8AV/Q4cN6+tw2p1+1iqlZ/4A9C&#xA;6+pfor6v6f8Apvo/VuHp129Xjtxr/NiqM07/AAz+jZv0b9S/RnxfWPq3pehSnx8+HwfZ61xVQf8A&#xA;wX+ho+f6N/QvqfuuXofVfUqfs1/d8uuKr9Y/wh9ai/TP6P8ArVP3P1z0fUpX9n1N+vhiqKi/Qn6W&#xA;f0vq36X9Eepx9P6z6FRStPj4Vp7Yql9z/gT9BD6z+i/0DVqep9X+p8t+X2v3VetcVTTS/wBF/UIf&#xA;0X6H6Pp/o/1Xh6PGp+x6fw0r4Yqlkn+B/wDEiep+jP8AE1P3fL6v9f407V/fUpiqY6T+iPqKfoj6&#xA;v9Rq3p/VOHpVr8VPT+Hr1xVZP+gv0vb+v9V/THBvqnP0/rPCjcvTr8dKcq098VQVj/gj/RvqH6M/&#xA;vm+qeh9X/v8AivP0+H7fHjWm9KYqrXX+FfU1D639R9TjH+lPV9GvGg9L6xy7dOPP6MVS+P8A5Vt6&#xA;E3p/ob6v8P1jj9V4dfg50269K4qjrv8Awh9bk+t/o/656B9b1fR9T6vx35cvi9Pj47UxVQ1H/Af6&#xA;Eg/SX6L/AEHy/wBG+sfV/qnKp+xz/d1rXpiqIb/CfPTeX1DnQfoivo1ptT6t+H2MVRGl/oLnc/ov&#xA;6rz9Q/XPqvp19Xv6vp/tf62+Kv8A/9k=</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:6c126c2a-35b6-11da-a098-00112432aee4'
  xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/'>
  <xapMM:DocumentID>uuid:a6893f28-343a-11da-8cb3-00112432aee4</xapMM:DocumentID>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:6c126c2a-35b6-11da-a098-00112432aee4'
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -75.8409 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 75.8409 li201.053 75.8409 li201.053 0 liclp[1 0 0 1 0 0 ] concat56.0918 26.4366 mo56.0918 58.5 li56.4756 58.5069 56.8599 58.5137 57.2437 58.5206 cv112.712 58.5206 li121.842 58.2217 123.074 57.7159 124.18 57.2383 cv125.389 56.7198 126.446 56.2344 127.407 55.6114 cv128.367 54.9874 129.209 54.2276 129.933 53.3965 cv130.666 52.5665 131.271 51.6651 131.777 50.6465 cv132.274 49.628 132.685 48.4883 132.965 47.0821 cv133.245 45.6758 133.407 44.001 133.439 42.0547 cv133.483 40.1084 133.386 37.8887 133.181 36.0684 cv132.976 34.2471 132.651 32.8257 132.22 31.5943 cv131.8 30.3628 131.271 29.3228 130.677 28.417 cv130.072 27.5118 129.393 26.7422 128.595 26.0616 cv127.784 25.3819 126.867 24.7911 125.799 24.293 cv124.741 23.794 123.554 23.3858 122.022 23.085 cv120.489 22.7837 118.622 22.6236 116.755 22.5616 cv97.7066 21.9253 li97.1119 21.9048 96.5191 21.8663 96.066 21.8096 cv95.6119 21.754 95.3101 21.6856 95.0406 21.6055 cv94.7818 21.5264 94.566 21.4336 94.4146 21.3467 cv94.2525 21.2603 94.1451 21.1788 94.0582 21.085 cv93.9722 20.9913 93.897 20.8848 93.8423 20.7437 cv93.7896 20.6021 93.7349 20.4249 93.7017 20.1905 cv93.6705 19.9566 93.648 19.6651 93.648 19.3877 cv93.648 19.1109 93.6705 18.8482 93.7134 18.6407 cv93.7447 18.4327 93.7994 18.2813 93.8638 18.1587 cv93.9292 18.0367 93.9937 17.9449 94.0904 17.8619 cv94.188 17.7793 94.3072 17.7046 94.4908 17.6294 cv94.6744 17.5538 94.9224 17.4776 95.2457 17.4058 cv95.5806 17.3331 95.9908 17.2647 96.606 17.2203 cv97.2212 17.1758 98.0298 17.169 98.8394 17.169 cv134.303 17.169 li134.303 58.5 li201.053 58.5 li153.907 2.31934 li151.81 2.31934 li151.927 24.3165 li167.37 43.1221 li151.204 43.1221 li151.204 2.35303 li150.663 2.34131 150.124 2.33008 149.583 2.31934 cv94.4498 2.31934 li86.6031 2.64063 85.3472 3.15821 84.2593 3.61524 cv83.0181 4.13477 81.982 4.5752 81.0757 5.13575 cv80.169 5.69532 79.4029 6.37403 78.7227 7.14795 cv78.043 7.92188 77.4712 8.79053 76.9634 9.80469 cv76.4673 10.8189 76.0352 11.9786 75.7334 13.399 cv75.4205 14.8194 75.2369 16.501 75.1719 18.4249 cv75.0967 20.3487 75.1509 22.5137 75.3126 24.293 cv75.4849 26.0718 75.7662 27.4644 76.1431 28.6465 cv76.521 29.8292 76.9854 30.8018 77.525 31.6416 cv78.0645 32.4825 78.6797 33.1895 79.4136 33.816 cv80.1475 34.4429 81.0108 34.9883 82.0147 35.4576 cv83.0181 35.9263 84.1622 36.3184 85.7813 36.6177 cv87.3995 36.917 89.4825 37.0718 91.5552 37.1612 cv109.535 37.938 li110.484 37.9795 111.423 38.0362 112.081 38.1031 cv112.74 38.17 113.107 38.2398 113.388 38.3145 cv113.669 38.3897 113.862 38.4698 114.036 38.5582 cv114.196 38.6465 114.337 38.7427 114.445 38.8428 cv114.554 38.9419 114.629 39.044 114.694 39.1763 cv114.759 39.3091 114.813 39.4717 114.855 39.6929 cv114.899 39.9151 114.931 40.1958 114.931 40.4966 cv114.942 40.7969 114.931 41.1172 114.899 41.378 cv114.866 41.6397 114.813 41.8409 114.747 42.0049 cv114.694 42.168 114.629 42.293 114.542 42.3975 cv114.467 42.501 114.37 42.5831 114.241 42.6641 cv114.11 42.7432 113.938 42.8204 113.723 42.8877 cv113.507 42.9561 113.247 43.0147 112.892 43.0567 cv112.546 43.0977 112.104 43.1202 111.661 43.1202 cv74.9024 43.1202 li74.9024 2.35303 li56.5879 2.35303 li8.48194 58.5 li55.1099 58.5 li55.1099 43.1221 li42.1695 43.1221 li56.0918 26.4366 lifalse sop/0 [/DeviceCMYK] add_csa0 0 0 0 cmykf111.661 44.8174 mo112.255 44.8174 112.849 44.7842 113.333 44.712 cv113.809 44.6397 114.187 44.5362 114.51 44.4131 cv114.823 44.2901 115.093 44.1475 115.319 43.9844 cv115.546 43.8213 115.73 43.6358 115.892 43.4258 cv116.054 43.2159 116.194 42.9815 116.302 42.7061 cv116.409 42.4327 116.507 42.1163 116.561 41.7413 cv116.614 41.3643 116.647 40.9258 116.636 40.5049 cv116.625 40.0835 116.582 39.6797 116.518 39.3335 cv116.452 38.9883 116.345 38.7012 116.226 38.4473 cv116.107 38.1939 115.956 37.9742 115.772 37.773 cv115.589 37.5728 115.374 37.3926 115.114 37.2276 cv114.866 37.0626 114.575 36.9136 114.187 36.7833 cv113.809 36.6534 113.333 36.5411 112.557 36.4458 cv111.769 36.3497 110.689 36.2876 109.61 36.2413 cv91.6294 35.4639 li89.5474 35.3736 87.4537 35.2247 85.8565 34.9043 cv84.2593 34.5835 83.1582 34.1573 82.2408 33.6729 cv81.3238 33.19 80.5899 32.65 79.9639 32.0079 cv79.3379 31.3668 78.8306 30.6231 78.3882 29.7017 cv77.9351 28.7803 77.5572 27.6802 77.2876 26.2388 cv77.0284 24.7969 76.8663 23.0132 76.834 21.0899 cv76.8018 19.167 76.8882 17.1045 77.1041 15.4673 cv77.3091 13.8301 77.6324 12.6177 78.0538 11.5547 cv78.4634 10.4913 78.9712 9.57618 79.5757 8.78614 cv80.1797 7.99659 80.8814 7.33057 81.7227 6.75049 cv82.5538 6.16993 83.504 5.67334 84.7559 5.25684 cv85.9971 4.83887 87.5294 4.5 89.5904 4.28418 cv91.6412 4.06788 94.2203 4.05323 96.7896 4.05323 cv138.285 4.05323 li138.285 4.05176 li149.509 4.05176 li149.509 44.8213 li170.953 44.8213 li153.621 23.7051 li153.524 4.50049 li197.405 56.8018 li185.146 56.8018 li148.333 56.8018 li135.997 56.8018 li135.997 15.4698 li98.8394 15.4698 li97.9009 15.4698 96.9507 15.4771 96.1958 15.5499 cv95.44 15.6226 94.857 15.7374 94.4039 15.8643 cv93.9615 15.9918 93.6373 16.1319 93.3677 16.2955 cv93.0982 16.4605 92.8814 16.649 92.6988 16.8624 cv92.5152 17.0767 92.3755 17.3155 92.2564 17.5982 cv92.1373 17.8799 92.0513 18.2056 91.9966 18.6026 cv91.9537 18.9996 91.9429 19.4673 91.9654 19.8936 cv91.9869 20.3194 92.0513 20.7037 92.148 21.0328 cv92.2457 21.3619 92.3755 21.6368 92.5259 21.8799 cv92.688 22.1241 92.8814 22.3375 93.1197 22.5293 cv93.3677 22.7198 93.6587 22.8892 94.0259 23.0416 cv94.3931 23.1949 94.8248 23.3316 95.44 23.4356 cv96.0552 23.5396 96.8541 23.5967 97.6529 23.6231 cv116.69 24.2588 li118.558 24.3208 120.425 24.4825 121.925 24.7989 cv123.425 25.1148 124.558 25.5459 125.528 26.0523 cv126.5 26.5586 127.31 27.1392 128.001 27.8262 cv128.702 28.5127 129.284 29.3042 129.792 30.2559 cv130.3 31.2081 130.741 32.3204 131.065 33.7159 cv131.39 35.1124 131.595 36.7911 131.691 38.6963 cv131.788 40.6016 131.767 42.7334 131.626 44.4317 cv131.476 46.1299 131.194 47.3956 130.827 48.4893 cv130.45 49.5821 129.986 50.504 129.393 51.3506 cv128.788 52.1993 128.054 52.9717 127.202 53.6534 cv126.339 54.335 125.367 54.9268 124.224 55.3956 cv123.09 55.8643 121.795 56.21 119.636 56.4561 cv117.468 56.7012 114.424 56.8018 111.402 56.8018 cv73.1973 56.8018 li57.7862 56.8018 li57.7862 21.7496 li38.5328 44.8213 li53.4044 44.8213 li53.4044 56.8018 li25.021 56.8018 li12.1729 56.8018 li57.376 4.05176 li73.0889 4.05176 li73.1973 4.05176 li73.1973 44.8174 li111.661 44.8174 li0 0 0 1 cmykf69.0533 75.7393 mo70.7256 75.7393 li70.7256 69.2803 li73.3809 75.7393 li74.8702 75.7393 li74.8702 64.794 li73.1758 64.794 li73.1758 70.6602 li70.7906 64.794 li69.0533 64.794 li69.0533 75.7393 lif58.9624 64.796 mo58.9624 68.7491 li58.9624 75.7393 li60.9698 75.7393 li60.9698 71.7852 li60.9698 64.796 li58.9624 64.796 lif52.4654 65.835 mo54.2789 65.835 li54.2789 68.7491 li54.2789 75.7393 li56.3506 75.7393 li56.3506 72.8116 li56.3506 65.8213 li58.1851 65.8213 li58.1851 64.796 li52.4654 64.796 li52.4654 65.835 lif38.5542 75.7393 mo40.1304 75.7393 li40.1304 69.3292 li41.6949 73.3555 li43.2378 69.3458 li43.2378 75.7393 li44.8028 75.7393 li44.8028 64.794 li43.2378 64.794 li41.6949 68.7872 li40.2056 64.794 li38.5542 64.794 li38.5542 75.7393 lif25.4307 65.835 mo27.2442 65.835 li27.2442 68.7491 li27.2442 75.7393 li29.3165 75.7393 li29.3165 72.8116 li29.3165 65.8213 li31.1617 65.8213 li31.1617 64.796 li25.4307 64.796 li25.4307 65.835 lif22.7657 64.796 mo22.7657 67.2168 li22.7657 74.2071 li22.7657 74.2637 22.7657 74.3233 22.7544 74.3711 cv22.7437 74.419 22.7334 74.4581 22.7115 74.4932 cv22.7007 74.5284 22.6792 74.5586 22.6573 74.585 cv22.6358 74.6124 22.6143 74.6358 22.5816 74.6582 cv22.5494 74.6827 22.5171 74.7012 22.4742 74.7208 cv22.4415 74.7383 22.3877 74.7569 22.3335 74.7715 cv22.2798 74.7872 22.2154 74.7999 22.1397 74.8096 cv22.0533 74.8174 21.9561 74.8223 21.8584 74.8223 cv21.7725 74.8262 21.6753 74.8252 21.5997 74.8194 cv21.5245 74.8145 21.4595 74.8067 21.4053 74.794 cv21.3516 74.7823 21.3086 74.7686 21.2764 74.754 cv21.233 74.7383 21.2002 74.7217 21.1792 74.7032 cv21.1465 74.6856 21.125 74.6661 21.1036 74.6446 cv21.0821 74.6231 21.0601 74.5987 21.0494 74.5723 cv21.0386 74.5469 21.0171 74.5176 21.0064 74.4854 cv20.9957 74.4532 20.9957 74.4151 20.9844 74.3692 cv20.9844 74.3262 20.9844 74.2725 20.9844 74.2217 cv20.9844 71.7852 li20.9844 64.796 li18.8912 64.796 li18.8912 67.2432 li18.8912 74.2344 li18.896 74.3399 18.918 74.4434 18.9449 74.5313 cv18.9722 74.6202 19.0098 74.6924 19.0474 74.7598 cv19.0909 74.8262 19.1338 74.8868 19.1773 74.9434 cv19.2251 74.9981 19.274 75.0489 19.3282 75.0977 cv19.3819 75.1446 19.4415 75.1895 19.4952 75.2325 cv19.5601 75.2735 19.625 75.3135 19.6895 75.3506 cv19.7652 75.3858 19.8301 75.421 19.9053 75.4512 cv20.3589 75.6299 20.8233 75.7452 21.3086 75.795 cv21.7945 75.8438 22.2906 75.8262 22.7334 75.7579 cv23.1646 75.6885 23.5318 75.5704 23.877 75.3975 cv23.9419 75.3672 24.0064 75.3321 24.0606 75.2969 cv24.1255 75.2618 24.1792 75.2237 24.2334 75.1827 cv24.2867 75.1416 24.3306 75.0997 24.3843 75.0518 cv24.4278 75.0069 24.4708 74.9571 24.5137 74.9034 cv24.5567 74.8506 24.5894 74.793 24.6216 74.7276 cv24.6539 74.6631 24.6866 74.5938 24.7081 74.5079 cv24.7408 74.4229 24.751 74.3204 24.751 74.2217 cv24.7837 71.7852 li24.7837 64.796 li22.7657 64.796 lif15.9068 69.4317 mo14.2076 69.4317 li14.2017 68.7754 14.1963 68.1192 14.1963 67.6661 cv14.1963 67.212 14.1963 66.9629 14.2017 66.7725 cv14.2017 66.5831 14.2076 66.4561 14.2076 66.3262 cv14.2076 66.2334 14.2125 66.1377 14.2178 66.0752 cv14.2286 66.0127 14.2398 65.9854 14.2505 65.959 cv14.2667 65.9346 14.2774 65.9131 14.2935 65.8946 cv14.3042 65.876 14.3257 65.8604 14.3423 65.8438 cv14.3638 65.8272 14.3853 65.8135 14.4126 65.7999 cv14.4336 65.7862 14.4664 65.7725 14.4986 65.7627 cv14.5367 65.7491 14.5743 65.7374 14.6226 65.7295 cv14.6714 65.7198 14.7305 65.711 14.8008 65.7061 cv14.8658 65.7002 14.9517 65.6983 15.0328 65.6983 cv15.1187 65.6983 15.2056 65.7022 15.2808 65.7081 cv15.3511 65.7168 15.4161 65.7256 15.4644 65.7374 cv15.5186 65.7491 15.5616 65.7627 15.5938 65.7774 cv15.6319 65.792 15.6641 65.8077 15.691 65.8252 cv15.7178 65.8438 15.7452 65.8614 15.7667 65.8809 cv15.7886 65.9014 15.8047 65.9229 15.8208 65.9473 cv15.837 65.9717 15.8531 65.9991 15.8638 66.0303 cv15.8799 66.0616 15.8907 66.0967 15.896 66.1436 cv15.9068 66.1885 15.9068 66.2452 15.9068 66.2999 cv15.9068 69.4317 licp17.9307 65.8956 mo17.9087 65.8331 17.8873 65.7774 17.8604 65.7247 cv17.8282 65.6739 17.8008 65.625 17.7632 65.5772 cv17.731 65.5303 17.6929 65.4874 17.6553 65.4463 cv17.6119 65.4053 17.5689 65.3663 17.5259 65.3282 cv17.4771 65.2901 17.4288 65.2549 17.375 65.2198 cv17.3262 65.1866 17.2667 65.1534 17.2129 65.1231 cv16.9649 64.9991 16.7056 64.9053 16.4039 64.8311 cv16.0958 64.7588 15.7398 64.71 15.3677 64.6983 cv14.9898 64.6866 14.5904 64.7159 14.2237 64.7784 cv13.8511 64.8399 13.5113 64.9366 13.1876 65.0694 cv13.1172 65.0987 13.0416 65.1338 12.9766 65.1719 cv12.9068 65.2061 12.8423 65.2471 12.7828 65.2891 cv12.7178 65.3311 12.6641 65.377 12.6104 65.4239 cv12.5562 65.4708 12.5074 65.5225 12.4585 65.5772 cv12.4156 65.6329 12.3726 65.6944 12.3296 65.7608 cv12.2916 65.8272 12.2535 65.8995 12.2266 65.9893 cv12.1944 66.0772 12.1783 66.1807 12.1675 66.2862 cv12.1675 68.7491 li12.1675 75.7393 li14.1802 75.7393 li14.1802 70.4727 li14.1802 70.4727 14.1856 70.4727 14.191 70.4727 cv14.191 70.4727 14.191 70.4727 14.1963 70.4747 cv14.1963 70.4747 14.1963 70.4747 14.3365 70.4747 cv14.4717 70.4747 14.7418 70.4756 15.0386 70.4747 cv15.3296 70.4747 15.648 70.4727 15.9664 70.4727 cv15.9664 75.7393 li17.9791 75.7393 li17.9791 73.3731 li17.9791 66.3819 li17.9898 66.2872 17.9898 66.1915 17.9791 66.1084 cv17.9737 66.0264 17.9522 65.9581 17.9307 65.8956 cvf49.7457 69.4317 mo48.0406 69.4317 li48.0406 68.7754 48.0298 68.1192 48.0298 67.6661 cv48.0298 67.212 48.0298 66.9629 48.0406 66.7725 cv48.0406 66.5831 48.0406 66.4561 48.0406 66.3262 cv48.0406 66.2334 48.0513 66.1377 48.0513 66.0752 cv48.0621 66.0127 48.0733 65.9854 48.084 65.959 cv48.1055 65.9346 48.1163 65.9131 48.127 65.8946 cv48.1485 65.876 48.1592 65.8604 48.1812 65.8438 cv48.2022 65.8272 48.2242 65.8135 48.2461 65.7999 cv48.2671 65.7862 48.2994 65.7725 48.3321 65.7627 cv48.375 65.7491 48.4073 65.7374 48.4615 65.7295 cv48.5049 65.7198 48.5694 65.711 48.6343 65.7061 cv48.71 65.7002 48.7852 65.6983 48.8716 65.6983 cv48.9581 65.6983 49.0445 65.7022 49.1202 65.7081 cv49.1846 65.7168 49.2496 65.7256 49.3033 65.7374 cv49.3575 65.7491 49.4004 65.7627 49.4332 65.7774 cv49.4654 65.792 49.4976 65.8077 49.5303 65.8252 cv49.5513 65.8438 49.584 65.8614 49.6055 65.8809 cv49.6275 65.9014 49.6382 65.9229 49.6592 65.9473 cv49.6705 65.9717 49.6919 65.9991 49.7027 66.0303 cv49.7134 66.0616 49.7242 66.0967 49.7354 66.1436 cv49.7457 66.1885 49.7457 66.2452 49.7457 66.2999 cv49.7457 69.4317 licp51.6993 65.7247 mo51.6666 65.6739 51.6343 65.625 51.6021 65.5772 cv51.5699 65.5303 51.5264 65.4874 51.4942 65.4463 cv51.4507 65.4053 51.4078 65.3663 51.3648 65.3282 cv51.3106 65.2901 51.2676 65.2549 51.2134 65.2198 cv51.1597 65.1866 51.1055 65.1534 51.0518 65.1231 cv50.8033 64.9991 50.5445 64.9053 50.2422 64.8311 cv49.9292 64.7588 49.5733 64.71 49.2061 64.6983 cv48.8282 64.6866 48.4292 64.7159 48.0621 64.7784 cv47.6841 64.8399 47.3501 64.9366 47.0259 65.0694 cv46.9507 65.0987 46.875 65.1338 46.8101 65.1719 cv46.7457 65.2061 46.6812 65.2471 46.6163 65.2891 cv46.5513 65.3311 46.4971 65.377 46.4434 65.4239 cv46.3892 65.4708 46.3462 65.5225 46.292 65.5772 cv46.2491 65.6329 46.2061 65.6944 46.1631 65.7608 cv46.1304 65.8272 46.087 65.8995 46.066 65.9893 cv46.0333 66.0772 46.0118 66.1807 46.001 66.2862 cv46.001 68.7491 li46.001 75.7393 li48.0191 75.7393 li48.0191 70.4727 li48.0191 70.4727 48.0191 70.4727 48.0298 70.4727 cv48.0298 70.4727 48.0298 70.4727 48.0298 70.4747 cv48.0298 70.4747 48.0298 70.4747 48.17 70.4747 cv48.3106 70.4747 48.5801 70.4756 48.8716 70.4747 cv49.1631 70.4747 49.4864 70.4727 49.7999 70.4727 cv49.7999 75.7393 li51.8179 75.7393 li51.8179 73.3731 li51.8179 66.3819 li51.8287 66.2872 51.8287 66.1915 51.8179 66.1084 cv51.8072 66.0264 51.7857 65.9581 51.7637 65.8956 cv51.7427 65.8331 51.7208 65.7774 51.6993 65.7247 cvf35.4356 70.376 mo35.4356 74.2217 li35.4356 74.2774 35.4249 74.334 35.4249 74.3799 cv35.4136 74.4288 35.4029 74.4649 35.3921 74.4961 cv35.3707 74.5284 35.3599 74.5567 35.3379 74.5821 cv35.3277 74.6065 35.3057 74.6299 35.2847 74.6495 cv35.2627 74.671 35.2408 74.6905 35.209 74.7061 cv35.1768 74.7247 35.1441 74.7413 35.1119 74.7559 cv35.0689 74.7715 35.0254 74.7852 34.982 74.7969 cv34.9278 74.8096 34.8638 74.8184 34.7989 74.8252 cv34.7232 74.8331 34.6368 74.836 34.5508 74.836 cv34.4747 74.8389 34.3995 74.8389 34.3345 74.836 cv34.2588 74.8321 34.2051 74.8252 34.1617 74.8174 cv34.1187 74.8077 34.0757 74.7979 34.0435 74.7852 cv34 74.7745 33.9786 74.7598 33.9458 74.7471 cv33.9244 74.7315 33.9029 74.7178 33.8814 74.7012 cv33.8599 74.6836 33.8384 74.6661 33.8277 74.6456 cv33.8057 74.626 33.795 74.6036 33.7842 74.5792 cv33.7735 74.5557 33.7627 74.5284 33.752 74.4961 cv33.7408 74.4639 33.7408 74.4258 33.7305 74.3799 cv33.7305 74.3331 33.7305 74.2774 33.7305 74.2217 cv33.7305 72.0196 33.7198 69.8174 33.7198 68.543 cv33.7198 67.2666 33.7198 66.9151 33.7305 66.6963 cv33.7305 66.4776 33.7305 66.3877 33.7305 66.2999 cv33.7305 66.2432 33.7305 66.1866 33.7305 66.1397 cv33.7305 66.0948 33.7408 66.0606 33.752 66.0323 cv33.7627 66.003 33.7735 65.9776 33.7842 65.9561 cv33.795 65.9336 33.8057 65.9131 33.8277 65.8956 cv33.8384 65.878 33.8599 65.8614 33.8707 65.8458 cv33.8921 65.8301 33.9136 65.8155 33.9458 65.7999 cv33.9678 65.7862 34 65.7745 34.0328 65.7627 cv34.065 65.751 34.108 65.7393 34.1617 65.7295 cv34.2051 65.7208 34.2588 65.712 34.3238 65.7061 cv34.3995 65.7002 34.4747 65.6983 34.5611 65.6983 cv34.6368 65.6983 34.7339 65.7022 34.7989 65.7081 cv34.8741 65.7168 34.939 65.7256 34.9927 65.7374 cv35.0362 65.7491 35.0792 65.7627 35.1226 65.7774 cv35.1548 65.792 35.1871 65.8077 35.2198 65.8252 cv35.2408 65.8438 35.2627 65.8614 35.2847 65.8809 cv35.3057 65.9014 35.3277 65.9229 35.3492 65.9473 cv35.3599 65.9717 35.3819 65.9991 35.3921 66.0303 cv35.4029 66.0616 35.4136 66.0967 35.4249 66.1436 cv35.4249 66.1885 35.4356 66.2452 35.4356 66.2999 cv35.4356 70.376 licp37.2701 65.7247 mo37.2378 65.6739 37.2051 65.625 37.1729 65.5772 cv37.1407 65.5303 37.108 65.4874 37.065 65.4463 cv37.022 65.4053 36.9791 65.3663 36.9356 65.3282 cv36.8921 65.2901 36.8384 65.2549 36.7842 65.2198 cv36.7305 65.1866 36.6768 65.1534 36.6226 65.1231 cv36.3741 64.9991 36.1153 64.9053 35.813 64.8311 cv35.5 64.7588 35.1548 64.71 34.7769 64.6983 cv34.3995 64.6866 34 64.7159 33.6329 64.7784 cv33.2662 64.8399 32.921 64.9366 32.5972 65.0694 cv32.5215 65.0987 32.4566 65.1338 32.3814 65.1719 cv32.3165 65.2061 32.2515 65.2471 32.1866 65.2891 cv32.1334 65.3311 32.0684 65.377 32.0254 65.4239 cv31.9712 65.4708 31.9175 65.5225 31.8741 65.5772 cv31.8204 65.6329 31.7769 65.6944 31.7447 65.7608 cv31.7012 65.8272 31.669 65.8995 31.6363 65.9893 cv31.6045 66.0772 31.5826 66.1807 31.5826 66.2862 cv31.5826 67.2569 li31.5826 74.2481 li31.5826 74.3526 31.6045 74.4571 31.6363 74.546 cv31.669 74.6329 31.7012 74.7061 31.7447 74.7745 cv31.7769 74.8399 31.8204 74.9004 31.8741 74.9561 cv31.9175 75.0108 31.9712 75.0626 32.0254 75.1114 cv32.0684 75.1592 32.1334 75.2032 32.1866 75.2461 cv32.2515 75.2872 32.3165 75.3272 32.3814 75.3633 cv32.4566 75.3995 32.5215 75.4356 32.5972 75.4649 cv33.0396 75.6426 33.5147 75.7588 34 75.8086 cv34.4859 75.8584 34.982 75.8399 35.4249 75.7706 cv35.856 75.7022 36.2232 75.5831 36.5689 75.4112 cv36.6226 75.3829 36.6768 75.3536 36.7305 75.3243 cv36.7842 75.292 36.8384 75.2588 36.8819 75.2247 cv36.9249 75.1915 36.9791 75.1544 37.0113 75.1163 cv37.0542 75.0772 37.0972 75.0372 37.1299 74.9942 cv37.1622 74.9493 37.2051 74.9034 37.2271 74.8545 cv37.2593 74.8067 37.292 74.753 37.313 74.6944 cv37.335 74.6358 37.3565 74.5713 37.378 74.4932 cv37.3887 74.4151 37.3887 74.3243 37.3887 74.2344 cv37.3887 73.3731 li37.3887 66.3819 li37.4 66.2872 37.4 66.1915 37.3887 66.1084 cv37.378 66.0264 37.3672 65.9581 37.3458 65.8956 cv37.3243 65.8331 37.292 65.7774 37.2701 65.7247 cvf65.9991 70.376 mo65.9991 74.2217 li65.9991 74.2774 65.9883 74.334 65.9771 74.3799 cv65.9771 74.4288 65.9664 74.4649 65.9449 74.4961 cv65.9341 74.5284 65.9234 74.5567 65.9019 74.5821 cv65.8912 74.6065 65.8692 74.6299 65.8477 74.6495 cv65.8262 74.671 65.8047 74.6905 65.772 74.7061 cv65.7398 74.7247 65.7071 74.7413 65.6749 74.7559 cv65.6319 74.7715 65.5889 74.7852 65.546 74.7969 cv65.4918 74.8096 65.4268 74.8184 65.3619 74.8252 cv65.2867 74.8331 65.2002 74.836 65.1138 74.836 cv65.0381 74.8389 64.9629 74.8389 64.8873 74.836 cv64.8228 74.8321 64.7686 74.8252 64.7252 74.8174 cv64.6714 74.8077 64.6392 74.7979 64.607 74.7852 cv64.5635 74.7745 64.542 74.7598 64.5098 74.7471 cv64.4878 74.7315 64.4664 74.7178 64.4449 74.7012 cv64.4229 74.6836 64.4019 74.6661 64.3907 74.6456 cv64.3692 74.626 64.3584 74.6036 64.3477 74.5792 cv64.337 74.5557 64.3262 74.5284 64.315 74.4961 cv64.3047 74.4639 64.294 74.4258 64.294 74.3799 cv64.294 74.3331 64.294 74.2774 64.294 74.2217 cv64.2828 72.0196 64.2828 69.8174 64.2828 68.543 cv64.2828 67.2666 64.2828 66.9151 64.294 66.6963 cv64.294 66.4776 64.294 66.3877 64.294 66.2999 cv64.294 66.2432 64.294 66.1866 64.294 66.1397 cv64.294 66.0948 64.3047 66.0606 64.315 66.0323 cv64.3262 66.003 64.337 65.9776 64.3477 65.9561 cv64.3584 65.9336 64.3692 65.9131 64.3799 65.8956 cv64.4019 65.878 64.4122 65.8614 64.4341 65.8458 cv64.4556 65.8301 64.4771 65.8155 64.5098 65.7999 cv64.5308 65.7862 64.5635 65.7745 64.5958 65.7627 cv64.628 65.751 64.6714 65.7393 64.7149 65.7295 cv64.7686 65.7208 64.8228 65.712 64.8873 65.7061 cv64.9629 65.7002 65.0381 65.6983 65.125 65.6983 cv65.2002 65.6983 65.2867 65.7022 65.3619 65.7081 cv65.438 65.7168 65.5025 65.7256 65.546 65.7374 cv65.5997 65.7491 65.6431 65.7627 65.6861 65.7774 cv65.7183 65.792 65.751 65.8077 65.7832 65.8252 cv65.8047 65.8438 65.8262 65.8614 65.8477 65.8809 cv65.8692 65.9014 65.8912 65.9229 65.9122 65.9473 cv65.9234 65.9717 65.9341 65.9991 65.9561 66.0303 cv65.9664 66.0616 65.9771 66.0967 65.9883 66.1436 cv65.9883 66.1885 65.9991 66.2452 65.9991 66.2999 cv65.9991 70.376 licp67.8335 65.7247 mo67.8013 65.6739 67.7686 65.625 67.7364 65.5772 cv67.7042 65.5303 67.6612 65.4874 67.6285 65.4463 cv67.5855 65.4053 67.542 65.3663 67.4991 65.3282 cv67.4561 65.2901 67.4019 65.2549 67.3482 65.2198 cv67.294 65.1866 67.2403 65.1534 67.1861 65.1231 cv66.938 64.9991 66.6788 64.9053 66.3765 64.8311 cv66.064 64.7588 65.7183 64.71 65.3409 64.6983 cv64.9629 64.6866 64.5635 64.7159 64.1968 64.7784 cv63.8296 64.8399 63.4839 64.9366 63.1607 65.0694 cv63.085 65.0987 63.0201 65.1338 62.9449 65.1719 cv62.8799 65.2061 62.815 65.2471 62.7505 65.2891 cv62.6968 65.3311 62.6319 65.377 62.5777 65.4239 cv62.524 65.4708 62.4805 65.5225 62.4376 65.5772 cv62.3838 65.6329 62.3404 65.6944 62.3077 65.7608 cv62.2647 65.8272 62.2217 65.8995 62.1998 65.9893 cv62.1675 66.0772 62.146 66.1807 62.146 66.2862 cv62.146 67.2569 li62.146 74.2481 li62.146 74.3526 62.1675 74.4571 62.1998 74.546 cv62.2217 74.6329 62.2647 74.7061 62.3077 74.7745 cv62.3404 74.8399 62.3838 74.9004 62.4376 74.9561 cv62.4805 75.0108 62.524 75.0626 62.5777 75.1114 cv62.6319 75.1592 62.6968 75.2032 62.7505 75.2461 cv62.815 75.2872 62.8799 75.3272 62.9449 75.3633 cv63.0201 75.3995 63.085 75.4356 63.1607 75.4649 cv63.6031 75.6426 64.0777 75.7588 64.5635 75.8086 cv65.0489 75.8584 65.546 75.8399 65.9771 75.7706 cv66.42 75.7022 66.7872 75.5831 67.1324 75.4112 cv67.1861 75.3829 67.2403 75.3536 67.294 75.3243 cv67.3482 75.292 67.4019 75.2588 67.4454 75.2247 cv67.4883 75.1915 67.5313 75.1544 67.5743 75.1163 cv67.6177 75.0772 67.6612 75.0372 67.6934 74.9942 cv67.7256 74.9493 67.7584 74.9034 67.7906 74.8545 cv67.8223 74.8067 67.855 74.753 67.8765 74.6944 cv67.8985 74.6358 67.92 74.5713 67.9307 74.4932 cv67.9522 74.4151 67.9522 74.3243 67.9522 74.2344 cv67.9522 73.3731 li67.9522 66.3819 li67.9629 66.2872 67.9629 66.1915 67.9522 66.1084 cv67.9415 66.0264 67.9307 65.9581 67.9092 65.8956 cv67.8873 65.8331 67.855 65.7774 67.8335 65.7247 cvf129.997 64.9092 mo129.846 64.9834 129.685 65.0752 129.544 65.1768 cv129.403 65.2764 129.274 65.3877 129.166 65.4971 cv129.058 65.6065 128.972 65.7139 128.907 65.8155 cv128.831 65.9161 128.788 66.0127 128.745 66.1045 cv128.702 66.1983 128.669 66.2842 128.659 66.3741 cv128.595 66.5694 128.562 66.7725 128.551 66.9874 cv128.54 67.2032 128.551 67.4297 128.604 67.6602 cv128.647 67.8916 128.734 68.1231 128.843 68.3418 cv128.95 68.5586 129.091 68.7627 129.253 68.9463 cv131.939 71.668 li132.059 71.7901 132.177 71.917 132.253 72.0079 cv132.327 72.1016 132.372 72.1592 132.403 72.2139 cv132.436 72.2676 132.458 72.3184 132.468 72.3721 cv132.489 72.4239 132.501 72.4805 132.512 72.5411 cv132.522 72.6016 132.532 72.669 132.532 72.7344 cv132.565 73.0772 132.565 73.419 132.555 73.6465 cv132.555 73.8731 132.522 73.9834 132.501 74.0782 cv132.48 74.1719 132.446 74.251 132.415 74.3204 cv132.382 74.3907 132.35 74.4542 132.307 74.5137 cv132.264 74.5665 132.198 74.6143 132.145 74.6524 cv132.091 74.6924 132.026 74.7208 131.972 74.7413 cv131.907 74.7627 131.843 74.7794 131.767 74.7872 cv131.626 74.7872 131.486 74.7794 131.39 74.7686 cv131.292 74.7559 131.228 74.7413 131.185 74.7247 cv131.13 74.7081 131.098 74.6905 131.055 74.671 cv131.022 74.6524 130.989 74.6329 130.968 74.6104 cv130.936 74.5889 130.915 74.5665 130.893 74.5401 cv130.871 74.5147 130.85 74.4883 130.827 74.4581 cv130.806 74.4288 130.796 74.3965 130.784 74.3624 cv130.753 74.2608 130.72 74.1563 130.698 74.003 cv130.666 73.8506 130.645 73.6504 130.622 73.2872 cv130.612 72.9229 130.612 72.3975 130.634 71.8731 cv128.519 71.8731 li128.476 72.3702 128.476 72.8692 128.497 73.2305 cv128.529 73.5938 128.572 73.8184 128.626 74.0088 cv128.681 74.1993 128.734 74.3555 128.81 74.4961 cv128.874 74.6348 128.95 74.7569 129.025 74.8672 cv129.101 74.9756 129.188 75.0762 129.284 75.1661 cv129.382 75.2579 129.48 75.3418 129.587 75.4161 cv129.911 75.5704 130.257 75.6807 130.634 75.7491 cv131.011 75.8184 131.433 75.8458 131.821 75.8262 cv132.198 75.8057 132.555 75.7383 132.856 75.6485 cv133.159 75.5567 133.407 75.4405 133.645 75.293 cv133.731 75.2247 133.817 75.1495 133.894 75.0674 cv133.98 74.9844 134.055 74.8985 134.12 74.8038 cv134.185 74.709 134.238 74.6055 134.292 74.4883 cv134.347 74.3721 134.399 74.2422 134.442 74.086 cv134.487 73.9307 134.519 73.75 134.54 73.4756 cv134.562 73.2042 134.562 72.8379 134.552 72.4747 cv134.54 72.4102 134.53 72.3458 134.508 72.2706 cv134.487 72.1934 134.454 72.1045 134.39 71.9903 cv134.335 71.876 134.249 71.7364 134.098 71.5303 cv133.946 71.3262 133.72 71.0538 133.235 70.5362 cv132.76 70.0206 132.015 69.2569 131.26 68.5079 cv131.185 68.42 131.108 68.3262 131.044 68.2256 cv130.98 68.127 130.915 68.0235 130.871 67.9112 cv130.827 67.7989 130.784 67.6778 130.763 67.5401 cv130.73 67.4014 130.71 67.2461 130.71 67.0547 cv130.71 66.8604 130.72 66.6299 130.753 66.4014 cv130.774 66.3477 130.796 66.294 130.817 66.2266 cv130.85 66.1592 130.871 66.0782 130.893 66.0245 cv130.915 65.9688 130.936 65.9424 130.958 65.919 cv130.98 65.8946 131.001 65.8731 131.022 65.8526 cv131.044 65.8331 131.065 65.8155 131.087 65.7989 cv131.185 65.7471 131.271 65.7061 131.368 65.6788 cv131.464 65.6504 131.562 65.6358 131.648 65.6329 cv131.734 65.6299 131.821 65.6416 131.896 65.6592 cv131.972 65.6788 132.048 65.7081 132.112 65.7461 cv132.177 65.7842 132.231 65.8292 132.284 65.8809 cv132.327 65.9385 132.36 66 132.393 66.0782 cv132.436 66.1563 132.468 66.251 132.512 66.3799 cv132.555 66.5108 132.598 66.6768 132.63 66.9444 cv132.673 67.211 132.694 67.5782 132.706 67.9463 cv132.792 67.9424 132.89 67.9376 133.008 67.9346 cv133.138 67.9317 133.3 67.9278 133.58 67.9288 cv133.86 67.9307 134.26 67.9376 134.659 67.9463 cv134.659 67.5225 134.638 67.0987 134.595 66.796 cv134.552 66.4952 134.487 66.3174 134.433 66.17 cv134.368 66.0206 134.313 65.8995 134.249 65.7979 cv134.185 65.6924 134.12 65.6065 134.033 65.5245 cv133.937 65.4131 133.817 65.3106 133.698 65.2149 cv133.569 65.1202 133.429 65.0313 133.278 64.9532 cv133.116 64.875 132.943 64.8047 132.749 64.7481 cv132.555 64.6905 132.339 64.6456 132.102 64.6182 cv131.854 64.5928 131.595 64.586 131.313 64.6084 cv131.032 64.628 130.73 64.6778 130.515 64.7295 cv130.288 64.7803 130.147 64.837 129.997 64.9092 cvf121.503 75.7032 mo123.177 75.7032 li123.177 69.2442 li125.82 75.7032 li127.31 75.7032 li127.31 64.7569 li125.615 64.7569 li125.615 70.6241 li123.241 64.7569 li121.503 64.7569 li121.503 75.7032 lif111.013 64.7588 mo111.013 68.7129 li111.013 75.7032 li113.032 75.7032 li113.032 71.7491 li113.032 64.7588 li111.013 64.7588 lif104.56 65.7989 mo106.373 65.7989 li106.373 68.7129 li106.373 75.7032 li108.444 75.7032 li108.444 72.7764 li108.444 65.7852 li110.279 65.7852 li110.279 64.7588 li104.56 64.7588 li104.56 65.7989 lif101.98 64.7588 mo101.98 67.1817 li101.98 74.1719 li101.98 74.2286 101.98 74.2862 101.97 74.334 cv101.958 74.3819 101.948 74.4229 101.927 74.4581 cv101.915 74.4922 101.894 74.5215 101.872 74.5489 cv101.851 74.5772 101.818 74.6006 101.798 74.6231 cv101.765 74.6456 101.732 74.6661 101.688 74.6856 cv101.646 74.7032 101.603 74.7217 101.548 74.7364 cv101.495 74.751 101.431 74.7627 101.344 74.7745 cv101.269 74.7823 101.171 74.7872 101.074 74.7872 cv100.977 74.7901 100.89 74.7901 100.815 74.7852 cv100.739 74.7794 100.675 74.7696 100.62 74.7569 cv100.566 74.7471 100.523 74.7334 100.48 74.7178 cv100.448 74.7022 100.415 74.6856 100.384 74.667 cv100.361 74.6495 100.341 74.6299 100.318 74.6075 cv100.297 74.587 100.275 74.5635 100.265 74.5362 cv100.243 74.5108 100.231 74.4825 100.222 74.4502 cv100.21 74.4161 100.2 74.3799 100.2 74.334 cv100.188 74.2891 100.188 74.2374 100.2 74.1856 cv100.2 71.7491 li100.2 64.7588 li98.0943 64.7588 li98.0943 67.209 li98.0943 74.1993 li98.106 74.3047 98.1275 74.4073 98.1597 74.4961 cv98.1812 74.585 98.2242 74.6582 98.2564 74.7237 cv98.2994 74.7901 98.3423 74.8516 98.3863 74.9063 cv98.44 74.9629 98.483 75.0137 98.5376 75.0616 cv98.5914 75.1084 98.6451 75.1544 98.7095 75.1954 cv98.774 75.2383 98.8394 75.2774 98.9048 75.3135 cv98.9693 75.3506 99.0445 75.3858 99.1197 75.4161 cv99.563 75.5948 100.038 75.71 100.523 75.7588 cv101.009 75.8077 101.505 75.7911 101.938 75.7217 cv102.38 75.6534 102.747 75.5352 103.081 75.3624 cv103.146 75.3311 103.21 75.2969 103.275 75.2618 cv103.329 75.2256 103.395 75.1866 103.448 75.1465 cv103.503 75.1055 103.546 75.0626 103.589 75.0166 cv103.643 74.9717 103.686 74.9219 103.729 74.8682 cv103.761 74.8145 103.804 74.7559 103.837 74.6924 cv103.868 74.629 103.901 74.5586 103.923 74.4717 cv103.944 74.3868 103.966 74.2862 103.966 74.1856 cv103.987 71.7491 li103.987 64.7588 li101.98 64.7588 lif93.1744 67.9327 mo93.1744 74.9239 li93.1744 74.9571 93.1744 74.9893 93.1744 75.0225 cv93.1841 75.0528 93.1841 75.084 93.1949 75.1133 cv93.2056 75.1436 93.2173 75.1719 93.2271 75.2002 cv93.2388 75.2266 93.2603 75.2569 93.271 75.2842 cv93.314 75.3379 93.357 75.3887 93.4322 75.4424 cv93.4654 75.4678 93.5084 75.4942 93.5513 75.5215 cv93.605 75.5469 93.6587 75.5723 93.7349 75.5997 cv93.8101 75.625 93.9068 75.6504 94.0376 75.671 cv94.1773 75.6915 94.3502 75.7032 94.5337 75.7032 cv97.6744 75.7032 li97.6744 74.7188 li95.6021 74.7188 li95.5591 74.7188 95.5044 74.7178 95.4615 74.7149 cv95.4292 74.712 95.397 74.709 95.3863 74.7032 cv95.3638 74.7012 95.3423 74.6954 95.3326 74.6924 cv95.3208 74.6876 95.3101 74.6827 95.2994 74.6778 cv95.2896 74.6739 95.2896 74.668 95.2779 74.6631 cv95.2671 74.6582 95.2671 74.6514 95.2564 74.6446 cv95.2564 74.6358 95.2457 74.629 95.2457 74.6192 cv95.2349 74.6094 95.2349 74.5967 95.2242 74.5626 cv95.2242 74.5284 95.2134 74.4737 95.2134 74.418 cv95.2134 73.9942 li95.2134 71.7491 li95.2134 64.7588 li93.1744 64.7588 li93.1744 67.9327 lif81 64.9092 mo80.8487 64.9834 80.6871 65.0752 80.5469 65.1768 cv80.4063 65.2764 80.2769 65.3877 80.169 65.4971 cv80.0718 65.6065 79.9747 65.7139 79.9097 65.8155 cv79.8453 65.9161 79.7916 66.0127 79.7481 66.1045 cv79.7046 66.1983 79.6724 66.2842 79.6617 66.3741 cv79.5967 66.5694 79.5645 66.7725 79.5538 66.9874 cv79.5435 67.2032 79.5538 67.4297 79.6075 67.6602 cv79.6509 67.8916 79.7374 68.1231 79.8453 68.3418 cv79.9532 68.5586 80.0933 68.7627 80.2554 68.9463 cv82.9429 71.668 li83.0611 71.7901 83.1802 71.917 83.2559 72.0079 cv83.3311 72.1016 83.3741 72.1592 83.4068 72.2139 cv83.439 72.2676 83.461 72.3184 83.4712 72.3721 cv83.4932 72.4239 83.504 72.4805 83.5147 72.5411 cv83.525 72.6016 83.5362 72.669 83.5362 72.7344 cv83.5689 73.0772 83.5689 73.419 83.5689 73.6465 cv83.5577 73.8731 83.525 73.9834 83.504 74.0782 cv83.482 74.1719 83.4498 74.251 83.417 74.3204 cv83.3848 74.3907 83.3526 74.4542 83.3096 74.5137 cv83.2662 74.5665 83.2017 74.6143 83.148 74.6524 cv83.0938 74.6924 83.0289 74.7208 82.9752 74.7413 cv82.9102 74.7627 82.8458 74.7794 82.7701 74.7872 cv82.6299 74.7872 82.4893 74.7794 82.3921 74.7686 cv82.295 74.7559 82.23 74.7413 82.1871 74.7247 cv82.1329 74.7081 82.1006 74.6905 82.0577 74.671 cv82.025 74.6524 81.9927 74.6329 81.9712 74.6104 cv81.939 74.5889 81.9175 74.5665 81.8956 74.5401 cv81.8741 74.5147 81.8526 74.4883 81.8311 74.4581 cv81.8096 74.4288 81.7989 74.3965 81.7876 74.3624 cv81.7554 74.2608 81.7227 74.1563 81.7017 74.003 cv81.669 73.8506 81.6475 73.6504 81.626 73.2872 cv81.6148 72.9229 81.626 72.3975 81.6368 71.8731 cv79.5215 71.8731 li79.4893 72.3702 79.4786 72.8692 79.4996 73.2305 cv79.5323 73.5938 79.5757 73.8184 79.6294 74.0088 cv79.6836 74.1993 79.7481 74.3555 79.8126 74.4961 cv79.8775 74.6348 79.9532 74.7569 80.0289 74.8672 cv80.1148 74.9756 80.1905 75.0762 80.2876 75.1661 cv80.3848 75.2579 80.482 75.3418 80.5899 75.4161 cv80.9136 75.5704 81.2588 75.6807 81.6368 75.7491 cv82.025 75.8184 82.4356 75.8458 82.8238 75.8262 cv83.2017 75.8057 83.5577 75.7383 83.8599 75.6485 cv84.1622 75.5567 84.4102 75.4405 84.648 75.293 cv84.7339 75.2247 84.8204 75.1495 84.9068 75.0674 cv84.982 74.9844 85.0582 74.8985 85.1226 74.8038 cv85.1871 74.709 85.2413 74.6055 85.2955 74.4883 cv85.3492 74.3721 85.4034 74.2422 85.4463 74.086 cv85.4893 73.9307 85.522 73.75 85.5435 73.4756 cv85.565 73.2042 85.565 72.8379 85.5542 72.4747 cv85.5435 72.4102 85.5328 72.3458 85.5113 72.2706 cv85.4893 72.1934 85.4571 72.1045 85.4034 71.9903 cv85.3384 71.876 85.252 71.7364 85.1011 71.5303 cv84.9502 71.3262 84.7232 71.0538 84.2378 70.5362 cv83.7627 70.0206 83.0181 69.2569 82.2627 68.5079 cv82.1871 68.42 82.1119 68.3262 82.0469 68.2256 cv81.982 68.127 81.9278 68.0235 81.8741 67.9112 cv81.8311 67.7989 81.7876 67.6778 81.7662 67.5401 cv81.7339 67.4014 81.712 67.2461 81.712 67.0547 cv81.712 66.8604 81.7227 66.6299 81.7554 66.4014 cv81.7769 66.3477 81.7989 66.294 81.8311 66.2266 cv81.8526 66.1592 81.8741 66.0782 81.8956 66.0245 cv81.9175 65.9688 81.939 65.9424 81.9605 65.919 cv81.982 65.8946 82.004 65.8731 82.025 65.8526 cv82.0469 65.8331 82.0684 65.8155 82.0899 65.7989 cv82.1871 65.7471 82.2735 65.7061 82.3707 65.6788 cv82.4678 65.6504 82.565 65.6358 82.6509 65.6329 cv82.7378 65.6299 82.8238 65.6416 82.8995 65.6592 cv82.9859 65.6788 83.0508 65.7081 83.1153 65.7461 cv83.1802 65.7842 83.2339 65.8292 83.2881 65.8809 cv83.3311 65.9385 83.3638 66 83.396 66.0782 cv83.439 66.1563 83.4712 66.251 83.5147 66.3799 cv83.5577 66.5108 83.6011 66.6768 83.6441 66.9444 cv83.6763 67.211 83.6978 67.5782 83.709 67.9463 cv83.795 67.9424 83.8921 67.9376 84.0108 67.9346 cv84.1402 67.9317 84.3023 67.9278 84.5831 67.9288 cv84.8633 67.9307 85.2632 67.9376 85.6622 67.9463 cv85.6622 67.5225 85.6402 67.0987 85.5972 66.796 cv85.5542 66.4952 85.4893 66.3174 85.4356 66.17 cv85.3711 66.0206 85.3169 65.8995 85.252 65.7979 cv85.1871 65.6924 85.1226 65.6065 85.0362 65.5245 cv84.939 65.4131 84.8204 65.3106 84.7017 65.2149 cv84.5723 65.1202 84.4322 65.0313 84.2808 64.9532 cv84.1192 64.875 83.9463 64.8047 83.752 64.7481 cv83.5577 64.6905 83.3418 64.6456 83.1045 64.6182 cv82.856 64.5928 82.5972 64.586 82.3169 64.6084 cv82.0357 64.628 81.7339 64.6778 81.5181 64.7295 cv81.2916 64.7803 81.1509 64.837 81 64.9092 cvf145.257 67.5596 mo145.149 67.5665 145.106 67.5792 145.041 67.5967 cv144.987 67.6163 144.923 67.6407 144.879 67.6592 cv144.836 67.6778 144.815 67.6915 144.782 67.7051 cv144.761 67.7208 144.739 67.7354 144.718 67.754 cv144.706 67.7696 144.685 67.7891 144.675 67.8077 cv144.653 67.8282 144.642 67.8497 144.631 67.875 cv144.61 67.8995 144.599 67.9258 144.588 67.961 cv144.577 67.9952 144.565 68.0342 144.556 68.1231 cv144.556 68.212 144.545 68.3497 144.556 68.4874 cv144.556 68.7735 li144.556 75.7637 li146.196 75.7637 li146.196 71.7149 li148.257 71.7149 li148.257 70.9639 li146.196 70.9639 li146.196 69.7178 li146.196 68.3907 li146.196 68.378 146.196 68.3653 146.196 68.3545 cv146.207 68.3428 146.207 68.3331 146.218 68.3233 cv146.218 68.3145 146.228 68.3047 146.239 68.2979 cv146.25 68.2911 146.261 68.2823 146.272 68.2745 cv146.282 68.2686 146.293 68.2608 146.315 68.2559 cv146.325 68.25 146.347 68.2442 146.368 68.2403 cv146.39 68.2364 146.412 68.2325 146.444 68.2315 cv146.477 68.2286 146.498 68.2256 146.53 68.2256 cv148.688 68.2256 li148.688 67.5567 li145.688 67.5567 li145.526 67.5499 145.364 67.5508 145.257 67.5596 cvf189.009 64.7588 mo188.749 64.6807 188.437 64.6202 188.102 64.5938 cv187.768 64.5694 187.39 64.5821 187.034 64.6319 cv186.667 64.6836 186.321 64.7706 185.986 64.8965 cv185.878 64.9424 185.781 64.9961 185.685 65.0577 cv185.587 65.1182 185.501 65.1876 185.415 65.2666 cv185.328 65.3448 185.242 65.4327 185.167 65.5323 cv185.091 65.6299 185.015 65.7413 184.95 65.8682 cv184.886 65.9932 184.832 66.1338 184.778 66.2911 cv184.724 66.4483 184.691 66.6231 184.659 66.8155 cv184.638 67.0069 184.627 67.2178 184.627 67.4268 cv184.605 72.3116 li184.605 72.8145 184.648 73.3194 184.702 73.6651 cv184.745 74.0069 184.81 74.1905 184.875 74.3477 cv184.94 74.5049 185.005 74.6358 185.08 74.751 cv185.155 74.8653 185.231 74.9668 185.317 75.0586 cv185.404 75.1504 185.49 75.2325 185.587 75.3086 cv185.868 75.4708 186.171 75.5948 186.516 75.6846 cv186.872 75.7745 187.271 75.8311 187.659 75.8399 cv188.059 75.8458 188.437 75.8018 188.771 75.7276 cv189.105 75.6534 189.386 75.5469 189.646 75.4024 cv189.753 75.3379 189.851 75.2608 189.948 75.1788 cv190.044 75.0958 190.131 75.0069 190.206 74.9063 cv190.282 74.8067 190.357 74.6963 190.422 74.5684 cv190.487 74.4424 190.552 74.2979 190.606 74.1153 cv190.659 73.9356 190.702 73.7168 190.735 73.2559 cv190.768 72.796 190.768 72.0948 190.746 71.3965 cv188.706 71.3965 li188.706 71.4903 188.696 71.585 188.696 71.7842 cv188.696 71.9844 188.696 72.2872 188.696 72.4942 cv188.696 72.6993 188.685 72.8077 188.685 72.9131 cv188.685 73.2471 188.674 73.5801 188.663 73.7969 cv188.642 74.0157 188.62 74.1182 188.599 74.2032 cv188.577 74.2881 188.544 74.3584 188.522 74.419 cv188.491 74.4795 188.458 74.5342 188.426 74.5821 cv188.394 74.6319 188.351 74.6768 188.307 74.7208 cv188.286 74.7374 188.264 74.753 188.242 74.7666 cv188.21 74.7823 188.167 74.7969 188.124 74.8096 cv188.069 74.8223 188.016 74.8331 187.95 74.8418 cv187.876 74.8487 187.788 74.8506 187.702 74.8467 cv187.616 74.8448 187.53 74.8331 187.433 74.8174 cv187.347 74.8008 187.271 74.7794 187.195 74.7559 cv187.13 74.7334 187.065 74.709 187.013 74.6797 cv186.98 74.6495 186.947 74.6192 186.915 74.585 cv186.894 74.5499 186.872 74.5108 186.839 74.4668 cv186.817 74.4219 186.796 74.3721 186.774 74.2989 cv186.753 74.2256 186.742 74.1319 186.721 74.0342 cv186.721 73.8995 li186.721 66.9092 li186.742 66.6895 186.764 66.4708 186.785 66.3262 cv186.808 66.1827 186.829 66.1133 186.86 66.0518 cv186.882 65.9913 186.904 65.9424 186.937 65.8975 cv186.969 65.8516 187.001 65.8116 187.034 65.7725 cv187.077 65.7432 187.109 65.7198 187.152 65.6944 cv187.195 65.6729 187.249 65.6504 187.304 65.6329 cv187.357 65.6143 187.423 65.5977 187.487 65.587 cv187.563 65.5752 187.648 65.5674 187.745 65.5674 cv187.843 65.5674 187.962 65.5772 188.081 65.5948 cv188.134 65.6124 188.178 65.6329 188.221 65.6573 cv188.253 65.6807 188.296 65.7061 188.329 65.7334 cv188.36 65.7608 188.394 65.7901 188.426 65.8252 cv188.458 65.8565 188.48 65.8936 188.512 65.9346 cv188.534 65.9756 188.556 66.0206 188.577 66.0733 cv188.599 66.127 188.62 66.1876 188.642 66.2647 cv188.663 66.3399 188.674 66.4317 188.674 66.6368 cv188.685 66.8418 188.663 67.1602 188.663 67.3916 cv188.652 67.627 188.663 67.7735 188.685 67.921 cv190.725 67.921 li190.735 67.501 190.735 67.0792 190.702 66.7881 cv190.681 66.4961 190.638 66.334 190.584 66.2002 cv190.541 66.0655 190.498 65.9561 190.433 65.8545 cv190.401 65.7862 190.368 65.7217 190.314 65.6475 cv190.261 65.5733 190.196 65.4932 190.088 65.3926 cv189.991 65.292 189.851 65.1719 189.699 65.0616 cv189.494 64.9366 189.278 64.8399 189.009 64.7588 cvf181.378 64.7042 mo181.378 68.6602 li181.378 75.6504 li183.386 75.6504 li183.386 71.6954 li183.386 64.7042 li181.378 64.7042 lif169.345 64.7042 mo169.161 64.7042 168.979 64.7188 168.838 64.7452 cv168.708 64.7725 168.611 64.8096 168.515 64.8545 cv168.417 64.8995 168.319 64.9502 168.255 64.9922 cv168.19 65.0323 168.158 65.0635 168.114 65.0938 cv168.083 65.1231 168.062 65.1514 168.028 65.1807 cv168.007 65.21 167.985 65.2413 167.964 65.2745 cv167.953 65.3077 167.932 65.3448 167.921 65.3877 cv167.909 65.4307 167.888 65.4795 167.878 65.5655 cv167.866 65.6514 167.866 65.7725 167.866 65.8956 cv167.866 67.4561 li167.866 74.4454 li167.855 74.584 167.855 74.7227 167.866 74.8282 cv167.878 74.9336 167.899 75.004 167.921 75.0626 cv167.942 75.1221 167.953 75.168 167.975 75.2051 cv167.996 75.2432 168.018 75.2715 168.05 75.3008 cv168.071 75.3311 168.104 75.3604 168.147 75.3916 cv168.19 75.421 168.233 75.4532 168.298 75.4834 cv168.363 75.5127 168.428 75.542 168.525 75.5704 cv168.611 75.5967 168.708 75.6211 168.816 75.6368 cv168.935 75.6534 169.054 75.6651 169.173 75.6651 cv173.134 75.6651 li173.134 74.6797 li170.618 74.6797 li170.479 74.6797 170.349 74.6768 170.251 74.6729 cv170.165 74.668 170.111 74.6631 170.079 74.6592 cv170.047 74.6544 170.015 74.6495 170.003 74.6446 cv169.981 74.6387 169.96 74.6329 169.95 74.629 cv169.938 74.6241 169.928 74.6192 169.928 74.6133 cv169.917 74.6075 169.906 74.6026 169.906 74.5967 cv169.906 74.5909 169.896 74.584 169.896 74.5752 cv169.885 74.5674 169.885 74.5586 169.885 74.5391 cv169.874 74.5186 169.874 74.4893 169.874 74.46 cv169.874 70.2872 li172.507 70.2872 li172.507 69.3292 li169.906 69.3292 li169.906 66.7989 li169.906 65.9385 li169.906 65.9112 169.906 65.8858 169.917 65.8643 cv169.917 65.8438 169.928 65.8272 169.928 65.8135 cv169.938 65.7999 169.938 65.7901 169.95 65.7784 cv169.96 65.7666 169.972 65.7569 169.981 65.7461 cv169.993 65.7374 170.015 65.7276 170.024 65.7198 cv170.047 65.711 170.068 65.7032 170.09 65.6944 cv170.122 65.6866 170.144 65.6788 170.187 65.6739 cv170.22 65.6651 170.273 65.6592 170.327 65.6563 cv170.382 65.6514 170.456 65.6495 170.532 65.6495 cv172.993 65.6495 li172.993 64.7042 li169.345 64.7042 lif160.431 75.6504 mo161.995 75.6504 li161.995 69.2393 li163.561 73.2657 li165.114 69.2569 li165.114 75.6504 li166.679 75.6504 li166.679 64.7032 li165.114 64.7032 li163.561 68.6983 li162.071 64.7032 li160.431 64.7032 li160.431 75.6504 lif118.353 70.3409 mo118.353 74.1856 li118.353 74.2422 118.341 74.2989 118.341 74.3458 cv118.331 74.3916 118.319 74.4288 118.31 74.461 cv118.287 74.4932 118.276 74.5206 118.255 74.546 cv118.244 74.5713 118.223 74.5938 118.201 74.6143 cv118.179 74.6348 118.158 74.6544 118.126 74.671 cv118.093 74.6895 118.062 74.7061 118.028 74.7208 cv117.985 74.7364 117.942 74.75 117.899 74.7598 cv117.845 74.7725 117.78 74.7823 117.716 74.7901 cv117.64 74.7969 117.554 74.8008 117.468 74.8008 cv117.392 74.8038 117.315 74.8038 117.251 74.7999 cv117.176 74.795 117.122 74.7901 117.079 74.7813 cv117.036 74.7715 116.992 74.7618 116.96 74.75 cv116.917 74.7383 116.896 74.7247 116.862 74.711 cv116.841 74.6954 116.819 74.6807 116.798 74.6641 cv116.776 74.6475 116.755 74.6299 116.744 74.6094 cv116.723 74.5909 116.712 74.5684 116.701 74.544 cv116.69 74.5206 116.679 74.4922 116.669 74.46 cv116.657 74.4268 116.657 74.3907 116.647 74.3438 cv116.647 74.296 116.647 74.2413 116.647 74.1856 cv116.647 71.9844 116.636 69.7823 116.636 68.5069 cv116.636 67.2295 116.636 66.8799 116.647 66.6612 cv116.647 66.4415 116.647 66.3526 116.647 66.2647 cv116.647 66.2081 116.647 66.1514 116.647 66.1045 cv116.647 66.0596 116.657 66.0245 116.669 65.9952 cv116.679 65.9659 116.69 65.9424 116.701 65.921 cv116.712 65.8975 116.723 65.878 116.733 65.8604 cv116.755 65.8428 116.776 65.8252 116.787 65.8096 cv116.81 65.795 116.83 65.7784 116.862 65.7647 cv116.884 65.752 116.917 65.7374 116.949 65.7276 cv116.981 65.7139 117.024 65.7032 117.067 65.6944 cv117.122 65.6846 117.176 65.6758 117.241 65.671 cv117.315 65.6651 117.392 65.6631 117.478 65.6631 cv117.554 65.6631 117.651 65.6651 117.716 65.6739 cv117.791 65.6807 117.856 65.6895 117.909 65.7022 cv117.953 65.7139 117.996 65.7276 118.039 65.7413 cv118.071 65.7569 118.104 65.7725 118.136 65.7901 cv118.158 65.8077 118.179 65.8252 118.201 65.8458 cv118.223 65.8643 118.244 65.8868 118.267 65.9112 cv118.276 65.9346 118.298 65.962 118.31 65.9952 cv118.319 66.0254 118.331 66.0616 118.341 66.1084 cv118.341 66.1534 118.353 66.209 118.353 66.2647 cv118.353 70.3409 licp120.187 65.6895 mo120.154 65.6377 120.122 65.5889 120.089 65.5411 cv120.058 65.4952 120.024 65.4522 119.981 65.4102 cv119.938 65.3682 119.896 65.3311 119.853 65.293 cv119.81 65.2549 119.755 65.2188 119.701 65.1846 cv119.647 65.1495 119.593 65.1182 119.539 65.0879 cv119.291 64.9639 119.032 64.8702 118.73 64.7969 cv118.417 64.7237 118.071 64.6739 117.694 64.6612 cv117.315 64.6514 116.917 64.6807 116.55 64.7432 cv116.183 64.8047 115.838 64.9014 115.514 65.0323 cv115.438 65.0635 115.374 65.0987 115.298 65.1358 cv115.233 65.1719 115.169 65.212 115.104 65.253 cv115.05 65.296 114.985 65.3409 114.931 65.3877 cv114.888 65.4366 114.834 65.4874 114.79 65.5411 cv114.737 65.5977 114.694 65.6582 114.661 65.7247 cv114.618 65.792 114.575 65.8643 114.554 65.9522 cv114.521 66.0401 114.499 66.1456 114.499 66.251 cv114.499 67.2217 li114.499 74.2129 li114.499 74.3174 114.521 74.42 114.554 74.5088 cv114.575 74.5987 114.618 74.671 114.661 74.7374 cv114.694 74.8038 114.737 74.8653 114.79 74.919 cv114.834 74.9756 114.888 75.0274 114.931 75.0743 cv114.985 75.1221 115.05 75.168 115.104 75.21 cv115.169 75.252 115.233 75.292 115.298 75.3272 cv115.374 75.3643 115.438 75.3995 115.514 75.4297 cv115.956 75.6075 116.431 75.7237 116.917 75.7725 cv117.402 75.8213 117.899 75.8047 118.341 75.7344 cv118.772 75.667 119.14 75.5479 119.485 75.376 cv119.539 75.3487 119.593 75.3194 119.647 75.2881 cv119.701 75.2569 119.755 75.2247 119.798 75.1895 cv119.841 75.1544 119.884 75.1192 119.929 75.0801 cv119.972 75.0411 120.015 75.001 120.046 74.9571 cv120.079 74.9141 120.122 74.8682 120.144 74.8194 cv120.177 74.7696 120.208 74.7178 120.23 74.6582 cv120.251 74.5997 120.273 74.5352 120.294 74.4581 cv120.306 74.3799 120.306 74.2881 120.306 74.1993 cv120.306 73.336 li120.306 66.3448 li120.316 66.251 120.316 66.1563 120.306 66.0733 cv120.294 65.9903 120.284 65.9219 120.263 65.8604 cv120.241 65.7979 120.208 65.7413 120.187 65.6895 cvf90.3355 70.3409 mo90.3355 74.1856 li90.3355 74.2422 90.3355 74.2989 90.3248 74.3458 cv90.3135 74.3916 90.3028 74.4288 90.292 74.461 cv90.2813 74.4932 90.2598 74.5206 90.2486 74.546 cv90.2276 74.5713 90.2164 74.5938 90.1841 74.6143 cv90.1626 74.6348 90.1407 74.6544 90.1197 74.671 cv90.087 74.6895 90.0547 74.7061 90.0118 74.7208 cv89.9791 74.7364 89.9356 74.75 89.8819 74.7598 cv89.8277 74.7725 89.774 74.7823 89.6988 74.7901 cv89.6338 74.7969 89.5474 74.8008 89.461 74.8008 cv89.3858 74.8038 89.2994 74.8038 89.2344 74.7999 cv89.1695 74.795 89.1158 74.7901 89.0616 74.7813 cv89.0186 74.7715 88.9756 74.7618 88.9429 74.75 cv88.9107 74.7383 88.8785 74.7247 88.8565 74.711 cv88.8243 74.6954 88.8028 74.6807 88.7813 74.6641 cv88.7706 74.6475 88.7486 74.6299 88.7276 74.6094 cv88.7164 74.5909 88.7056 74.5684 88.6949 74.544 cv88.6734 74.5206 88.6626 74.4922 88.6626 74.46 cv88.6514 74.4268 88.6407 74.3907 88.6407 74.3438 cv88.6304 74.296 88.6304 74.2413 88.6407 74.1856 cv88.6304 71.9844 88.6304 69.7823 88.6304 68.5069 cv88.6304 67.2295 88.6304 66.8799 88.6304 66.6612 cv88.6304 66.4415 88.6304 66.3526 88.6407 66.2647 cv88.6304 66.2081 88.6304 66.1514 88.6407 66.1045 cv88.6407 66.0596 88.6514 66.0245 88.6514 65.9952 cv88.6626 65.9659 88.6734 65.9424 88.6841 65.921 cv88.6949 65.8975 88.7164 65.878 88.7276 65.8604 cv88.7378 65.8428 88.7593 65.8252 88.7813 65.8096 cv88.8028 65.795 88.8243 65.7784 88.8458 65.7647 cv88.8785 65.752 88.9 65.7374 88.9429 65.7276 cv88.9756 65.7139 89.0186 65.7032 89.0616 65.6944 cv89.1045 65.6846 89.1695 65.6758 89.2344 65.671 cv89.2994 65.6651 89.3746 65.6631 89.461 65.6631 cv89.5474 65.6631 89.6338 65.6651 89.7095 65.6739 cv89.7847 65.6807 89.8389 65.6895 89.8926 65.7022 cv89.9468 65.7139 89.9898 65.7276 90.0225 65.7413 cv90.0655 65.7569 90.0977 65.7725 90.1197 65.7901 cv90.1519 65.8077 90.1734 65.8252 90.1949 65.8458 cv90.2164 65.8643 90.2378 65.8868 90.2486 65.9112 cv90.2706 65.9346 90.2813 65.962 90.292 65.9952 cv90.3028 66.0254 90.3135 66.0616 90.3248 66.1084 cv90.3355 66.1534 90.3355 66.209 90.3355 66.2647 cv90.3355 70.3409 licp92.1705 65.6895 mo92.148 65.6377 92.1158 65.5889 92.0835 65.5411 cv92.0406 65.4952 92.0084 65.4522 91.9654 65.4102 cv91.9322 65.3682 91.8892 65.3311 91.8345 65.293 cv91.7916 65.2549 91.7486 65.2188 91.6949 65.1846 cv91.6412 65.1495 91.5865 65.1182 91.522 65.0879 cv91.2847 64.9639 91.0259 64.8702 90.7134 64.7969 cv90.4107 64.7237 90.0547 64.6739 89.6768 64.6612 cv89.2994 64.6514 88.9 64.6807 88.5328 64.7432 cv88.1661 64.8047 87.8316 64.9014 87.5074 65.0323 cv87.4322 65.0635 87.3565 65.0987 87.2916 65.1358 cv87.2164 65.1719 87.1514 65.212 87.0977 65.253 cv87.0328 65.296 86.9791 65.3409 86.9253 65.3877 cv86.8711 65.4366 86.8169 65.4874 86.7735 65.5411 cv86.7305 65.5977 86.6876 65.6582 86.6441 65.7247 cv86.6011 65.792 86.5684 65.8643 86.5362 65.9522 cv86.5147 66.0401 86.4932 66.1456 86.4825 66.251 cv86.4825 67.2217 li86.4825 74.2129 li86.4932 74.3174 86.5147 74.42 86.5362 74.5088 cv86.5684 74.5987 86.6011 74.671 86.6441 74.7374 cv86.6876 74.8038 86.7305 74.8653 86.7735 74.919 cv86.8169 74.9756 86.8711 75.0274 86.9253 75.0743 cv86.9791 75.1221 87.0328 75.168 87.0977 75.21 cv87.1514 75.252 87.2164 75.292 87.2916 75.3272 cv87.3565 75.3643 87.4322 75.3995 87.5074 75.4297 cv87.9502 75.6075 88.4146 75.7237 88.9 75.7725 cv89.3858 75.8213 89.8926 75.8047 90.3248 75.7344 cv90.7564 75.667 91.1236 75.5479 91.4693 75.376 cv91.5328 75.3487 91.5865 75.3194 91.6412 75.2881 cv91.6949 75.2569 91.7378 75.2247 91.7916 75.1895 cv91.8345 75.1544 91.8785 75.1192 91.9224 75.0801 cv91.9654 75.0411 91.9966 75.001 92.0406 74.9571 cv92.0728 74.9141 92.105 74.8682 92.1373 74.8194 cv92.1705 74.7696 92.1919 74.7178 92.2134 74.6582 cv92.2457 74.5997 92.2671 74.5352 92.2779 74.4581 cv92.2886 74.3799 92.2994 74.2881 92.2886 74.1993 cv92.2886 73.336 li92.2886 66.3448 li92.2994 66.251 92.2994 66.1563 92.2994 66.0733 cv92.2886 65.9903 92.2671 65.9219 92.2457 65.8604 cv92.2232 65.7979 92.2017 65.7413 92.1705 65.6895 cvf142.257 74.629 mo142.257 74.668 142.257 74.709 142.246 74.7413 cv142.246 74.7745 142.235 74.8008 142.225 74.8252 cv142.214 74.8487 142.202 74.8682 142.192 74.8868 cv142.182 74.9053 142.159 74.9219 142.149 74.9376 cv142.128 74.9522 142.105 74.9668 142.085 74.9805 cv142.063 74.9942 142.041 75.0069 142.009 75.0166 cv141.977 75.0294 141.944 75.0391 141.901 75.0489 cv141.857 75.0577 141.814 75.0655 141.749 75.0713 cv141.696 75.0772 141.62 75.0811 141.544 75.0801 cv141.48 75.084 141.404 75.084 141.351 75.0811 cv141.296 75.0782 141.243 75.0704 141.21 75.0645 cv141.167 75.0557 141.134 75.046 141.103 75.0362 cv141.081 75.0245 141.059 75.0127 141.038 75.001 cv141.016 74.9874 140.994 74.9727 140.983 74.9571 cv140.962 74.9415 140.95 74.9249 140.94 74.9063 cv140.93 74.8868 140.919 74.8653 140.907 74.8418 cv140.907 74.8165 140.897 74.7872 140.897 74.751 cv140.897 74.7149 140.897 74.671 140.897 74.629 cv140.886 72.9737 140.886 71.3204 140.886 70.3633 cv140.886 69.4034 140.886 69.1407 140.886 68.9756 cv140.897 68.8116 140.897 68.7432 140.897 68.6788 cv140.897 68.6358 140.886 68.5958 140.897 68.5606 cv140.897 68.5274 140.897 68.502 140.907 68.4815 cv140.907 68.459 140.919 68.4415 140.93 68.4249 cv140.94 68.4082 140.95 68.3936 140.962 68.3799 cv140.973 68.3653 140.983 68.3526 140.994 68.3418 cv141.016 68.3292 141.038 68.3174 141.048 68.3067 cv141.069 68.296 141.091 68.2862 141.124 68.2764 cv141.155 68.2686 141.188 68.2598 141.221 68.253 cv141.264 68.2442 141.308 68.2374 141.36 68.2344 cv141.415 68.2286 141.48 68.2256 141.556 68.2256 cv141.62 68.2276 141.696 68.2305 141.749 68.2354 cv141.814 68.2413 141.857 68.2491 141.901 68.2588 cv141.944 68.2676 141.977 68.2784 142.009 68.2911 cv142.041 68.3008 142.063 68.3135 142.085 68.3272 cv142.105 68.3399 142.128 68.3555 142.149 68.3702 cv142.159 68.3848 142.182 68.4004 142.192 68.42 cv142.202 68.4385 142.214 68.459 142.225 68.4825 cv142.235 68.5069 142.246 68.5323 142.246 68.5655 cv142.257 68.5977 142.257 68.6387 142.257 68.6788 cv142.257 74.629 licp143.725 68.2627 mo143.703 68.2227 143.682 68.1866 143.649 68.1514 cv143.616 68.1163 143.595 68.0821 143.563 68.0518 cv143.53 68.0206 143.487 67.9893 143.454 67.961 cv143.411 67.9317 143.379 67.9053 143.325 67.878 cv143.282 67.8506 143.239 67.8262 143.196 67.8018 cv142.915 67.6729 142.624 67.584 142.278 67.5313 cv141.923 67.4795 141.513 67.4649 141.124 67.503 cv140.725 67.5381 140.347 67.627 139.99 67.7618 cv139.926 67.7862 139.872 67.8116 139.808 67.8399 cv139.753 67.8682 139.699 67.8995 139.656 67.9317 cv139.603 67.9639 139.559 67.9981 139.516 68.0342 cv139.472 68.0713 139.429 68.1104 139.397 68.1514 cv139.354 68.1934 139.321 68.2393 139.289 68.2891 cv139.257 68.3389 139.235 68.3936 139.214 68.4571 cv139.192 68.5235 139.171 68.6006 139.171 68.6788 cv139.171 74.6416 li139.171 74.7208 139.192 74.7969 139.214 74.8633 cv139.235 74.9278 139.257 74.9815 139.289 75.0332 cv139.321 75.0811 139.354 75.128 139.397 75.169 cv139.429 75.211 139.472 75.25 139.516 75.2872 cv139.559 75.3223 139.603 75.3565 139.656 75.3887 cv139.699 75.421 139.753 75.4522 139.808 75.4805 cv139.872 75.5088 139.926 75.5352 139.99 75.5596 cv140.347 75.6944 140.725 75.7832 141.112 75.8204 cv141.501 75.8555 141.901 75.8428 142.257 75.7901 cv142.603 75.7374 142.894 75.6485 143.163 75.5186 cv143.206 75.4971 143.249 75.4756 143.293 75.4512 cv143.336 75.4278 143.379 75.4024 143.411 75.377 cv143.454 75.3506 143.487 75.3223 143.52 75.294 cv143.552 75.2647 143.584 75.2325 143.616 75.2002 cv143.638 75.168 143.671 75.1319 143.692 75.0958 cv143.714 75.0586 143.735 75.0196 143.757 74.9737 cv143.778 74.9307 143.789 74.8819 143.8 74.8223 cv143.812 74.7647 143.821 74.6954 143.812 74.629 cv143.812 68.7461 li143.821 68.6768 143.821 68.6065 143.821 68.5469 cv143.812 68.4864 143.8 68.4366 143.778 68.3907 cv143.768 68.3448 143.746 68.3008 143.725 68.2627 cvf157.193 69.3428 mo155.499 69.3428 li155.488 68.6866 155.488 68.0303 155.488 67.5762 cv155.488 67.1221 155.488 66.8721 155.488 66.6836 cv155.488 66.4932 155.499 66.3663 155.499 66.2374 cv155.499 66.1436 155.499 66.0489 155.51 65.9874 cv155.521 65.9249 155.531 65.8946 155.542 65.8702 cv155.553 65.8458 155.563 65.8252 155.585 65.8057 cv155.597 65.7862 155.617 65.7706 155.628 65.7549 cv155.649 65.7374 155.671 65.7247 155.704 65.711 cv155.726 65.6963 155.758 65.6846 155.79 65.6729 cv155.822 65.6592 155.866 65.6495 155.909 65.6416 cv155.963 65.6299 156.017 65.6221 156.093 65.6163 cv156.157 65.6114 156.233 65.6084 156.319 65.6084 cv156.405 65.6084 156.491 65.6124 156.567 65.6202 cv156.644 65.628 156.696 65.6358 156.751 65.6495 cv156.805 65.6592 156.849 65.6739 156.88 65.6885 cv156.923 65.7032 156.956 65.7198 156.978 65.7354 cv157.009 65.7549 157.031 65.7725 157.054 65.792 cv157.074 65.8126 157.097 65.834 157.106 65.8584 cv157.128 65.8819 157.14 65.9082 157.149 65.9405 cv157.171 65.9717 157.183 66.0079 157.183 66.0538 cv157.193 66.0997 157.193 66.1553 157.193 66.21 cv157.193 69.3428 licp159.146 65.6358 mo159.114 65.585 159.093 65.5342 159.05 65.4874 cv159.017 65.4415 158.984 65.3975 158.941 65.3584 cv158.898 65.3145 158.855 65.2764 158.812 65.2393 cv158.769 65.2012 158.715 65.1661 158.661 65.1309 cv158.618 65.0958 158.554 65.0635 158.499 65.0342 cv158.251 64.9092 157.991 64.8155 157.689 64.7432 cv157.388 64.67 157.031 64.6202 156.653 64.6084 cv156.276 64.5987 155.876 64.626 155.51 64.6885 cv155.144 64.751 154.798 64.8477 154.474 64.9795 cv154.409 65.0098 154.333 65.045 154.258 65.0811 cv154.192 65.1182 154.128 65.1573 154.074 65.1983 cv154.01 65.2413 153.956 65.2862 153.901 65.3331 cv153.848 65.3819 153.794 65.4327 153.751 65.4883 cv153.696 65.544 153.653 65.6045 153.621 65.671 cv153.577 65.7374 153.546 65.8116 153.513 65.8995 cv153.481 65.9874 153.47 66.0918 153.459 66.1963 cv153.459 68.6602 li153.459 75.6504 li155.466 75.6504 li155.466 70.3829 li155.466 70.3838 155.478 70.3838 155.478 70.3838 cv155.478 70.3838 155.478 70.3838 155.488 70.3838 cv155.488 70.3838 155.488 70.3838 155.628 70.3858 cv155.758 70.3858 156.028 70.3858 156.33 70.3858 cv156.621 70.3858 156.935 70.3838 157.259 70.3829 cv157.259 75.6504 li159.265 75.6504 li159.265 73.2832 li159.265 66.292 li159.276 66.1983 159.276 66.1026 159.265 66.0186 cv159.265 65.9385 159.243 65.8682 159.222 65.8057 cv159.2 65.7432 159.179 65.6885 159.146 65.6358 cvf178.001 68.625 mo177.989 68.8057 177.968 68.8956 177.936 68.9708 cv177.914 69.046 177.893 69.1026 177.86 69.1534 cv177.839 69.2051 177.806 69.2481 177.773 69.2872 cv177.741 69.3272 177.71 69.3624 177.677 69.3946 cv177.634 69.4268 177.601 69.4551 177.558 69.4805 cv177.429 69.5215 177.3 69.5528 177.147 69.5792 cv176.997 69.6045 176.824 69.6221 176.63 69.627 cv176.436 69.6329 176.23 69.6241 176.025 69.6036 cv176.025 65.6631 li176.209 65.6397 176.393 65.628 176.565 65.628 cv176.737 65.628 176.89 65.6377 177.007 65.6553 cv177.138 65.671 177.234 65.6905 177.32 65.7168 cv177.417 65.7432 177.505 65.7764 177.569 65.8038 cv177.634 65.8331 177.666 65.8545 177.688 65.878 cv177.72 65.8995 177.741 65.9249 177.773 65.9512 cv177.796 65.9756 177.817 66.0049 177.839 66.0381 cv177.86 66.0694 177.882 66.1045 177.893 66.1436 cv177.925 66.2276 177.946 66.3155 177.958 66.418 cv177.979 66.5215 178.001 66.6416 178.011 66.8936 cv178.032 67.1436 178.032 67.5245 178.032 67.8506 cv178.032 68.1768 178.022 68.4463 178.001 68.625 cvcp179.35 69.9542 mo179.415 69.9082 179.468 69.8584 179.522 69.8018 cv179.576 69.7461 179.63 69.6856 179.685 69.6153 cv179.728 69.545 179.771 69.4678 179.813 69.376 cv179.856 69.2852 179.899 69.1778 179.933 69.044 cv179.976 68.9112 180.008 68.7491 180.04 68.4004 cv180.062 68.0538 180.073 67.5215 180.073 67.0997 cv180.073 66.6768 180.062 66.3624 180.04 66.1456 cv180.008 65.9288 179.976 65.8077 179.942 65.7061 cv179.899 65.6006 179.868 65.5147 179.825 65.4307 cv179.737 65.3194 179.641 65.2227 179.532 65.1377 cv179.415 65.0528 179.274 64.9834 179.102 64.919 cv178.929 64.8565 178.713 64.8018 178.433 64.7647 cv178.151 64.7266 177.796 64.7042 177.439 64.7042 cv174.019 64.7042 li174.019 68.6602 li174.019 75.6504 li176.025 75.6504 li176.025 70.6163 li176.296 70.6211 176.565 70.6348 176.749 70.6504 cv176.933 70.6651 177.019 70.6836 177.095 70.6973 cv177.159 70.712 177.202 70.7237 177.245 70.7383 cv177.364 70.7774 177.472 70.837 177.569 70.9141 cv177.677 70.9932 177.763 71.0889 177.827 71.1934 cv177.903 71.2989 177.946 71.4131 177.979 71.5323 cv177.989 71.7149 178.001 71.8956 178.011 72.1563 cv178.011 72.418 178.022 72.7608 178.032 73.3575 cv178.044 73.9512 178.044 74.8008 178.032 75.6504 cv180.051 75.6504 li180.051 74.7413 180.051 73.834 180.04 73.2022 cv180.04 72.5723 180.029 72.2188 180.019 71.9493 cv180.008 71.6807 179.997 71.4971 179.986 71.3116 cv179.986 71.2657 179.976 71.2178 179.965 71.168 cv179.942 71.1182 179.933 71.0665 179.899 71.0147 cv179.878 70.962 179.846 70.9044 179.803 70.8467 cv179.771 70.7891 179.717 70.7295 179.663 70.668 cv179.598 70.6055 179.532 70.543 179.458 70.4815 cv179.382 70.4219 179.296 70.3633 179.198 70.3116 cv179.112 70.2598 179.015 70.2139 178.917 70.1778 cv178.993 70.1495 179.069 70.1163 179.145 70.0792 cv179.22 70.042 179.284 69.9991 179.35 69.9542 cvf195.333 69.3428 mo193.638 69.3428 li193.628 68.6866 193.628 68.0303 193.628 67.5762 cv193.628 67.1221 193.628 66.8721 193.628 66.6836 cv193.628 66.4932 193.628 66.3663 193.638 66.2374 cv193.638 66.1436 193.638 66.0489 193.649 65.9874 cv193.66 65.9249 193.671 65.8946 193.681 65.8702 cv193.692 65.8458 193.703 65.8252 193.726 65.8057 cv193.735 65.7862 193.746 65.7706 193.769 65.7549 cv193.789 65.7374 193.812 65.7247 193.833 65.711 cv193.865 65.6963 193.897 65.6846 193.931 65.6729 cv193.962 65.6592 194.005 65.6495 194.048 65.6416 cv194.103 65.6299 194.156 65.6221 194.222 65.6163 cv194.296 65.6114 194.372 65.6084 194.458 65.6084 cv194.545 65.6084 194.632 65.6124 194.707 65.6202 cv194.782 65.628 194.837 65.6358 194.89 65.6495 cv194.944 65.6592 194.987 65.6739 195.02 65.6885 cv195.063 65.7032 195.095 65.7198 195.117 65.7354 cv195.149 65.7549 195.171 65.7725 195.192 65.792 cv195.214 65.8126 195.235 65.834 195.247 65.8584 cv195.269 65.8819 195.278 65.9082 195.29 65.9405 cv195.3 65.9717 195.312 66.0079 195.322 66.0538 cv195.333 66.0997 195.333 66.1553 195.333 66.21 cv195.333 69.3428 licp197.362 65.8057 mo197.341 65.7432 197.308 65.6885 197.286 65.6358 cv197.253 65.585 197.222 65.5342 197.188 65.4874 cv197.157 65.4415 197.124 65.3975 197.081 65.3584 cv197.038 65.3145 196.995 65.2764 196.952 65.2393 cv196.908 65.2012 196.854 65.1661 196.8 65.1309 cv196.757 65.0958 196.692 65.0635 196.639 65.0342 cv196.391 64.9092 196.132 64.8155 195.829 64.7432 cv195.527 64.67 195.171 64.6202 194.793 64.6084 cv194.415 64.5987 194.017 64.626 193.649 64.6885 cv193.282 64.751 192.937 64.8477 192.613 64.9795 cv192.538 65.0098 192.473 65.045 192.397 65.0811 cv192.332 65.1182 192.269 65.1573 192.203 65.1983 cv192.149 65.2413 192.095 65.2862 192.041 65.3331 cv191.987 65.3819 191.933 65.4327 191.89 65.4883 cv191.836 65.544 191.793 65.6045 191.761 65.671 cv191.718 65.7374 191.685 65.8116 191.653 65.8995 cv191.62 65.9874 191.61 66.0918 191.599 66.1963 cv191.599 68.6602 li191.599 75.6504 li193.606 75.6504 li193.606 70.3829 li193.606 70.3838 193.617 70.3838 193.617 70.3838 cv193.617 70.3838 193.617 70.3838 193.628 70.3838 cv193.628 70.3838 193.628 70.3838 193.757 70.3858 cv193.897 70.3858 194.167 70.3858 194.47 70.3858 cv194.761 70.3858 195.073 70.3838 195.397 70.3829 cv195.397 75.6504 li197.405 75.6504 li197.405 73.2832 li197.405 66.292 li197.415 66.1983 197.415 66.1026 197.405 66.0186 cv197.394 65.9385 197.384 65.8682 197.362 65.8057 cvf10.7969 38.1646 mo26.7427 41.8741 li10.3536 61.3086 li0 56.2696 li10.7969 38.1646 li0 0 0 0 cmykf32.9126 2.88868 mo28.1441 14.2344 li31.605 15.1368 li22.9986 34.6036 li25.6353 35.2881 li7.06397 62.3995 li42.1734 24.084 li39.5015 23.3877 li57.9986 1.0293 li32.9126 2.88868 li0.027451 0.235295 0.956863 0.00392157 cmykf1.44385 67.6534 mo22.7222 36.3233 li20.3834 35.7139 li29.0621 16.418 li25.4244 15.4717 li29.2876 6.50782 li19.9722 7.12403 li14.9263 19.8594 li18.9664 20.9112 li9.80127 42.9268 li13.5884 43.9131 li1.44385 67.6534 li0.0588236 0.901961 0.725491 0.00784314 cmykf1.75 lw0 lc0 lj4 ml[] 0 dshtrue sadj59.0708 0.559571 mo40.3433 23.0879 li42.7769 23.7022 li7.36182 62.3331 li0 0 0 0 cmyk@%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 11.0.0%%For: (Marcy Folgate) (Folgate Design)%%Title: (ASAlogo.eps)%%CreationDate: 10/5/05 10:44 AM%AI9_DataStream%Gb"-6l&He+PpZ8/rXSHG#GoG%E8/Wj_>ne:>?s%dP+\o!;PMPM=A5%!BeBHCPA8@kchYjqB(#C_E(SVSs%kZm2r(RH\LkkIIZAjJ%c10W9Dh!$)p5d7<s7=idhW;?dl+a9CabSuIDuT('hnAr-?fu-\25&r-T<"a@j_8&Q9TStHDQSni426.4o:)(bJ,8R0G;!;%puCVp%lZ_fIr:Sn1YKu+_rR:@&dPoM@^45tTot.uo*FD$\nNW=X%f_pqE-_-QjlP=q2pZub.o062Kg5(%s8!s'6]^8G.K7As04+\V_oprc%__6N7a#EY`O8,IIJcG`Cj\J*<LZseY3ck.qn,KT%,JUrsq/U\/pYUGonrKu'r9=1OT3f3XqqllLD?%f&2h-;Tr25lDhQYFQmm9\B%4oX$$e7#NA4T;2.SsImk>q,?"e/FP@o#%MpJ,(tH^l)94IsUkLT4E&YIJ#qHIsD"B\$,cQ)JH"f9(PsW]:WHFI/gBg?i<C1iCRbS%fK[(HiT4hrTg!gKr>\25_6%lPKn"CIrf8^^U?-dsqIbc\f6;AfYQ"@\2p\)qp#Z&m[C,^`hu*<3gOFMC*V]8acg@])Q+BqPr8F6M%NX"je?1mU1B6kM&R:%33Qh,]@+0D4gHV'o"q(42IDr/8*j/]Z(->7I#<pq-e^\V@i?L`5>Idq*Cf'.[js3b<oqbKGiI&d>tJ,#?p%rVYg8h`cOD$1daAeiS2q2b.'=\*)p=4f9`HeF!;4npfL:s8!C:B;M43n2k:\D@O?V-S#W,T-<.I&FaNBo'POjVranJ;(H;7jc!A'%UK5[,Mm_4VlEl:,NILA=CT,c%C>giD7]k,G[8&)3GrjoRdg:.L(OUS?jG]ui(OU_Ca>;7Sl*'_LhC.:@8c(]u(<:@C_O0g3[4ipH%WI0I5iA^%07/2a]gJ#\p(__AY%O8i/Zm>5g/Rq3DNH*tlV&0m&.C1Jl7kKZ-^JX076(+hcH7j7iZRE/5ht!S%>^A&OQbLSrd;rM:%X!'^+L%4+\>*9Vb;9O0h@e`>CN6bO,Ajr<1q!]5H(nI`mIS8!aK&<M\n_psYU-ORZX1TNm1`/L(%=W-<Ujk/cW$V%Io-,EGhP98^%06sb.D!NB)lj%Ye3eL+b%St9Hj]dZS^JRY^)rm,BO_=2'FYLDg)hVt]4#1mJ#(^ZE@=o;I2Y:5s7:<t*Krq>u]C\j1?/@+'L7[.W%f\!"gW+Bn6f&_2Q?@J^5Z82ZQA^+e(UkK3V#lK_=0$c*+fPV]kbN<NS^-K0DrI@*p4^c?SqH.<ujfo<ZOj,/C*j]:'[Jnm,V-SAp%\Wq[6.9P!^O8&4iplqBfjaMU"cgje&;DLGtV\HZ`TCPp]gt-<0Y533!a>`-XIZ?q/+.r,1HuhJEanV*mqg5jqTCT>^+2R,B48bCe%Q$^-,:E#jdVjK)LLRI3&F>`p\SB"nsePj/Of6AdC9\7GeM$./1"flak-2,UWZWo+?-:^k`j:>q#?7q":c?OOn?d:iUq$#[OHYVr`%Ip]'3?2pgoF'FDmon>TYj\jD!bI:-`e)d)^hbea@F?ItN>Yh8ROfe7nZuNn=a%JkG2-qp5`6k0k<:1e*h84jmi0a$6F?&7DL\aI<%Vm]@U-NA%S-Y\eDe$XS@m:Pb=9'r57pR1GNoS6W/>rT71F2L/XDNK%Oc*O=1+0B`;NUY#)FK9<plclbY[W]3*kMA;EK!\.V6+rH<%d3b['d;oFh#AU0XF6gNI_XfDOeQ^ufHB-"A]j&32Y3g2FFh-dAei#20-F\"`.p,=>a/mBi+90YsXOF,(e^Y^<gW+\%nXO*2R'?aq%)V%>"YVL+`X*7khSeG4I#Pm4[k.e5fO2ijYZ2t(T$7k5F19C/RdW>%=kI<b)]-_rI8"G:CkLa8QLV,h^Vf81&IL6M.Kjbi^o\5sI%eth-&IN.pPhZrIc$ent-E.3;posM5Ff@c*fosj71(I77?G8Q3"b=QXS+T*?D2e2LRAFKIo<\/N$jbuiU.JH#@0D\d3jAF7eh=jT!%%V%A,--"$[4cQN4qoct@UtH#bQT0^a5TofA1K(oM\".[/Gtj=7%N'c@j1XdhH-;SKZ#AEG++H[CY[TMbrZ6]R'CSO2(#HOXl0#dq%MtM*3Qe]uGlZ\g1n_<_NHeSS5QcI$(i,mZ1ok@sb=2dk^qdbE:ARNCnp40L:I0uqV'n,hX"IA4bFB/2gn'fr.4*7ho7^s=CB"0nC%IW`Wf*oeKhFQ.3>S`fMar_/eYnTtepL>kG1HS_fe@$,XcpmYZq#RWul1630V\*7dtf1ap3ka/c*Xm(G_g4#Q'p\)+j1[+rJ+n)UZ%3echcANNpT/%Z6RkgWYrRA`F%[BLZ^GTfa;$3/<Y4%8&I<7#qQO4PCaS9V!EYr19[^^c7l-9?:n]I0)eh5j0'NbeFp372,PL.`Q+%G1Sa5VK2aQk6L-ob3lgK)p?VODB=Rnq`)JWdi>HP^4H$I["#jXQTj5ID%H4Z\Ct;fh)cV-)nZU>q3C4#]mUDr49%N=CFUXG%bL@p%r]e;Ylu2M))"mDHpoU34OnO`C3Q!G!qT]W-Dt'4E-gs?DGb6jgMmV>\cosQ>(lKiP+1$*I*EJR8\TFeQYCXS'R+-<+(Oci*a:q+8%b1!uJ9"tTa(b\LnLoY"A__<O2lXN#uBP<GUT(C*'!L?%)N[Jf.qIH#NGj+cFnc&7+,PM(a$G?4i258=-XigPJbd8td'J)EFeAG'h%IgTaGr%W\:YkIk`%t3I%6+<9"UNOED*5ThXSUdjVr<6jpPJeVU#CK0cSj\#-FHuHk!rj-V$/CTt_*)GdN1%%k7&lAIWR(1;o`T<F%B:!Hspan65ejSX(n"&c8Dj1a%7h9I?*ie_No!CP?4a"#-km>?Z,@suXZ=<_7TS[s_$hlpc\m,@O@"p>i2u,'"/Ce\WpXUIt>,ekR%44`72mm;HAk?8Pf3:ur$j>"Z]SotNBMonGC3khs"Ng^0a=D+J73gtuLU%hr0EIVLmdU.?foNP?mr_a).'mj5fLLXS@n"f=Qj(2q=%bW4r\Hh*+X-dX'pfpZ+A[LRQYU2soZlX@ZkdUO`V3>;gsj2*FR[Gq%2ls*S.m_*V]gn(X^m8+aqi]#i/ZlNiq[:JXPQ\//O.Po36%1X8&2R5[Q!FP_tc;tsalM0gX^J:3p%0m8+4*C1dZ^tP_KYC!07<A:2-fmX=!O*r]RkJ4u`p%GG(ZWrG-kdtqSB77\:k#c5=XLcX0%^tBOC1%Xfgplr4qiuT^o^#k([_7"]l^LPM+eh5Oj`,G:=FK!qO8%Gb4XLJ,:GK:UT6ah?]Ra9WL.<%-a.rXn1P`*nNYp8@EjX-G@%q4ZM;QCcj"&'?&6a5>WO[hZ7*H0F`]Pqkdmd>YUIhSIc\n3(!WB]Bk1QsngjXZN1Jh[Mdh*hHQ8o=/qg0*d1`hBR?E0VXX:S9Uu%%UCK>o6H?IQ`Ra'GXdqcX#5oJ-o=1]%UF"Fk7XN/CoLY?,<2-r0-</\J;ErXT;,\_?Hq*3l7.s+]^:Aaj"70RhfBM*1fIq_2$efOV%^O,qIO7HTVS%ndmj\J,@=c@fWs+c)Q8$u^;KgBYQBE"e-iO?"?VQ^!XrO\^%r/Ydrj5'9MLEGCOqocV/_LhO]m;Lk0++Lj`^An#L%5Mc:]]6CH.FgnKG?V)dCo)2@*m76&"FWYLN2"X4RT:WfHrT]I4TE"^_Y?p"!rl4^24V'^QkR0&IT>,k9g>L`bq<4%"^>Q!'e][>]%^%!%;4T:)M^A7MIY@%8'Ai)W8N5%R]&[YB<?bZKta52d1NfH8Lot^tWDs[Dm5Mj)'1G(2FhS9$Yo(BUZ:XdrhT"k6_mbaVNs78V&%U3HY-lKo*=/)U@(lDKtYU#3QZ1L)9p^AZOP5GS"RVX+lJ4nJYto&Ppm'CUs"Vm$-ZrUV+;d?a_'h;>L;`;b;\Dh$c$\$pSIS\I8c%Yl(tAjm2B%p%*XfK9qp?Ys7jfdhOfCR]`_ndAuigE%U_JTGQq?<g'oC1LKlu?#Xd"e1(V\"M1=#FCi#j?.CgD%Wi^-GB>3VVX*)E%\<G3b+6\SMr%_33lC1$5UHa$eE;bJOn#/PY0r0mu$'bY.6TBg!3/@AW>\H5PqA<\#.HX`AN@c42.A#RJ][-q4$7VjB8uej:P&Sl1%?"h/?LR`D127ItWVgM:8G=r5gQ!A&aPS7Km96E,A<(h*$=O6Y,@gO`pdLPZomV-:M+W\_aE$2%Uk`518NpV'P?;CKa8<Q.f1g0X%%V!3d2p&7>m(,#F2/l^kO^6%!Ur#Z%KK]qmhp-clT$ZnC_.]#e6b5UBQli#rErr,S8p@8-$hl*5hTC3FN)=II:]-f>uI"+>P:Zpd6%E,OjM&A?3KFH5NLZFba2:BLCg"Jse&c!XAYVGfS\lDQe,<-#W9SuLbjj+.D2Bc'Zla(%)T)V2J>/r0>AR7;ItYr8=sjcF3;OiHj(%D2D6$qf\hs3RZ-Y<b[:Dbu:FknhauURG?9hSS/cL1m`?Y.Es]SOf$aZ,a1o/mV0O6j[`>-BE8Gl6Rn36`"NuM]T_gURF^Vi&%#e'%(L"G8,H[[f:g99.8b]U!-X,L3/TdfmcRI8i#6FpmLc?&5S-^m0"<NQ<U_($]!h2I5j5Lt0iLXHB7'LeV(on#F>:-#$"FQekE:k"K%a>3kZOT;b6YV)?Z2A5e2!p%m;#cu>Ti(&Cl7W;^J#:/"4JbFe=[-;9JC$X,^dtXSGU"u#K#L]Ye/&91%2c08g./XMgrWW^V:l'>Q%r8IDlX93GSBt^9>P^L)jo7s=+puCApY(,3pkrW#>PgqLSjYdorqU>=cDns-O+7sdncK4L\_!O11jD)<-?<spg$aU+^jkZ1cElG(0%/Bi[(bO;V4cP85^>g9boAp#0,c6'_po<n'cDm.(HC0+Km>T79lfmR#,*nW]kD+(PN:rh2)+-Aic/n$/NJeU<:&p-$pG0rJAUiDrM%<ulR!*I)cchI5&HL%cJ;[D\]E+W'fO$N9OCai[5"0"`4nGtX`S>Fp(Tg3)>SnO6ZidUk)D@E4XXo1%TPJN'jsNU1b_Q[[c^Flr"C%CS<mDf0QU[=7rSDTq.g$pF!r\;;,(./-3PO0uAXL_Yo'nI%;-DS/=tZc*cFkA!a!*Ijj@[fTuWh$GQ[."oPgu2FH'r!s8[pnjOjZ%CG;,AJV_[_:4+)X3\XtDB``8enh^X%%2's$C*E($!js=MHfDCY9q<se?0YC';6k;%-p9t]TZO/DdA,er$.;OoPZ(feQa3;+,Y?W-%mYWDI=kZfNYV'"1Bht2k`+b=2%=p8W>*MG"7*<U#i)qtDjn=R=E\3d8n<%K>pA4)j0-u,$2,T=o&]ss/Y0UtSUHbBOC&$d!$<A!#%dd8[%]>Eun<u:7mKoq-rH$>P0<HhNV\df,.Vf<`$f4fH"YHH^-66,g`]'Qs6\%DRg($9;*?ZC:dh3G1HZFfD3(B/!Zl`e!]=4_/1%SaBVQO/nDt%tap^9;0X="VP11YJM*[D<"9[M>;aejd@c)+mBt/SWjEqEX^ALS4;Kgo0jLba9&NaQaDUA'45CdA>q6*nY5B<OC9=-%i%CCV+hE;!I)\\qJKHUPNA'f*7@Wjh`jI5A@'5._1Q?$b6C8SJOqM+i1!X5SW-gJ:0QQD)[CFR:Fdo7$k'Z#j@iP(MUUt'n%gr+4%p18jG!R3FQ%KI5_*:Po)=Z):E2UF8<U]Z8]Lm9i`J^ojMH.^.5`=m#%0<@n?W^Y.35<Pn(:t15o1fTb!np).k#8Mt`;].2UX.3o6%;qDs0<-*<1\jONl_oV\l_A^>plO_B!h\YJgM&?T;'L7pc(?,rF!Vqj8MYAr;/$T_Y=GfYN74&eFP3dN<83PAShpYi5`/&YI80Tc8%R2D/\Cs%<:pd@quh_#9K@E0<:nhqu1Gn.JqYZ7nr*:Jg,]:n^83&'Cqi\(`&Sq.hG>o&1V"%2Pq5g/*N)+YEnAn>pD1(<"qj>ht(%a=pX3Z47:<!2I`Sd,Q!U&jo9&1c&o1<N,ln7<tH!$4/%%YY^utO3%F'nilfjr?!BsaEXAb-u\"RHKBg5(YWpt8_J4CR<.E.Nsr5!%\oJNllce^#;O/qY\O'DJn4kM6?NDOuls4i`T(tTV$\+Z`S.o<b-]%e^5n,qb;8+`b[K?IRK4GPX+urL4m7GLRYCfkdh5?"mO/u/=%l?3o]P,af`eh.,D6lK<5cZET$dlm#d[Z(3fMn\<09bZA_7bUYK0qn=k!$/]0;^Z0VfMN:L9nZk8?[Da&E&2%_CV_?;miL1h?aRFY%D_8FWfB;TSJ\*.*)oa9HV\iHC]RhOP7P'9t%(QXi0a+7"B'EDen;Lco__m0cA3t*)Cf5(QBO[oale&l9W[=ZQAMU=7:f3%1H#6$6%ePfD0XQacSSeRS27"p>'=fU;he5TsB18Qrb[9upsak.F/Io-CkHX4G5G7,+81,2p'9NoX]"i+tKAO'l<$PT"^_Y/i.c<1_fW3E31%/kh(%<@^$U8RBpVpamm$C'_g\/H&:HMSaJYY,7Pi:da&Y@[^nqER0ujpr>sJP"G:l%38)P12*#QAF-=>/ZcKCo]t/5'3!0IT^9Q?%3=Ltdbd[l`",<";s81KD\9&:<$3[g4_lu*<(]2XQPuZ0gfCc#+?Fm\p(49HRWf,\tTo`9_'t.-)Fg\V_R)XC42KUtV3Ypg?WifXV%[6+&H]@U&pJ?31V(8c(Hf?!^ZM7P`:f*<"q0ss+llXEM<s3Mk7IqTIJR;o=op'bIu7>/'?9P)#t<2DapkT#gNSWmqF)&(H,YiQSs%O3g,MJV5e17b/Fk$nJ.!lICn"$j0`]QHtr4XIIr]^XFC>ho,K\9u]nO@pc"V"O:gkB*9$pqM#fV\\Y/ID'if;@!J1b>c?7?/]sLW%"\:Sfhe0sdK"\F6\`<'mL/>*3,O/jX%rSqo:96@Lap=8p.3VSYU(.S&In$)a4FoHuB`_]E=V@H>,j?IaYDW+&<0#9-iLSJ6T^\SJ%H[&dCnsJiWV_hR8mL`Zg<Sgue]"E2fM-7sWh'UjObWg9^2l""6A03Kga^sL3dA),VDS6;h4cGRJ,Yr*YltBn`cpgKfMrI=?mPhN#%n>3IiiX'%2O_-L$\L?UIl_+%EBJe0(R26'h1Ku_4CtTeEBOa?6-o7<WH&WJ-lF.bt1,5T%F$=D^cDGa0.Lnu"4U9LuYm-YBO:1BJ%mh_7n:TTXAMX#a]E=pA%X/E92m?%jWJW6Y#-W4'o$_(/b714'HQ%5eQ%]mZfW]V[JKUc2Q&6Z7Y=LmgeJJ!q9_J8Lc[_n]QA"GNY%qS7FG`k(W]apq9q,W="=AJ%&j_f;f['u-[ojigc[e)@g@>3*JVo#AiCapK"`c6Uu07lKQ8?;ps%Q*ofleYJa=Rsnh+qJkJ;jJT<&%\$1`18p7/dj"P<\5WDL]0JEGWN7bGnX3pf$=W$G01GIH:lOqD3:2;qplWDUq<c_.06XNGk`IjU'`qk\&lg(FK`[dno7d,&teTRL"%NQ1gbeYYMGAh6Q[j]HUf``h"U*7_>L(8+Ge><+ejKiMt1pC,e5TS9N;YerCXHk_lnPF=];M\M0TWXG:^`%V_Nr/l[E=@4Qr-(.2d%\?K+($mUdDYRBc3cYO^ajl>72*<,*^E962clK.g+K'&=*ij?T(9n?f_12cK<?Nj+E!0Y62\H*tJ#U4Tq&boJ2!9=sM*#Aeim-)b#%NXcs`A1Y+!^CW*-E3Z@Y-Ju$YE]<HT.gL!AfQ\(Rb!K#C&oTFdPsY5U3t&8D[YU7Mr@]]D%-N/f'o503861lK<45#8FlH4H*^qek%%KSr7=O\W>X)>b`W5*eGn'1s6IhWp!bhJk\1"2/NMnj9E3)4>m[Hl%IP3p#p$d_d))h.ncmjC%3F!#A`$o@obLB@?Kf>>btD+Br+%B?SkiV/4Y%h;_nrp_n5^VaqGIB:IA&msE]"ApW@_mF($=m_?5)s30miI_jSiR]iPDpfg5FqD\G'aSTW!oB!t[FWKVi.))$`L-QEm%LmFT@DWkQL[J**N:;:Y]]k$pIf;60i;-pGS"'?IgaQ)J=/,V'.Mn>%+Pl;mojj(?nQT>0&ki#V==`glTm92\jW^!tJf>[#[neE^1%_dL!%*K/l1(bT19@Q=!IbLa!9%R&51FY&9bW3L^jMr??,/e;+os*j3%OMIkQ9U6P_L+23);Mgi0\j8aH0<dXpN$;ilN+Qo^N-*N>%2i\=<87X/a2N]g3G)n1s62J0"FLK_#U:Rnfr>gWj_a14#eGU==\dWIsC.O9Z1DF,Y2L.$Es2%4Va).=^d`,F`R?PL^4pnW;_Ji/(%\ph1O,7HMaPBnA,GM`Mr4'9)C6.2S]h::H1I1/M8BZ`W=M]F\s"l`2%Q>WRi4U;/jQsf?159BOufQr(l4s9+oZ>A>^e90`Y-cjjT%AG-4qr'?X.6cdP%AGCiE]L$-0DL.$g=3_tqHcY7jZLJHNfLJ?]/'OSbh4<i>X2sdig3\b5M]2$STFj5$S<i__a-#e@Usm(pS;_(S%OmWLYNpY*[4Pd!ppuAYDF_a<5g>GRm@TqY5IB9U1N]')h_!Q2>*^)uXc(FtC*p#<nb<k+)[;\Ujk\s&E.a^bd/"VXRL-@I7pcnf#%iTMB<DZ$cahn&cq:AP<[#=D`8?Fcqh!O'oP*@V:m%O5i?3PUD"psR2I-NrCPcX4BapNM,_e^FJdK+J`/lKl%MTY>)QMh\BJ3#f4%%^H_fRM>nq#X6@;3r$Sb!UDTHL6;Yq;8`\b9r*,.WgH-;Ek*VE",jU@8D2A%pTKgBm]aAF'j3J?e?8_la7e\\hI]fLD8[dMKp'XNa%%gr"[eZ2@S(P8PAE%a?0[G1/j>R4pDat=[onT^&,n9Af8fii!LA$[+e/fWi0EU&lC(sgJU_c&Us2PZ=L08/_PiF>^=f8ZD.:s6-V%hB.PhfembT1Arc99'b"-O1MDL5iKp/(DB!e_0RWtIB#-pLokUKS,FE$+o_["F*[8G2m&%"\YS+$nlN?&_,$.K<PJ;B)<rpgCAAJ[%l7ilcq%=S10bJ0r&fKsh&Sh+S)<rpgCAAhel9EhYrp\5MkmY;coq1$t=58_+<gcD4doX.`G$)o_lX%?5_5iBOjgsZB?!l%<<UdqS%/WYCpX$!pPG?9HQY;oA>YS!CDr%-=S=.pGBn.QJVk"(Z;M_?g0bE\^ghOA."\T/_&&nZu=klTa]j-X=Y[NaZg;IpZ9,,@d9PE@.8%8kbC5O>7IoO<Pi96A@aYL)/,!&#^#fSqT`H#S5!OA66:`Nc3P&6,\iM?7?<H9-N!jb&U9W7JsU:_AP[8["./<"W@FLE`D<)g0n;k%ihH[7+WahRT1+E"a97;%ObcFT`0$u#I'\ENAfZ[Ig_2.+6j>CIb^k?+_@(ru29je[it:`!F\jR3P*Xr(4hG!D#(`1<mX4Q8]C.r/%A/i/5=[k9HN;q[eA`mke]8Q*@cq$C@n(Ge19e+==[aj6#GBTnMkeb0Q):&eLAR.[Xo"#oUqJOJ7)]uER\G)"q>@YoF7[oCjB%]l0%/_@=uK$Gr^b$s9^%uEMum=4gqpV)FC#P#J,A64U`o9<@+@JoMX0mre==,B`EPZYZL,5siBONH[!mr``epH2>DZ+=ohS))"FfN*L`%-"]>MHV^GA%Uubk(rP4YrPQ'M8V\hBUu@dW=jOhT:V%r[4>5]i`1n/U9(g>*C%s0'f(s=`Q.TS\6^]$V@N!cU)"ceFd/3_3@\iT]%Z?^l#45[J@Gg17DQ?qmi=lC%&.b_ebRa^(4ostZjh$;2*'+;:k1p0bmlk=6[Qsch4fV+KL[b9T0XV0\Ef2tO#bLE/$?Z2hCg#B!u%&&2T<($:D.7\fe=9!Io@QV9NkZKN7>[^!*@&Nl%@c$3\.,>g1AhRM4@#?EHd9=!%"4`A!1>/d-A`Db)c&8@c<]LXEq<.GDhO;4!#%Kc4C>`(4koKQtWE"L8%A#!t5`JLAHe:_Ej$Xm?)lPZJ1I$*k5Xi)(M*,,$q<[kf6eS5nJ\Teo,M5\E>on2:kX#"3(G,2qKE>Oh:R%on_8ppk-%\,sFUdoZ;OX"bQ"=:W!"h5Q>*6g7L,jFqPP=J8lSff5Yl&2V34qh(K_32i#R`G$NTVV30Y@4\feW#30^"c':4hfj*9?%n^#Y0JideOj6"d7FIo77il,k0"1S1@08<[L\E0'%1#13m/YD(B0XCbMTcVd=.Dqudh$?CF>=A><b4)tn+'";LHrYo%oH7HIk=Hu2%pF3YfdYA=aK3<hI*,O-,r#HHK[EW#6HN;@>kUkJ(n's=%b9UX/B>Ym2cMqfi45"Va,sXZHgJ>>FhY"!U]QZ9HmepI$IXm1@`SPAJ%pLXue\<\X2\*_rZ%p/eo^\3\VVe+[gg?(6#-DTEg(t3Xl&J'.Ulud54gmV\rF"'%gY\\11[j%J3f<hg8YRK4DdE>7%)3<nN-qdXX%20HUd-4)qO\a!JS-l$sZCNerYDIg$*kH*@KKT$U&9g"&sp-iT9rf;LCD<s;8cLmHgnRoU_]Fk%Lr3+2*IFSO?3kg'5-^+f8PC!#3%\]..BO'$(-iS\Xj8q.4L=uY,[pHabY9dK$gPjtHk.]W,D*f+6q,?QP%1!K0g(;8G>)`;k_fu,l,MHl_3<dUd?"Zr<Y6<;8b`B:#%%)TYJTGtS7mp);"`<^ApDJNQ,pJ_UF-/jffQd6DM+OF-rd*$)T=5;$4FH+pD1S-d+K:3hL%8fMqj`s=79k%:g@IlMni4"3l@DK=sO%;T;LhF8(gXGo'%98!B//Zg:$$O$,>a[#$9AgagBqfZXb8SGk'&0?4>T[nu[%Ydn)?j1U=2f?!Q[Ve8$_,V>=Vjh<*W\b&9ACKRLI%_4rs_':5:I-1u%Kf2=L^jl87l>BZZf[Xjp"`9lmN3B"'IYrj-Q4N.%[gt/)>nMq%AD"#dVGL9h0q?]@<aP=YRA\6ckf-tGug=/#]%a]<]EL`hI'"8GOn"q<P9[UI?=lrf,(12"b#''017)q4;A=GAJ<(gm^N&r,?WKACPm@kJUQg[)epbX+8@/Xcfgb:j?JiDZ-J1Y?]5%n@djpm8.9sjQ6_@+L:f]Bb:<1##Sl6eg\5G3RP`%)SYjNqKM62$IE^$X5[&B*s;!9O%Lfca_?&p]_CCKJ<(<V2\Km9nm%a'!'^9W%H)$*'81;I"TbRG[q8gjT$:%4Tc1>_cm!3lc:T=*6iYY_!NG&^R/bJ"-.e6]3?i/N;nf)-`Cj(=/W4olb(=(n%-2`!nBiBc<nlk4&%X4<]/r+OX,$-W,Cjm1Oerc7bJh>QL7o='3sH1sDsk5"=M/J!7qDt4[NnNb=m[H;P7.j&=57Uq':#Wqm3bpY^.i2<h2+&f5sjOl_R%ld<F?b%Rh:K$WUVJRP=`D5EUj`j29UQL#),@o"fP.FT=\)[k,Sa,EQ]7lKe%06Q<Xa1]dlb*1f#FPtd(^JDa\n5-.RgKD6Tjr);:%]XJclkL<PpoW[uk3UQG?F*=T5n'SYn/p2K-;I5dFJ?E7^g3cjOpQ]iK&*`o(883lpb>m(gDJH+u^>dJjClffQH,Lm$MlpF6i&92R%Bh`6Rl*][G[dJ5MJX67S+ePPpI7,&Yp8NGB`1bN,Te9^7`X%]?^FLDR=F[X&Bj,D9Y_T4:j1_B0&(?SdR6L%G3h<QubI@+`YL;B,%3ciZ/nkf>2[85nn\?>=*^2PcD9SdC/FuKn3ZaG`Yq21TX)m&k%4oZ@3p,V<$dPjJ+d8PC3;X+'[0E)3:.-47e#E,L0eDHno<&*>D%f=Tr?Q#H[uqXa`a_S=mF]77EhDuY7!qglq?s#WArlj\GB)pd^YDT_r^q2\N?ht#[>iHZSI"S5M_I)Ulbdb6Z#]'sVcD"UCubh_`[%J**g2KE(okLHkfk6sALHL!+Lb)V8$"-$mdQ?dl-IWKu@=^UF-Tgcat1Vb#!4X*noqUI*1#Bp321@(2mtBMXI2O&j)7V[=IWiP&C?%gJPd7l;SjWhMn^EV*:_>"M:3Sd#>0-2dj*n&#`-HoMFuBCJ5V>U<QC*17Bia`cUeDON]W7m:BJQg?"0)EDs?5mHS0)DGsJ,G4dOG%\#)mE?FHnM@n;0h>IPUhXWklWrb>\Z>q<7mqf0l'X__?G7PWMZP'oJ4_d([5p2t3\oZktWG$GG[m<W#Yh-Qt$pZ%_.p9It0)9#iZ%96TuE%!0["[]=1R5YHR8?@_ijA%h$9<b?LKj-o:;ftOVJ@]h.+qg(/T\YbYZlh3'7ZAtFIP%iS[CTcBX9<.DM2-91G[B6GrQn%B1%D6*@/:DNb1D6))cF0,QqIPV_@]b97hGcA6:'obfg"JOp6=0ePtaVCPP`Qa[LBPL,QS/[VUf06n!7pD[th\^'tL1jk`lh7Vi?0h#c%\!QLI>0#g;]klT/$t.Pc(2;%laD=Ys,;U1M>*l4kQ0mo2R@ibJftOU@^f4<lXQI7+L=t_G)Q)0]G-9RiYcDP\51f0%[]=2=R-XIn%mb=#]9sZn5[b\_W$DU&]aKUdo]H5a2f?3f0D%q%s/)/[`;9X0bm&F@Urh`gIZC:ZQ(&,'a0@C(uaK4.sYc2@Zl`R7I@B/%:\uTR5%R&]kBmTYr"b`1mI[GpN.lSgMuAUEqGfB$>kDrTB6q7at2TAI9[O-`*0oEpBAg7NTZBa'O?e6^8l]-Q/_?c&O5D8!2YBhip9I'Xsf%qma<[>eI]Gj4A3uE:3%HF!hB^mkRmDA6n\,p3^f%e"4._g3^^*adWX653:>(.YV6$bI/$JR.>K%HqM7J8l+7G$AE0V?#l^>4RT,5%keS,36*<W9]SgL]VgK</GT.P.oZD$;#_.S+-_On?[lqUdS=_=Z3*b*XM$?aO\i=:NO/Jl,;&@e<[P7,r6_7qip9A0ABG2s0gR[II%K5.Nt'n?EB<mK5m/^b7gL\4qE->#5P:J2tQT+JiW`t`?L"F'mQjCV\5T(qfQ`OF7(!Ws1fas9<fOTMU,lpij`U7V2/HUaRE!!4oX%NLg`;S^n'c=HbS-S;qugNeB"sch=^[knk.7l9hA!4GK70<tJD\)Ouhn4S:O'i2&0L:hUW[lNNH/H-U*t"@DZT@i-jEE!.L3#kfI%%VXcQ(iqpmIfLGm(EG#_"bSr3*1J^=IXhnb1huV7<FZ(`K:Cq;U1BFhAm8ZKM+ZARHE>bFkK_7eL>2@='9I1O!,iOq*8nIXO^l@jS%armj*bLi-8]c<D=))Ur.WuHS5$sRtQ[DNs6mqSus17FI,1=)H<D(<pi18Spl8o$1Ud4=bDR;,SDh!]Nh@U8+WM''lWo=Dm0R+&"!%\A2sY+S0Pc#?]S6:WfhA`D)_=WjNk?`tg:CYJg/s`9/#W%SYrbQh1!bTM3s!jgj]hV4kbpk-fZdZ-6KtR.W;_UGL-+>@h3DJSD*6%TJ14e!^sT-LBPBZ3`',::'%'/\I-.RmFa8Q!:@en$tR"8%]CVb6+r;jL7DXola1;N(%Se2T$[6OGs)Mo(@20b`u-jNYe-dTAo%KE%kcS;5N=Ql!G"+bf;4)p!#<hge7[lGj:'V3G3#,+=3D>@E0(S>fG2XWD1)cl+n%5;OO_;I*9Eo+EVgZSd-Y`!/$FUoS5i.8XT#*Fl%a814>'?hc)HsaK4?)lZPXdpidV5mZkK#<dlg3&e,Yf-bIoFn152AJo4dhucHQ7sV%e#C:43]^$Z(2IFbUsuqU%)fAKM_SGL$7-@Z%WX5"*>URp<3[LQ#kq[0r)7<CGDI&Hf.jCBF7"Rm)k$F%=WWh]e>IJ8h$D9OnH7M&8Gq[eKeehsArC$[;/5jN]X"70$c:@9V8XYGE%\CiPk]TR+g">8,>='JL9fPjQ1^RK9V-EYn9*qXo>(MQ;>$_0+X"Dk_?BersWaVq]R><j<-%Bc2R&mR9_'p,i%$e&'J+DO6("AQ0Z%2BX=Td6MN"ftH9PU[g7fe4+-0G*F,6ZrDuFhT.iu12shZ.8>8_d`MpAH/`+/imp[(Qs@GcL/l;3EG)S^$+Baf;mqNcGN]>5G=F@;%6=dO#%d'iM@a5$0<.<;9@W?'_-Y6;7!eZ>f_IH<(OJtAE3Fhc7%=(GmnQJ2e<YO3Og320fi5W,[TaG"WS%$7o^EM@MSS7&%8N,>6%MUulChF]?h>%#HV;8h:P7,h7eE7\c1R=,^_G2.Nq\(H,/\)m@`g<B%:Mb\-UG]XRBAgUg:D\?2sr&;#B1#U2V;me2i9snTa>*roD%I--m^Pr%1=4R.kdPRZ9dJ-92=Q$_Ah99-KLhp="3C=j1l]+So][*Wqh"lmEQ5UBma6eQtj$$'^MA\U0UCA:!=RonscD3[*2pf&id%Z^9!&]_q<fakc(Sldp?q>4r-$m=9F`889DA[tTp1?YH[.<`n[lCO&kPYRtqfbH2F60$0-;)e.jGa@1,/ZNhi30_b$]oAFsZhEP[G%gteBF;T4A1RV.\r3k8a83be8FFQa<\Kcm-9nJd28Q/S6$h[gsj\OIO!DN!]4&8BaE-P-$;)D1KJ85pkKXfR5P]+CnP36;s\V(;8m%8N)TaBpX?*Xc,&&/EMo-gC_[trS5b%Ws#3o5_:SZ0[^;c9,i9g:up(J(h.!P*=W3"lN8D8q?.IdUL?XEM\BF$jrABq]PDTsT5^ro%)R*.(X`7o.(\aF(i:&d`WO/(-B!='dK!URh7@9L[/Rl8[X=8"eQo!f6[sI9M'fBAN>,[^j"`pLHr'`3[r'iRc&.QbP5bnugB8KjU%-&tft\q'\Cf)W+.kW#52?O3q#98Fj=T\/7;Pp8&);_RB!jiGS[_J#'/E3f5>:HdYZC8U+6>u*c=YJ`f%jte.r\rV]@M'!%"=0../%_?0<8N/k%P,0\CM"G!"p#XK;+a%t&[.bd6]bfoHTRX70Vkn0@n=$l"q0R10`]KT)WNE2TEk0t-<$+uqY#kU\oa.X%7%(M!(\bj0G%!Ge2-G86JTha<"s)&?LZi!PUTL+Dg8KRW+:]G%#A+qVu9Uj%e*?WKXX=99F"?-_X`n]!+=Gdd)QTL3q)O/+&Wk@$W)$S0Oc2iE$T%]I]@kNM*-[JFJ0=C7sB4Mb]JgGUq4rc\iIhB8!<n%hdk4NV44-j[P`__t[&uh!8?1#UMC9UU>"k:K2^3i0`FG5khD/CM4YD=sJG'%OZ.(_!A*6^>%.JT"j>$34+COIb6(*7ieB/=E/8D;K;f[>TKArj1,K19:VN^?MrOg`F&2Z6'[1i/I2B-`JV"^V6.Q/:"*f&*jY85/%7r(u[:FtG$(h@K^bWFO_IMM?^f*C<>M=u7&ebY#<'@5XDJ/WR`&\$_-C1h(dd\EbG2F=AMG9GIE.o+;RXfb9cXOIB@p#m19$W(%2%5gI%EmoQ?aY#&OgTLJ"pH#@,kCb2A'bGp*#KIW#YJlTq@,Zk0,CVm"8)E/1/&QFE6'RbpTBEA@9BoRsj_-Y!?j8jnl%.PUb.PgSa%5c?-8%';*0H7<68p]2L!T4!og[L3-fR8l-R6RQGiWorXWWm@]bC"ckfUi'5%9S1_[pGugi$jnO'JUcYLdUY2gIY"\!Z/uqG&XrFA%:IdJg'bN*o8fu@d&jWch"qSKWK^uiCQY=usi%lj$Pm?CN>pf[#'Es2",NBG._6Lp`nQDMWk1AoQ#]VO)UU')#'et!MgAi5#jt!k]%orO?.#V2Uk#(Y4EpJIAdR3?C^$#"V/3gcXAM9X7*ooV3He,e%@=>TL5M-5oTGIh9-@IY*\SkreWEQj'9qJ:_5*is."bm]D:Q0t!h%Z1Q<L#M(^IhLZ?hOIp6=YD=KUHiuJr49DOK$sH$>)75cS:P@BNLI8S2)!j*_#1NuIodUn%b?5gKU#6?p^qGeGBt$OXoH)m,*[9SI%(O7-!`iU`K-Ks!2:fk`he5=Eph4pt<KS6tuflFgdk`CTHWJluHhB2mN'_lOhSX^HQDpV=2&:nN1J^]Vj2&#b>,WjQbq;b&%D.9Ar%-Im/H_B2HH<`/G_#S.O4McYe.KWtTA#*21._H.k4&BnUK]hP<N!Q+XE>#8Bge3T`HWuI477^!H!A//H"9dNY>*=.F#3`6'-U4D#D%[t.[iNC@Cn4<k;`KZQL[!aAeSNh/M)mTY<d_S]BZK!/%[,1.=(nXp;0MSbU4._(4DfF7\.\#bHf'0%MP#\;mbWJqO!XsYd/H82Yq%pWCMF1Y;kjM0::`p1a$r6PD_EM3&.M2IrYaR#fDR/$9O+gU^k1Pee[mb);NE/_iiMUF2=rP%^(HV!SZ@;\OAV!.GAo?nVar@/2Ys%BrrTO';WDf<?'gc:J<W=nS(7MNWr8!-t@FP]#rM567HSi,:[#Q8->LT,?>"</TKB_`89O:_n=#@K@cFd,EA<\C=Gg)Z5o>,9eZh"%r6o7gl=';.e=A9m@jPX'7YI).'!AS&VHtqcm3'2EAA#.o2cf)r/(0n`N_gh>IV$p<&O$A'1#hq8]s,.'B#000AA;].9jar7mY\eu%oU%I%8D$YD7@9%-9lK)-]=IG394lFH&f-Eb6=MA:._Ouj'N^bPZlRB#G<Do_pYg"NLC?DpfU4]2e/*N47O3Eug3@6Am.`&.)_p3b%$fB'9,.0H(K5lj%TnS0Z"&,9K>68O#@=ni':a?,1YoOst5r_G9*b!I@$hi.a=E]=]!(%<_BqVpJG?oKD?ihNsa'+F]BCUt(j8e$d%-k[GJ&/GZ])ZU_``baW96o`7^5aXu.3**"J('I`oM\@9?8nEQa$[-S+.1TZ2Z*N$'@N6rjd?\kh3KEB8W1Vb35etU"\o80_PQOf0%82d`376+aQf3$%%;(dHIG&282;3!o#q%A)dMfJg(,Vh!1E_/\\LqjS`!)oF;Y:RgB/7W,k",h1&h4BD^7$N>$&K"Wh1)Atb8$$+b%Cr-iJqc3n1`dnH%;<Y;=MfOJb@P)D!"t]nN_0-(>J1-1"JEV)<R;[WpQXud7T?6\n!=(rSURnA`q$o<Q?nYFHP@lHKF4BDfBrkHJ%BoQH:4]bHi8Ih+6qBU4aRV9]t7DpM!He;IEfr65AAPb*L<]5PF"<hbYB3C>6>D"^1<.gTHl<0!rH!-42ojW3oM'0i3<VeL&aC.(b%[p!@Z8X,RTftq?0I$H:T_!r!TUFjf4*44/qkUhZ3a7m_=&=Que/u!X3cS/6D\>,Ue)=]tP"31t9]nYW.R-kfm<Y=Dcj(8AU7?GF]%?Ip94,D]fUX`3u4D+n2GX6m1>,g@V?eYm4Ce7d%80K49LZ.!feM:X\3:'@F<FMqT>W)'(Z=>:**d$h8<M.1^C8\cc/>tQZ`7A/R4%gG=ZG,?"[]A&'pZ5Sq5Z^q:0HVGT>LL2LL:&>gG#QAg)b=llt`OsINi.^VhiDLEC]TP(_BCl>i*fJ#mSY]6mc#Y!.CLYeK@APC;r%&Euh;h#qoa<e%G,9u=pRJj`RQ2*G>9`d<NI"f?@F,rF:jAZFH<,^FoO6eb%$=D'mK+_]&NmQk<u@]E8Y4R\=8h[go>:d`rFTN#;l%)1/`bke@E1V>;Hc6`&o_D:+f',mFO)$O\kmidP"JA*SSORAVEojoJ'N1D5HF(o/R[_3uXN4Q?Sp#<H=-Oc@ku2lOWH#]Q)<6'*rt%m&ZQlU*AYd_[.gB!C/AWes4V#KuV>G!db.e$qCUhIo`l^FjNs8C\<fY(_9IJ"pY,66lb>dSOabN3=2-UU<3.9\[]`Tcu$Qtj'ifF%$Zrp5cBlV8W/"g`Fhfe!m"A%A$Yh+;"g*<(!#"q'kSZ<FpXun.7`.t$UCs)>/Abj^<ESYIRQsJOA`^]W6--otF#KE*VNM>sVIt\\%:t<UE=/H8dPTb170c87cWY6U`_paNE$]I6]QppG&^VF6OlPn;jJWq?oIl9i10@F9U=(RdnUgjWL(V3/XXtI)"AsnZ?:$e`9R1B40%!=Xn/FI=:/DIg<eQ6?&Wdh.W#=Z;a$.k[EI3i\C2<D]Zt3+31gX=F90jTJ;\/'ro=B6#"$>><$uQKq-W[U>EeW"',BY01t;KHF)4%%%/pa)lX<)BPL5>K.gc\^.WSp6%]_,;I'<uf6iqM8eG'\8TjNI1j,KHqPY&r-=aRrAu8hE=GPMT;Jj@`U("enFTjhGeTJ,,;b3Ro%&aQBs<:@G(LH4Wd*PE`+2/IrW_Yt^m96CELS`77\#:I]f*Aa[t@,HalV7M8#'[Cp%%MiUE&[PH'RrJ?ReR]l=*4o0_0JlFFYk>F9%9r\<JiTO""i,DJFC*V7@pa0/r'C#k]A"oQ_<0r1&Cs#_W6Q#khKt7[=]V']hl7rKR5D3\;(c51WOQnTS]FqhU#OdL]Y7[`DY$sM"%Q0P;N@LM1/_F"lj)lX>0`\`?0:tq.<([=7<df<)XlLHFb=.'Q4+%TgL1*'O,@2A)]]INC\OU`&5L7f_2>SaV;V^Bj.251.ZW(<8+%Q'8i7iuu<9T5#MIp8@Ygrqu?-?S240U6sm7#dZm2%.Smm%G`UJ(hMacB:29Q2W*0#2To.Ac&8H^3#1fJ`FR-2=$'@4km=tjTn\1c%3Cces*RipErW$:$BkGt8g*0oPUd)5Qp]_1WX'`_4V0<akXC/16Zi7O2X]WDE$-^Jh_0>M&JC;]#XC/2!KP>1Rml$_R]/H`uXou*r%C@L&VRrpYt/!qh!C>'0M$EVYXT_I+O``9`5^An#L5?U'tpWkMmEi1j?mT7SXGG+uNs3(!)ipI;+?8bW*)^ZFHT+kafT>H6i.H/O!%:RLblmcsuL[E*c`n)%"J<p@D<('H<fKk(p]]R[FJ@3E.b66rOd8-@&C`4r7nEdCSkc6)]FK#coc3Tt7p&Z;Y_I5JG@pIa7Z_W&ca%J\@?5n7=C@CXDM$];bOan%s=[5$`>-1ODXu)p]0^63n9R"t>*D-<1=#-#D;0]e%<mbNAKK+N.dF'Ae`>,ccbWjq'7)i+JqL8eVTd%DRup[fV]*P%m"!tHB>U(@@1XlfM5N$c%"s[Y,MrA&pj_;J.$FmU!Jh,*ADdF0q7&'#"OE-fiu"Z:^(EKMm98XSPFG^-#-Es7!'?N%X(DigaAS94+?H7_Wn>cs=`@BlH0GlX<:-M>MSW57MLuP7as:r)RS9'7AhdT<`_-hu6#=sLbEaOD/_,!V/S[c)J_,Il/;78/-DC+l%;)cbe<]F!*VfTJi@Wg(O/AnV$>Sk\>>"lT9QU-9Zi+X+H4?:Vt$\Be$KOj"uE:^m"8?@IJKP.bsiI5rGbC;&cD2;24KZ+p>1#`n'%CeYkF"/9ZIlDJK`;T7@Do6[('if$q755Fp<@]=:\2O=45(La:]^G_DSp?Q1ec0TX*V6cd]T7&suPtGKlRTmBeq-O6eIJ^ElhRC\C%0(&)qIWbD^J"scG^(Wl<U$eO@o[aQ&rsXKdAWnOM%oD4E.=&?RJbc`"6Y>k##sT_8s#8$^Jt.Lb%;gcWmma0:j;gMkTA'^VMu]NQ%L2KtVWeuQAFB;qP:]q<R%i)t(6R_VS"lds8P2[0VAP`s&e/2[]BZR7+X]A]Vf4AWE).eBH/kL70Vt!$G.L2%G<EosHlQGX2F,,jf%/o;[gj,ZOCY]*L6%WSa,X.hq:kW..l=D#EqD?=7:cnFtR?m1@n!%\":1<n'HqjpV0Aq.L`5_*Jaq>t?n`j48mFY7/Z@G5g_LQT5O%gSiI`794XR"p/e.(:+O?[#9%WdK"VLhL$2[2^Tr0'90@-[I"nbY&GkP?GL4t3&f5U[1Rr;pPOi23P]d"C%"e88C_LfCC1".k0),0%Z/9jsU+Akt$RZ0gG:=%o.EI9iE=/[=Xl/"HPr!'UOl<a6k6llX'=`TaO6*.J?@nHW=3BkB:H46<m5'\.DO0'GKi/,/L&0m&FmM*_%SWYlDMjZ77;)nuRLXfD@Y8+e)!iB@AC(Vr7Grc+&Prl3:"&hOc8W,lbSgcR0Q00PrVBHd;-Rp,O9J_&p]V+?j5OP#I-=A=/M.Rk;%P20*nBt[ma0=\lWUl'P\=:!jd2B[IqNb6U6Q\t"XA9EKdI4LUMQPc#Kr(<?JWA"YAp0u\ihea;8X`3rNqf49QB>OI!rg`:@mo8%T%E4V\!4,Tq"NWuE/>`J[#o'\Uc5u8!:#/]nI8oQi]<%QdNNJp,*RC2GjTt'^JZV_'pjP'%1N@(o=D*+DE2D$qd[&][M.W/H2Kl[Jg%l.">4kVT<?)6g)k16JgDGl*q87u1K>=Y5pK^A?3POSsA]KuC^POp(1+.'@"hgU(/6'!phR(#%HI(2R26gXtXh8)^<M]m/s^Dfm,Q%eK!f6+D/Hl;6Ub(fo7$t([+gLKg$;#<2dC8016H1XCL!!ZZF$]<Q+@Ao3p)M.t"$-R+8p?\p-YQBUDuZ'TO5.`M9o;eTkD$F't16%T*R`T`'AA$S;s<N!Y/\JO>^?[>h-0+=;gE^F@J.!4uLJ*_`Rs/^7k&,N^dFmjS+:$WA_.U/=g%g5.\W.W\=kG+p]P+hl%*^:ECSE%p3Zrlk5H`>M\5?Rg^&MrS?:Cdr0WhCQ.kF=TI*H/ff7WY1;f[u$NlZ)T+JZ4F^LG&h>Um:(.YWEC`A)=2<VSg#II;G:hPc)>mGSC%Y\S@qDL+!o7qY>ee#9E]5_0-ND3pK<@i<u'[mY9:<%Nt9Te%jNlPfMOYbsl80N0\GC1=a.[L+st<pmCZcpF3@2W\iBJdGnhDJjS2%DL+!oVr!G7Vf?"e_3c59@U_I<?:2^JL/u`%/=]TRC0Xh[<S/!$GUqO?RYp(/+7e6b<J7f7)X]LHYegl0/aVdaEL#1b3XRf/kf%U]%H`QbJY3*MH#O2JY=&[Fu,K83D1_i5`NE1.-EH,l=?\n'07OCSZquED4fX)!8Qd?,J#?E5^'QL\>f$3]?gUGlE[lkSI;f@#`o=1sc%^a>tIaG-WXGeVklPZEDNBB9XZ_O"F``)j!7%f<:VL,9)<m0Z@;BbJ5q;I_/u8m%k,r[N_T^H`$1R/0D5^I_7\'\5/*]3);&6D(RW%C.0<lBn5%0UPp<2;.CA$8I:JI;+]Q5!mJoj<p0UGki-LdLIA!@dk8QEVkbST'LSCE,Jrd.,+'FN"<'(C6)Es-WbY`fK+BJ3KWg;q%;Hf6pm+2-KnH.R)@=IQ2O?j5i4t?,_"uu.*C+,!7&/@6X[*`XK7CHYK_oumhTp*@#MKtWu25Ek>2^^,:B^8nt,0n+uTl:a'=BNc+%RAiOZ=Dl]?"uT4smOJMC%V@]q0bA"fj)#MAE1oH*&ZSu.Q#BM:][lHGDa^b6C'0TG_5j.E3<[oJ`MFHMQNM$pi,&fGq"Mo6a#-mH%mNOe6G[t[i?koke![j1kU=6]ND+@?Q`p+;!kd"b&m7k5BX]Y?rj\Xln#XM6U(0f?M&8,]+D6@#A74f'SKlr$G3SYCAYV)l2DUo/S%;Q[L[D-b0.$jK!<KVad?*NpK^d8]T\kVjja*.Ab?DrWet*E@,PIks?nQ^sAl'CY(+Y)r)1aXnfmWL)9)5['8K!`cE^e?7k_==Fu;%kS$^^jc\_WqCrrJ;VaD:N#;UlN.;WlXoe,AbXLj[kW?s5,+cWJ%Er2^9N.RM(5d"ui//7qfsD$RcE#3*'$k4I?D1o+"2o9H5%G0/%.9'%R+dArF7bIH'$F0C9.se<8i(bEie()uEL"lY^Iuu<)`%sq&:lR/VW`/:3,Bi5/!O*7+k':>i0VtMA#pRT7Ympat0WWZ*@K'0)%_P+e'Bf78G:eN]WL`$=-g=;1`plW_2]P'O3Ja[\k9NOa1KX</qNp>g*SPkudMASfb4LVhj0a(U\"u=`]41K:2N!dlE7B!5speDXW%g4cOjR_g[h=i`/Q9+"1G[hn+sOq!]b7`=[\"X$40XQ!a3L$W+k6f87_R1C_k:-(/\;6nf^C`H:+,W%/HTe.1<(Q28N;n'iM4>Q,2%<[HNmS.qq6;QWkKKfjI:2`-VPapQ3gOEiXX/?XHZRH6\9;;c'mMC=.EY/m/a`p.m+..S7'^oM--&>CeG8"`OgX'U_hJi@mcY0'LS%2JC#<n6c<s=c0m+m[p@'f;cMq);1lVd3i13<PJV',RC/5PYp<Qi&$9"#p17>g.C0:CTUWB<"7-0qa>A`3W_dEE.JE3XUe*>1MahG%d_a=gN"%^,TDLNTHGmH/N\AlWEk\J7hOnPJ\kS8KZVY8b/C6G9+pVZ*etIE;<V#ICJUX?E%tK\$]p@-Vq_%nJ36>0K%Hbf>h?qRe%3t-uuX'h'9n)6uQ(((7]/iNAG&f/W1@5U\J5B*2Gg+LSEMEJbU$3?_VRk1u5_FLtj(8#kG!M]qFJ*?8\=*85Om6&7.V5jKQ3LsJ8%3L0A5.D^8V.EC1UgI[cgNi^,,SE>F's+2XQYk;3t`CrMs`V57R=D>hnJQYko34e$egg$E7^K"88"&k"J#/D8o_$H7]$tQ$0NMT'D%_HucU_OtuYI8Z,U/IY41"&-,79h==ToYEUfA>u"/nNeXJdqD^7%lIA.asY($,qM[<-r+KLqMm%rC;Sn>]kXV7BPDj/(7^&^S"Qcq%0>]4UEgZ))Ar-g-(;]\r):`?>!Ke*qk7]5O4GqVIpSM6U9FW,L"KY$,=\9+=<F[s+]5PWlFq-KTPm/FD+EU7^0>%<%)bYs6EC.7!%!MSAOCNB<[+S3:6W^7<4#=0*HX*tmrHS$S2<T2/hrsu]Gfq`F;o\s5p>=m@pLeD4S'eC`*l=Ssa&V:0Uk6,(aXtYXt!mr;AB9\0*%-3m5d5bb7cOV=GATOV'ATK&oJ-]Ymbkt9/hcgKVJi7U\+<fW_]7AH+WHK]KFa-^h5i=H)l$!FT6f[s/M#%h)J&Al;!;9HjU$<IZB%3"V9clI6Ij=DA'KP5pHN/SHm9a6Php?NAe[EhBVhMUImY<4U-PTMF_h>ZAJiOeks_"kRiBU+Hn-3`][L_#(X?]L)8IVC'25RAF7;%<(.9q;3^%O9EacR?kWI"`S6DS"!@5X<%[nJBV:`f%a8al2o$EB,,-\DHN@$Og8QiJL^7p_eNJ6-gChJ?nsrC"b&gY),&4P8h>KVI%^GE9*c9[?@]B>T&K221Q.i.3L6<o($j:lK(\#XO&Z70$^jE=B[(r)Qi_]]Gj9"W)hJo$?Q!_<!p=q?j=KL>^lI$\XpB2.ZW;cahF%]$[lhWT!c+fMJpA/#g!eJX<\5e)4AZhE/Mm.LKbfMD4;194:g('F258VCPeL\Emp;H]a/H&7746J=/+Vc(^`eUt%KE#:?YW1FCM.%&J-,#RWXQ8I:8%k&4Di(]HT3CQfnndJU)&_Ti.Jt8_jdU_YX)ATiMu:>u!;2_VG*h0H\RuGqpI)T[kMNBm?J)[/k&TFU;P+-YO0=%NQ8fkGQE1,ru:u<gi$G]]GnceAs@NfEV,IlbuMm:rC6^%@E!!@65(Z2b?PfB$-97e8/tqaZIUpIDC_385W;^U:YC4@WbBJ(Y\D\r%LXhBXA$3G43FHUp]"dAgioEDaqH?bZ.ip[/]R`5OV4qE9kgto:`JQfFR2CQ(Pp2>o[mh)6:!GG[XiT:+RX?VTSflp_(GuZfa.h7K%G!4A!!*?*?1J.;'2_(UbeL;W';Ue:aI*?:9`XtLKcVu82Ota9)W@@SA0s8=H7@33&A_)b^*54DRJsS3J8;/?U"$S8)@Ehj@7uZZ;%$2]bPPi3/$6jJ@]k-hLeA`c)4e$^;CUgRat)Ul:`V08L#O0\R`a#2KIhVhG3#1,VZU,,/T^scX,1VJ$FD0mMU*/8:bACQonDJ<03%"3IE"q-[H4<QH&VnTl#VkA(=[.a7ej&n]@=gRoI7VBBFiQPYPK9VmZ)e:c'7PT[,?/E+d:Y,j1aq)4^SD\Nr5#DIo:^YX?kO<h0I%%r=pOKe7fa)RO/"ofI^I!+lpScWQ,/R3:9k2Vn&lX<1S3j$YYV>Nb4*E"';]D-^@@3h-K`K&d3qOY[$ic8d6I:i!)^n+q0:51Bst%PL0UkG^+;1TIK%D3so7JW;a^D7=YH-3=^SA"(I(7;hO],FZ,cN8l.2kf7b0*Zf3+$YQfm-!')Gtd'_I*qI!LsVucIh1b1V=Zps.,%SU)6$#`n+odG7fs7RG7<qTe=bf1_,Sk-eZ`6*U(9?;L1TNFK-3pkec:W"B6UYsNX@l+0F:LN]#G26,N]qfUhlVM-XF\&:S&\?KHg%iU,g>(i;mW<eKIRg\1]fJ=q%K\q6htR)c_"3UER.'dq%6;h08`J`S--OKPHjLq]l;Dlt1-2)T=5Cl7&OTtq%3+=MsG)&+Aed_'ip%YKXKpWd1R0nKrnM@@OE,r@EMW;qmT)8E2+1+*N'tpiHSoF].:")PbP/$kEEUol+8Bc.RWB-@*@KA&m;c]Z/U<:n#JY)?mCF&;?e*%cr<QE:;LHfJe??UFG8OD:LpNM^4)fd6+AD2W%K(]+?56q5%/u&U3@G[S?>&S>Z1,m9A+ohQ?Cb,\m8#]Z^.]#o0o'u+#!(GLTe$\%D=eKe<FeaBN\p9nceWBX]]6Z_'Qa.+[j*8<R_#D\-lA&/Y[b']#(3[cUq`:F%_jE(Xo%-/Dqi/K4u$ZObkGM;YG9Yk5-F$=6DVs#%2lRFBdhN8YZf[?m33&.sMKHc0H_adqVP!Un.XgIcmO+a^9qk0s`.8`dVVr?D/GPnR;.N[>HCDJQ7EI#)ee,;tZbYpM*K`$l)4-.$%<<:^SW^S(a-gj5ge?=`,7@d7*Ru0&jM/A\W=Q.Oho2LNNXZlFjnD$jFlh2RU]0m.3X!Fg\3V+mF$No,$b8>"fn)0F74C9-Wh+5kl%po#F6[Ag%,-@?VKA$I?2Y3I;.N1b"S-6`@NT%n4E_I?*>k!rV+U]"_PTW<@T2?dY,l71rN\RY$+,lNqp?EK\(91G3Z!N(kk!/+`g%.DT20ZQ,s-e&T(I^%=B/M%9TN[J[e^%biR[m;h>*D3r<+m?_VkC\_]FDnZWKI/C<o+sDEG;FGOREqJ5B]oS;h.>b'!Mk=jEOc<*G%pY7Ur5k/O+E'@`s/A\j7/6.ZlOHYkgi!3[bEj.B$m\+TQJXG*2r"g*jbU_/#aleX!S,H6m02L4hYSJjmRd'@[,/mF=@(SV.-.>A5%0K"V6PcGT19%h3,R);Q.e-BQ3RUb/.9:)])'q%Fg(HocngRWhrIe4/0C@Gca'Wf/4,J+0NQ@@1tYCk0Fh:k[^]^!GI?\[-NA#tR1%dI@0;^'I;)WIYS;R^HG0fFK2Y]Y7e9rh/"DV[rLq<@2Lo*@c?=ORi*SdK_-:F63R@>UhkbLkl#'%)%C9ZE7FR8g+/$q.\'g=D;`+%(A6$ec`9HBmAe\@Gmn0FC"7CMM6)%Gem;TO]3R%Jo?9N<OEMeJBO-E7U(i>"cJ-PuVou!i3-1inOQ7rN<\:Qgb&+$V#!X[Je*CEa%8iG]f[;`dA.:<@LhS=7oWHD/,>]:l?!sJtQgaj>@6Z:,8S#IP(j^gom%kF#g)'"^ahq'>`Wtl0D,$"#gC?_37],5AcbHAS?f/r$1%j'*iK1sS_A?8pp_&t6r5^;K[sT_VWR7(Pm)H7Z"$Mchr?c+2^mTj-`l&`#e9UTOD3?Bja1Es'k*?#Hgo)dQBHlELd'>-s:ff.@2[%"Gt>t:Y;F-&K*-NfGB8FOug'##[Lp@Ms*$gVc_%"(6i+IC\Q%tTO7&&g3gqb3uIeie2;_1FUaKr:3-m^VZiF.\a\9W(nrEJT5>Nl%TQi:J`<(Zqp5n2<?P*dUPQN_+c9fknO(>%BlV:8mHa%Gqeo/`hWl^S`*'*ZsM8PH='FX/6mmQd52QnbbDDh`F'oaBr>IFM[^4I,\%#2i@fXr:^]@5sCd-HmWG!DI*<Zj)]g,+<0>\lMg.(6//BX$m9r.2?8niA`393X>l5H"^D5CeW*NZ9,H!HkP[Y3cs(r=caHc77TJ8%1WQB@'c&6$h5C@oM";:0:Dd2("0P-J3FjWL8m44F:`S_([-6FJic="bK>^oio2'@=:=%LDm**"51T3qW3$"ffb1_g\_;]mZmoZ6T%`ddR\W8];Fl>aWkPnSFeI@C:>Q9;+_,<:H%c&QcW$suPY[AHg,B_F=T=lt$<$.N*T,2]Bc$IJ!L<H?*)*.)@`R!CF<`r+rd(?d#V%r(V\W$h[6P^U['VN(#dn"j+T#4N/B$;EL+IX/eh#Qtn]%7%'TXAiS)bAqhdX01nM?AWS7ga9uR%l://:e?FaI-g[pkO8"cui+[(k%3t:$U6teE7iMn,@QCH^=riIcQ5:,Lf(Z`lUc3tSLg`H_E#[V+'nNDn6>^J:ZV"*)(2QIhqEDk@lNI-%<=;^0?:(bX>lF+)UX\_kq%l?]\hi:`e`"?JOoBnWtY'eijSKG<^bi%,7'Z_SN/Qg%$WJNUn6Z*T2[?SC.-b<lYb',5<n5hNF,U,aS;9B-#=Qu&p7m'/%QMK7Tn%)cpt!lTlpUI3&F#m`1g;J/sDYR,*g'!"(ZbQ;:dZ-94S=iENc6^r\(+`JARUBVD)0:*:]t&o8jDlAij_&D`6lXr@#N#%BB%Eoa5'%^'&?Y9kDZ'U_D!8eUeOA99NG%PV?P5]t'!qYj,CK9,Mb.?anrJKtG&3Ss(hsL6g293Q2BA.8(6%F,&@*c6m%Z8eUS@G^c+e*o(=i%RW_fT+UpCg_5rq*nHjQ2ph$,rm)j(BbLgr54:frraNdprOiM7mc?71A$t7+=&pUPZ(sJjjaXh''.O#QR.bhoi(Wa<eqLQ5dQ3^f$%eY/Y;GsiKjP">sp8]?)0e3+!FB^1TCNh'^2EX!K<hnTd*NJte.'o36PAZGb)phmh:B'4%B"C+A+.-%X8Uejo9%^JnmBNi#fdYlS0%q9JPf)A4V6];&k@%9hEHpmhkg>0m[*7=KE,CsQdPrX5eDkCIK?Ji9nEO5oLnNDq1:a?&8<+b26.'oXF1)MH82WHi%[S?b5hh1Ogs%nJ4(FOL3[dQL5<:`j-K'fKnkd_Hd8``Mkd=U6St?oW)E]:oatc??:\[5Q&^8^ss&ln_"u##APe%>dpc^p!9DMWMaXUK9]/o^0+:>%&+u-kGo>6sGALS4C`X"S:['TG,bNg#b^Ztg,NL!>W!ZT*QoE6=&jlLLs15;;)&+_Zbp<MO'Q95+3"o8+N)!j&)cm=7bsP]1`i?R7%E(GSl1:'J/H[B2qGgY1H>DTTnU7n6VH(k+n;[!Oed.fOB*/u1KHfC@WM)m4Il-(q8<jtcp7Qi!#";4KAWd1-)!B6`+.:QVHIT>-\%5snnKYc^ZpIJJOZVojbmKUk"(M-.NacY/np_;cY6ML_kLpL\\i/oJtg"#G=?2/]SO/^!Yj'#$]ck1m,":4+JOC;/qI8]$BCT^a2.%k5c(W-82d]BW'23BR;'TL]eS@Bs1Sm;moF6:-Kg4#!8\o?+:,]3f$j37I_]4P0[+<U&cF=^D=V:=+GN\UJM7hmP]P/VX>5U!LB"I%c!o(PGf,jpr]O&qB'HXJN9cUpdU1_sQ9@rf)=_-(s2EaQH;F[n/d`Pl6rb*#<H<=aTt;&[N9J<L+\d)8cOc$\''ifq"<EmgG4/hU%7R5@#[Md&X-NWK">>Q)EA)<aLe*TRBHF*$*Y%X+/`KHVWDK]Ah:1Z,LYS8uA@):JC#]ijR\!N5sm!;NT*lG#^]XcN&JOM9I'?IO0%KAes="Pq7`0&N]V:N]3Rm&$Li_QoHUlk$Wkkc6daL[rFL<%fClP/Rq3B2XWP`NApg[M['X_>WlV[ZLfP7jGpdH^De3VB'[ldj&>>%,m_cL[n[S*Wu&9l014i*XfAS@;S7b,W^tI6lR2jiM#!LI(jt.T/_)Or/mYR_Q3sHb24TJsQXF#3[cVqC)SYYtOl1#MLD"W\dloY6%?M(,7_22i"%,4Wa[sSj+DU35H8ah6E%e3,Qr'hH"?S0-gg7H<@8l.%N:c4&mLiT/.,q;VI]a-%*S+EBB<=nl.[P!"tacjX*k#o']%qG_K<)=C^p7)S]I=eN5j=pn<$YI.2Tn531Q(836-<k&nOKLDMi#%?Lj3I3b8j5:[N_0Jt,?nkS4Qq/&]d$0P#7q<O7<3ZmU-qgF@%AVGE'Rc\\tm,#m(jeXK9ej2\Y5"aBGME)OWDgE*b4(m;<=X(%;r3[8tmMEj^!X:HtH7,eI(4*/lW$eD/2hLjBo<Es;$SCU5#j/4L%6HmLYgXd(`M.2_[;!=q1jcbl%(r5l>6RY]XJ#F#1?7(UW$J0$H]=n.%p(i/6F1HR7#qjji@9Ph5[=%1>O1nHjBl$Kplk>NQU1M"D%eWq6gk=JRhWpK^QeBpT8E1g2;(.c[6I<h0a+D:6&/lg.f@X?9nTe77TcN^4]?So8,,fp2S8#d^c#OtE!M`JKV=`c@"cI,b_R2*"R%9)"lEBWm5;-qrJKX%r5siWQpR7K^56.(3O:-H@1LQF%dm-8\I);cYd^4BFGTIFZglcu^$tT&M?59ljG[)+ZU/J*hU7iReN`)XK2j%&r3lm;os>Z2&C:DrsMh1C)1&<8BmQ\ZfVH$CAejN:g[P8ar<gWU_B`^idh`]`><YeR7]el"Q%6SlKU3s#U;qn'GW_aL:OHo_6@Kj%X;9pDJlQPkkO4+;JAdUVkgSJ6HX",*LIt,(N(.?9<@#\[``u3SKV`)*E&J3GCmMk*F4WlE`7GpcaDu:XcG`\BWE]<8qN-nPE'XSV%%C=5+Bk!-WCq5Te,#naOSM:iPp`YXumT-K-nS9XU:t,T*V9j"rFI)N_V(bH5#+o)bLUT=:'.1\qIB*uI/qpEpNFK@V05dt]\Is1/%L#s$_Mrc@A@t@^@4tC6@:norlK%46Mg73sdFT:1OPS:%!RboEi2^NJIQ)`[V=f4%L:`\V*%OSs]!CWtLkUYoDHjlag[KnsWoaFGF%@s5nYP,3IW2QI=[BU:7Pb(r2Rih=DD_/W.o$l7#$I-Bhm?&q$#24<U>EH4gT3N.#[P=hB\5OrFXk.-KfdT?:R@JI;9330:uO!N-<%@E?!Y2)2tu$GO$`Y[bZ&Wu[A5X$$]'N1tRficQ](I,YbT<ZHB3Ksi[$gd=e%XMu\;WCf*G/&V]Yl16-T,<NL1LlcKDCFp#?PTdQP%BS/6T"#c;<b&a]k1Cc2%mtPmlN-IdDBh(%S#eP<R[+^re%,h`%ZjGc]&_LP%@a>bjTF&Tg=&Cl?).;KAA?*&*Z7;PES;F['cW$fQ%<kf,<&r4J!OrasF6(=BjiU5:F^::`3"pfNY.o.b[,jIs$e_HI:i_GN]lC#&DR@f]\7ST,Yj);'p[2*P@!14c@UVptb1P[7KE%jk%%#)qHNI]/X?%u9$iA["&ZgDgHP3'>CT0bM]GlAmcUSi%`<LaO\/*;7m4!PbD`29].@YI.IgN$U/2a^EM*&rW9bqIJ1K"2b!t/1Z&1%",F5U7)tV.]?"E$2](i"m<-n^#--;&X`ANXff"_flB5fcT!47(MiSsU]A-(9W0)?+gdDDm%u%K%4u>t@fn2X!K=?AUbpEuID6?%Z%Wi7^)I0,"i]_Sc,DA-g)$98*p5;0Sh-ok9l_T=O,.Ng<!-88CmW^Z#<2_D6#89ibn;IM1JlkNA[eRYgL$l[X;iRB6G65;YN,BoG/%@q=@')Z>=[^Q:<g="^pnZ02":im\$7Om^D.pmPdHk+"-U_RS4UHGU'`KT`n^?E*+fW]+FlI)['k"W"1PgZ1aVk'n;?MQp;L=Ql62%U""^2Y@9)9Xb)I":O+?57Q7?e[u$qR@*<@B?LgJW<H&_E=VQbr3*.iI2)kjWS_8.na=\,JJYT?kgp`"jgbR/IPC-mq(NQIHXeD2'%mB@RWIC!UQfFKH/!=P;P=q&)q.A=>L8Vl2l"o0I&))cXWdF)3BAI]uXAjJ&n1.>3*9Ymf*6J6>3^#0c%@HHh`I$Sam1TQ?`W7\6"%/2=/>`,Wqg%L<NB&hHg<*-lft1$s&V%Y]0oJj+U3RRTmefnt%2=XmI*k\:@TB%lu'.kopV&1te]im])ArP`fXoX1!"Sg>-m7<95%%(.sfOQJ=Ur%"(LLUKFi@$Q.C*7gbI'C*k[qlh.Qr\@l(#BWE6lf!k2o=l,n3F1c7B6-cZEMX"1NbLPU/c!eg]>h*K?G@_&L]3N\Y%eK`iAn..c4r,Z\8X/7:\KX];jhV"@0G-uuY)J+i&bMHHtl6t;Ej'q@k$)jaBNts'rTeEWTpJ0:24>2V<"sFOI78q-!a`Q(@P@C&f%fTV`ANbPQ[8IiOkM-h;j[7#RGPgOfOOZ&B4$.2a"EDs-"Z)NSRn;3SsTH$Y]Dq)(77\PI3m>0c^9Z8Vb93\/p3G;&TL)dOn"cI)X%iiI`=kWVVX)/G:"bpX"8;OKbpPA83]MM7M),$*2>4Hi(q\+'YnOlm.nnmOC/eBl$W$\eIXI1'$019;JFNK.j2XFc"5DQo)@(!;]>%C#_n;=G(l'PX5:W4:l:XeHAROrlG.=!*)cI<Y^&/#a-LBSZN?=8E4JM%EisDJ=Xd+05%E7P9Ou_:18qP\?V!!9V@n&:p=>kj>A]9%4VA6,Yh8p_P*&%g"XINidkjc$A(k8&M#^;&)+msb6D(TQ4&/(4:fSPsX^1%aUlWisd=(+-"qG@DTXf?AJ>J,-Lbbrg<3&`A=FJM%%mC`;#E,l/.>k;iSEG[kfodDXoMc2bANFNeS'EG:Oeb?8TfDnC7L!LtoGNZS"=9K"\8UP]#:LU6^nML6G$+)8EJ:4?c#:p8Wr:N'a%#ecWG@///0,#)%2\1Lp*)>6$EP\6sd/N7>1H(e'5$<E0a%sCcGcQNd16t-8I8<q0Y<1G]I:73$Q3GXIM9m]*UX1$alHEjB3:F"\5%1`98_?b-kDbslZ1bWY!k*?m6JlY6W2oN3!U[g0l%1<*GCSAp/#Wk)a<d6ahdHq9,@-dY1YI]AiZ>;s&5pRZ^USXSne4D&<0!DOPI%\3UJTA0uFnF4#cY8IaZU^T,I@:5$pKX]KX_E3Q_ig"!AL>H;%j-Ff+"hKpjtD."uLUL_kbI=*sIMq`<"Zgb/U5($.AUlE$lh;@Pm%J/i2^?6i?=b;@J`Af_O\;1^*p[IYc7fu;T,^%>7X]_SFE!3^6hAJapaK9r0*-G+0:.,O<Jn-MTsh%r++95Mtn@os)'>%4k]TjCNG%+b4C[9nWh)+gGN%<Pb5!kMV,P"CW;Ts)9"91pG_"8:nJY99W&&02H_eVUl[Z,,rIeCbZT$2TO0YS=VQ?]<)AeO=>g[DRD->#['oQ%Z$)tj(nj[_D@XZ%eu]-oXgA]7C4n34Z"u<UkFt2Yb>&^u,I/kD2pc5U8\&rscS7)dJWYAQ'@h+HZNehXdP9E@C=>ITeuI;dR\;):%(ai^A!N7meQF8l7'LFY<RSi*k%USd5V;T\aPqCQ)OZC9-K%[CShjpWa._E"B<Hu6Q\$9#9=XdU&U;<gjV=P;$Adt]L\b$"Q-qi-)%m(6GXJ'j4JSL+^G!+YIf?>0^VJ<`q%Q<mA&MpAK(-#g2gfGKtb:.rn=TR'H8Udk2(f=G)9i*Y3'l,XDbqCjo@7(.HJ1Z#q$#A6?s%Wm%c61d4eN)t5"p^1V][Fq0Qnq]ciMW$Ph4$<(sHo;BhrQsgnb!kHMU;2.-Fb#fEj`!i(mZO:GI!UG%EpP4BKZ-,g_?R=s1S;X@4%3Ojp3bR;rZ2^?/tcOW%P.";9SN!LKQ\siA,2YA\rD<13ThG()3NX`YF3$njZ(1j2-9`X>WYY^!^9C'<lr#D3;=(iaq.(l/]l[;:/%>TI&78kgX]bb;-`d1-L08,'S%$9K-!'PDr=23eEhABe1%UK2'So:/th#hAP<??.10W&1(')S1tY2O9_Gf$N)\TQe^E`#;%FQar-A%!HE7QLLD,Y+*"i+3i5Z0,4@T-YFQPq;mA&-fit40X%dd,ae!.Q5Di0=6=!V,A$R\OkVWLUO<e^7(a<TbXN7@U%,#7!lagUjlej6<%2mq+>AeM4QjT$2KN]i^NNX1gDEk?]&Wd\.aZu.93Z67:>UX0MuJr.smC9_:l!0XI./]'o'0Vg,Mdalps2&0-*E1r&Ymt2*C'uMG#%jhfOVI*esVOF:XLZ6]0o,6tM!bI=k<oOMJ?*nPs&6p:i;<E%/?%_BO*qS=h2W"b,)21KpH>`8l;RD)b*JE5]<PI?q(K]E_FB@>:`%a>tZn^M=LT;#q=E$V9QfZ-QC6BoQhnKBsN$>Ja%e6C5V(btb?JN>g+HB1Z%!8PJ1tMi-0t"B#$]b1Ha>9_o5"nDijH4c7lSFC_Rh%4L'+)EORR]_YOJ?k<hC@d7kKCf0i5q\m@'P'j!M/DCA)C9bX5R_=5B*<%Wi,e)LoaW83`A5)'qIc4"_^4M8Ef,Ep29Y'/+qc2tiI%86<a_^eSD!>\-%6>thk^-r%74/.HDN!'4\0]RE<k4+@?RHTMN\l<tpB`QmWih&-H*Ou,j;LQTd(S'FZHa?:4p"=>iTp(P"[!$jkY%8HdT\3bs9KWR6@o*,<b.NS_6_D@j*h;)V1`5k1;.:=p-pWTk+kY_UrJO!8@Jc9p#ik<:1@eJoEh=K+OroXk:E]L_%\<TUOS9Hn+9%X\OO=Kc<#XI<GKrokY$=YUjQW9U4NcXRBD1CCnEsOh51E/h$@HOYmn?MR,3;qq27F/7[4M\UK4l%L<boj(r:Hs'/V3)ma35F\i93%X1kJI(=h9qj<u@sRLtMKEZ0`Z@.(rHGu`b'%uR_nh79D3e-;O],p\Rp9%N:]R#M+UePdDbYi$BqgJLnuWaj.?E0K37-@lF0pn6AX%jeO<;jrp.6e8>a[liIHkP)ngs.^WGVnE]%I=nUSBTE]9`Co]S/fWt;-h']LE%>FmjjHMCMoie4fhjn'+InGfkn!X")lu!/<.S_`r%a>0K:(5I7[!A`G7h[<'f.-eqB_^aLf>\qH;TMW4b1jQVI$L\L*V)SD\35s!B7!tkcj:4OLR:_j.@U3hUb0P^=)<^FGGp9+o.eRLN%*tbdn>4A^;LU?n<WQj^0X1HHQI[ic6'T1?QkJYb-(bD!pO.[AuFhQn@6cR!b(3Toc\rCZr6<SF:XBLa'jNM/+I:m,".r8KOO8)Ai%WtS0e7'XlqI"5Jh3Hh/Q/FZc+"N?<QSXHt;P)TH%Y_#b3=tY4K8f^CFEUj0$PkVa%&VMq`oINEVMso-<>"#>o]%P&H-MMg-PS8)V%FKn9*,a8rd]!%#&oi*l3Jk,=S$/nuWopKdD\/X"r']j3pTcFm&9_7:G92`Zqg8^`m!&rp"FZk=gq7r_:9@dg_Y>9>]0FFQq7^FZN%"(9g1MD(tHlZND?k(3l78[R<t/0LRLKLb/e!W]p)pm3k-XjdMbHPKo`S.R3Gl-WXAkD8SK4]_(q"J_d@3kRT`F"r'fVB%]4HMC$N%4]n*JX):))iIF5k:@V!HG3Ge@UO^QfPHp(r:[4[Ah8rK0g#9T1(]nDR1L.3Z\".Zf=GKu!orLU'gSQ$6!$4:o_M]6ZFd&YSAK?fT%c8@^5+,!r'42-@G1>c3=1M8%Uo^G"T3=bf2,I'@$B5@?Tf#,/I*]lBJE,ms\E8HV4PW;sW%&5^:J$a+.FF#(?+;M:k\mdpm2!(nV%lF,<G[jQ#XSK=!\a1cNq(>i@uEV.o5A9Eh'+A8S'c=/#%GHed.Z7iHG.<Al25gS\B@Jd(u1b\.fm_,m)8X&I4Tq*Ih`GkW^Z/T5J%am$W9.$ULq/?tHUQ<%j3</edG.dhB6++am6U2[rHf0Gu7gc:9BJ>!rM'Ko'pTF5u^.m*!)hsF![`"+ne_IITH[cRU57?3UDbePZ\%XDV.P8OKVg0(f=qX,uc\$K`+`$pI^f;\q%4!#f4B$-ZX=SW'[/Z?\d_aq)10dF;tB`uQIK!d%c8He5UniIRp]:+,sMVfg_WQ8VpE%NBV+.3di$Fg&@e/cV&D>):VRe`.q%kP=EBp?;NF";>P,+h!NPhn68P<WBo2U.3'AK&Tbr%3U"]h<E88f;Q2%b'O`WOCl<YGASA=o%DsC>Z4o4MgMpFBBd7`2^/;]^^`.E"B"XrDY&"U+gc)9B!F"-8S*LidF9DAscF'Y%^WQ@*nPA%AJr5%daJ6l0;@Op3kenh85VIE'O%<Jq@$.XeaA)i3=rBtOb@)g1*XS[-+M8='toVRdVDcpUoilfj#u8WehO08Jib`N!=C0k'j+$g7q2&FpMDH`KOVHF@a'PKriUH5J3C%Zr"V5>^J21>)G$;0(dk4Z4J;?X;LXR#a2gRYTJMTH+%SEZ@qY'ZUQHI4KtEQ`+S=;gW2)shMaIQqp)PHI,,X/lkteFetfaCY=2BV%n]lD*JeZIi8_EMWUU\TJf&m5V_5=;!Bre"go9Aq%WQ\;lgJ7&sAYZc\;s*q@`G*K!2WBgRF1f<_mqUIaDq5-fm"$D2J&*K-dQLKU%(2J-?E'KWW6)(JUY]*lWHY:gQ2X@W7"NOi#kVZf$.RE\qdR7V3Z.UmC'ngU`Ju$6j&-XPn=OO<O22',q$0Ol(WELS7MtEr<\ViN;%K6GbMAS4*3'87>^KLgO3/se!9:t_:*$[q"=WhnaM@a4"9+Rh7hRgSc\2[1Ec"sd7S!c1J)<RnE08H,tAq4&(nSj"C!"GMudLG:$I%H\AZ<R:cZJ>G>\@1LZOL<Qd^2\lOtaW@?rFXsL9Hb`]5]MnQ/L,F6e=Ldk_u?W0J2YK9+#$gV\2[3p$INgk[r?F)7<&(%X88.KI\%\r\3%!iPePO$4`!Oh\F93Ar&4$ZpG=+'SASM(L5n*Me6s!`CHor'*09[q>[&3aIg53o-4a1ghT?jM@PBKLoX=.bQu[6Y6`fJ7&]^%ftE;V$t=LgibTuF'NVcL2SWpK+tH\3LPK:T(`!Ofa_)3&Upr[l&nQYqn9n?=a&!Qt6/l"C!e1eRJUp.k-cg@7nRb6[H\k!STa#Ps%e7C?OhAG.l&o)/&&'h!(Zh8%PXT+X#n'Geq<u-3Ki-uje0OX*^[l]u@82=Rn%ShO5:,pIf\R5A98tFeD1&&u*l`G5?cYQad:b%_[%(I:(`6Coi'f6QorE!'\("\sLl>fB7<b.9Xndr^j#8l(NKVL.*"@YPfj'W"b8lQ9[&-Z"l(;.sJT)'i*5Tc.@a=MnQ</B5KYf01Ze%/C\hI3Bg+15`=jkTNK6mKf5+2$JL;s+#MCo52ERif6*W:T)&J5@Ib5nR`TuSKM86_!4f=mZBP3')YBip"mDnLq8CjG(2Zg0\8,b)%6"nV9<PIC>bA-hSgo6JJC^&gn(ig5C$1=qDP[lu1_0YudOtY++n.Pm1'Q^Xb`\QDfdL9EXm'9BVe9n^k][ra^1B_A*:CRA:RL.:?%<$$Ii"2Nh*1bXYf1K@dl$o7aCm=l*Eh<goC"A*fg@>6?id&</8j02p[k0&i;.h4E%'\R3e+)W:UXppn7FiN*o#PjHNP@?BY2okM<%%+VWQ,EPFr+)'T&80h7aAQC4q8<QA#8V5VeOA4sYUpI9+S[rm(2ooOO*H[:;K@7S]Op2CEbV<`5-tkRXmY_b2?s60S-Oaf*@Z<FH%4>^XWj0W5,,\i.c5qtkl$k_fX'k!QY-^_iMZBUFqkWaF^PPf0?iBSeYJhVNY+T`p=V1BLJK%![&TE2D[=`BKi7M^BnVO,)EM(o)=%ea5(^n_:5dM@6:$DZKWu<sUi9?Ng,8$:-L0J=_NmIelZ]fE.dN@?cBi$Y9HoS:^]HS<K\(?@^XkW9lm+n3U-Li[IWg;"X2sfSi[X%E;8d>+?)lD?u$(uk_AD1f"H)Z)6HaaR:MUbW9>H^r)Hn68uU@ZOsD2BP3'4&<DjW^jK8Pl+L,0efJ-5JCn&AKc#=1_BOg`W.QV-n%QmhlqdYgF\-'CHZ-JHq)J7/Bn"Vu>.OenQ"Rb+:#S\G&W7XR_Yb%^JrPMC-V5`u2,Ri7q=bu+kq-U;rqI&AI**\a1rSB*NH=-tQg%+PDjuF3DD\1j]R/XTnM@]QbDdaQd$XU]<G$TcrJif3.Ad4i-I^_>kMI0SO+BO;D!9`W?%JO_0a-=RdWa'/M[19rVq<@'F5m^>R,S%.g*?<P9t&jE[GQI"!i]?3oPHXfda9\VFBON,K+p_[Qr4L[KVkkq9s&<E8$[i0+7;!`,-4W1]gDN]uIdaro)pb[K'cJpGml+s3W[.%NBkPSUgsp+;HgV"S!d>sOqTta5U>kdTGAe%A"\t?9]GH\!(IujFGSL[V^lNh.LFKR4s44;b2GoYiN#pCA&c/,X-SV^M/tR3d[(e0%b&i(RTC-MjP#*5U.Z;lQQ4L8&9sZ^?!A'%(G='p`Qo$*)Z:.)?FKe7J,:.C5-6N<?LBJWaeli9J@5Z&gr.R^]':;OCo;h3dkSlm1%iNVp:1iHle2_q:Pge<*Ioq[<#d+>(D_3`+W$`a3I_6>9&YI%'oQ!fTqU9f"1?\SS1.?r%%.*TM+Ohd*jkuF_J8()K/\^2%-\5=Q1%i+[LW,@tpi@c?DNO=[s;=XM`/%q&5ZOk09FN?e]/G[Zf.3R%m5'TpcLRJX9/`:]/mJ3;^3;m:?Q\=&`NTK,T8%1K<`mjmo/L]\nZ%g:h4=gN<"Nd&nXs)B+GE_<1s$rWg>9$sVV&NBJ93b@i]Fk6=Ym#E:3UbQ=VtPb=!Cm#s>:b"F'\=9\tC2CK.?H`'HC/i:JSWtD9Z%++Uj45r6JmKg!qY[38E<A-%R%CF%f<bde04'cM/oNRY6\gS0'4J3[0!gLscdb2>nK"NeAF)`=/na4,/P2sTaL`S'PO!.'fZ<_i5-%#d45fWm1ig*^\EWCog"!fmF4nF3Pe+2+`]S;WBgRJOU1g4H9J^f-L/-fJ]c%Sf/jV]"s#uE?e1=RNQJjZn][L8qpda5Wh+;iq((m%:!gjW2`TS`E0iGf6c4KeBkG[/:O!:UTJ@74JC&[rQAJulUX^Rt?9J?KP.(Q421?)n]*'ro/:kL&ZO\a?U+ggbHiW=Q<;k._H;SCT%]Knn.q4WoN/R1u3]c=E+$D8i)/(S_"6(MHe$a@PcRuhJKE-Oo1FJWG)C1J)b;"iVhggnUF8CQXu^n[9R>9@b4fNN!^*'*TnlcF1!%i9#\-"tckqQW/8[Bhf3pWi"FW^^'p_^AnrM^Q^'\-I)UmR5P[b/rZPTgG"Ti@uY;04t,<*K)!41h9s8/j?BbU8g48o\7j8k==c#!%8l(T7LopNM3m!RW#9_.aE#U)GWo[RQC/.UJVV,%iG[ZT:%iF(A&!G_XTirEAoT1MBd$+pBJ&>Y?7WAGA%W7IhX&P5^`^XC7-pd9Z%,!B1ppblSL?nrY?-%d?cU`j6#W*7&KHe)/FOqr=Q8ic591T26G7=?YOX2Mo>m?q!-L$`TE`$[N.C\1U21FTq2(4PL!57MM-dK=_,%0a-#DJo^T0BM9`cec8`,]+$f&^SmsdK^[HpqGRNT^/OVe4L@q?Y=81Y'*EciMe!R>:o'mLBt`"/EH<:AU-[i+JWJ2ME%ug+9p,So%2q*a3=]PmbW:EF#%mm&.*ahZ5q7%tQZ)Utjq<'LV`-=t0bqCLS%Qpa&[L8$<_[i1F"b?m`:D+Mk=C$QG1;\2VW]6^VL`%Y=*%#R#%/?Q`d!!$@Kn^iFLp!<uC`WqSChANoA##L,^/2XYD)6A31CZMsfKI0#G?Ug@p/5k*XV6L")1rpYE_!)4"/1*&A>/kF79G3Cqo+b2N%^p0pk(HE$HIa8;k#f\VtQjr'g2k8<DNOkDM!LBde(*A-,j-+)<Ws1L$lu_TR-6qWL%?)2sIL=8]3QQ&s8Vqrc7/X(bI:*j;aWb:>%osi+C8DkL^3Ffuo8Wq4K$@1<U?RNBBJ7?o&C)B4D4^OAAib$kOI7[BVc?!kMGb[P0:fq-<ge;Ql#)g43NDtVNbEY=;Zb[P>K/TLE%ZoTS;f$*r.VK"LrWYGpDCF4t#8MZ&h]Io*=8Z!<@IE=oRn5OS8/b#rU"0hQ/e=<=f1s(o_5pMZ*]SB>V59"cZ)AAFAhNR30&h;)7%C.RDY!XG/"`fQU,5?>c8r<<u#<VRLa0h3O'k1>KQ!1BZQ`+gB'msoL@QB9,ZIF-2k1p2/AWHScb!6UGP7P;!6XKP$4ET:nu**`[U%]#5.&\L.fBPhrB[^aQiUannsK!^rSn$S6]_%^t?R>Kp-k:@P>V!,\,gP--%.qO`^hA;obL82>%*A?*ar?.C8TBI[$!A,_&k/1-f2%8;7k^9Tb`Z+>I^A:Jkiq+ELUo,%8khG%NRUSW0)6<d`@q'YXW9[P_5$$TUh57W.4&&]Ll7YcqBm&rT*!GZ]osTs/,YF(r:c[R-Q9%`o7lci/k<Z)s7'#ZRHi@!0&U3UD2I(#$(\u@:uJ,@ct+77#PNbQ=R'9%?UYKd(D4),`r3Ff\n0nGTlF_bB,1(7V5>j`q:r@Fdqbm%F#GcaCsnj3n%-FW9P>_!6a`F8?j3WNK-b!CC1[)[EBXX`UDT6;U^>[.%#>6#/GUh4%6#Z%^ofIB;.3'Dgm9N=R%jt$/iD<#^gMR"%8a#Z!Y#-1Z9SDj`<;d>_SXRb:c!^QKpe?rsjsc.`!X(L0gg/P67@7'Y$a@iuWlj\X%&Q!qc*T4A&u)WI9egIZ@eD]&^hT`=6cEGj%;hMZpYncJWXc]0C8o1efA1<!RcE0`EeLbiG+V><Vh,O7IZ"D_2^UHAU[RNDgIEu+8NoNE*eu0kipWbRnqB$/01T4rJ2!Iqq&;s0S%MICi3R7sOrloDj6Ns`L5\1/G31hH!M@C$VajpF_HY7*lX<8OQ"D(Aurd!Tu_9Tm/P;.m*WONCSN7!O.2aGuc;-J!;TSOmunN(,jd%i?Jol4[K%_Ngr:(]$>Fo5dD]m8G-`E-mr!?$;;X*O:>#$)N8Dd-3S8<pC+)$7q6nn8<l2oUoL7XUFG3\[?aKUNFe9h"um:iY4@rC%YR)[/Y),VG)\O\$MIdQe+V$*=LDp]B"6chj0lA?7B?UN*PC*@a%\QZ8#s;3cYr/i]J>kj\Q5pBPMhF6&gujYD<M>!!T\CM5Wl(#?%WX+dfajiqf*ajGLX!2e-(,VKerd']?1n1c)HO*XOZa&S#R_7M(GjkcH8kGb)6aNBB"IIPY>2C<V%J+DaLcL^iIFQKXRV?80@uZYo%#=u.l=<k`hYaUt(6Xm;^cmYB"!/%SP[#pgi9l@u$g$r7X_Cgi_!0imEP5*WYLC4b#9q=&=i96cn`M+XG_TGBfeY:^s[Utd4eI#N]%`&*\G'<(c!99Y[-_IZB>(F*o3TTu>^<_j&MJRI?+#opiWSLSVE(-c1>#n(?l9k.'X1Pn@JW6Y%hZpY>@.MuCjQ+/ZIEha^/=[>_M%&D*SShF>\#-a?YN3mT(Q1WNYBj06YeUoi%Mh&+B#J>>+K>@N#kC(IakWbc_)Z6Lc\U=ktUVh8&(=\$bH%<tK^d`hV.QqGS1$-4j"%2;[PMJ(=R$RagX*q_?GaV8W5VS3Da)Pt&G*/>j$"2+nUXW[)9`P9_OqNLQ-U>XU(D"6=S#rp[jDOP5L:f7@P&EE#`<MOV,<La(3e%^SfdtSQ8;AhfHOBVA@%$ROg<28^3525cr9;X->#8XMI\s>/jR.Tb"b%;jDpZ(a3RWOqu_]Hc:uOM0k=TN3_uTB@*$QWAAD99TIJf%$Ca?9pB[eu-UVf,EFbt"rU'`,pc"bRI,I&*r$GYB#^\NbpAnIn"#*;VY:Gp(agGPqPKG]VWceDCV>2<[F.A,'3qYG@RD#P4MN:-2%^8F\!jTWL&^PHo^cV>0\d&:%W,HYJcP;AE"cLR*-d_[C[9lA#,l7I?*4!D=_dlqGs=rpA3#,MH`X6<8Y[Fi1n_a`Bs*p50F=8bq6%Oqh[f-K$`1A7]q2>)<LI@$;G`A@D+5/)#m`!DJftbp'gI9V'r^<N3e[']t[B?od[p,P=W!O;n[V!0XHi:U&?SA29F(W_hu]J/)-q%NKt/W@Zi>0N&aq[S:aM:1T)0?c,&TF06)Z7FVZB8f1HW:#PJSd`bCkZ!ZD`0AI)r0h[693!B@L($>\NdW;<.2&#c\ReC<C[$9622%,u"^I:0.Y/<+4Aggm9@FJt$1ff-4JPK&%r0]+K#m87g#*DW?96NCh$nq\n6O.]H:i-;Tc,o4/>A!R*J02mU&p:qn36Ph@261(8k_%?!n$B"T]@<1h+X>G>"VR(mpdek"*Hh,AO=$-uPhV[tai^f_73I-FD4qLSSSF::Ieuj*Lu1s.ciE@W>s;G2$Y'O[`G=aBQo^"8XL2%l>eabj4MX7`(>rP1Ir[cl`=6$qJaR;N<q5!gDVBoP)#I3N^6Rbdmd6T8`qP6aU2S-f#V^[`:OM`]$=h,NV>:>M-8A2@&h%qBF/3k%>:W'P6YB=8lks@%i.fJmc-`P1;]uPBTiM]],H1I2N(rt78L.#<c]pK.P6)@^C-5g\4]E?E$A]qW,j#tYq)^peOj9I.Bh^A<R$9Vj%)CBB5!>_!YQD9kF>p5t`cU=cA_^jXtLtpl"X*/%-XNGF18]Z-&0j^7022.,>LQP_K*c2m2'ct0MCnu.llsYWCnYYijQFhe"88F[i%S3b^*BUUc*8>WTUKS5f$68HX\i),Bt?V;Zc&PKU?&2(@7?l'XuIS<Wa@XY=mYRLIu_SGG#CbI/E]!B?RqQYR:`<.ODLPF@i-5!0*%U1L9(Sk+[JB.?^Db(^/*29UY(Z_1<%$5/eAbW2bU&-6H$BVTuS=ctQBFs&NY#fb\dCG#UXas-D%1\S:f6-l3t<`siY1W_sW.2tS&%FgQa]GJ5$olLCUmr.n>CasBS4-&o-nGd)a7M$g:gb<-ui">"QtRVB&M0^Zq,h(]a&WV/^A=aE)mJ?EN0DIAorQC.2mSJW#F7g(d(%I<'G/`++0-eC8IY9Sk6NX>EX2JWW68=0uoQ\:7.4>E6k3iRjSJI^.nim(>=$C.JY3D[?4q=M\4E3"6paP[pdrlrmWc?SRNm+Q9U_%3g=NSQ8b_>03b]Dr7'ub)$[NS>I*3<?4`t0-?!=2'2=!EF*jS3.ENbV5rDg;T<61d&ns0H8MYi5C[Jq`7qb5>-]a+'"[DLD#lj*/%(81^W7Q'J%'+jII'H<sTSG1C"<+E9=_Vgp+,HVSP@qiKHCDtCn"c#['<8;/kL`'qc%>_1WNL<[i[2:='6Ck<m@))jIKffMA7sMoj%idS-DXB@;\%M=OII\9PNrmP!2'DDkYand)-%0@^#Ii>l+-6Z\N6$1B2lQn'cf6M'qM:HX?0'/FW?:7js4`KRYk?/Ce6p\-\17]*8%#:.BY+='A:g<BatN3p7B9N@ppP_Ia\bWOXYhZdrX?5GXYgbN:ZlqTsY!=LQ'(^0#N;QU<k\#'o?9k?;:`j7IF)]GOR]libOL_]hu%$'qu+1K7stLA*";p-jWEgoN7+LaLcl(279u(G8j*A$Sucd$;#?"k/aqPR#0)qp8GU^0u`]j2Qb]d5;qM#P]a1\lT(f;p@-&Znrdc%RjOJ78KqJ.jo^79>@sdaPr2^A!EU/o'T)Y+e*>'[Xd[$d.WiS\BqBfM*P7SZVItOg_@/=/8S3V',ZhLN`E'8HQ<=ec]I.G7V3R8.%ri*Hb<^?rERJ=Ii\\Z+`Ad*E79:<e71BDiiUm7bG+fOa<GbPf.[j;4YFts8GYE3I\8Y8AL\o-fo3CflZjCm/=":@$C;I$S48EDs<%\h$VZce?+MdZ%(T8b:=X2TCe[)(8;%'p8ccW]""s5Ho:9$5*P_#1OqLYm0:)V>MC1IF2#WC0"dY=eQrD9hbg@&8?_5a`@E5Am2[a%Oi@Vi1m>:)$^Rt%4/H.AAk8@[a>H]IJ_@WUYi&JNhES<&U@6YuU60)/p^8JnaP>7KT*\)FCpL/2fKhr9=l\2+#8W=FMW3Lq&'T+j%>-1@O.aQ"$93bWa?*QSTq';E92Nl'3kt,Yi#`U.<Q)pS$WQ$ZgU"X+]>$+*la<V5]BPcQ63+YsZ$\dcQ_^\2TlRGI?N)f%4foZke%,AX(TW3$f?*[Y%K#!<$&Q<8](QqjCO78;o\B<;QBW=7Sd@p>uS`X.jji3r^i=2NLN%`gr\DsE<kK/")(+u)ko:WT_1bYGSiEOdDb%Es(.ICkFVk+?!aXZlr9]O0<0MLX.iDn-P/EouBrqiK\2!h_?<BAj9Io'O8gm>/eV7$kBXT6WS(je_kT,+E]!PHd<W#L*3+'Je`TD%I2//qnj(T.3QW0g.]TjL1Dt^%6V/Dcaq$0Y[3oZ$^ZmM@6jhLINO$Za'%'02Y&'1njj(RY"2?1f>-j<8T!03Epe[-MlJt.5OQN$5%YdK#iOtMj%3tBWsbcFrsLth,#G(=&PZ`n(?bLrsp;;^%4]IGLb$I3:[34*58_qLPFTdmD@=p\NN*Rplcc<2CqWh`Lhos;GFN+cCf%;.FaT+iA>`Q0sn`K-eTLKh5!FMF!A,+kVHVRFhQ2[$Z!Qauh7'Qk+;UADT[5YG@uB>3?7=IkGFT.7(s#c\Ec%:Bt-;R\[*p)BkHG%`bGt9RLPDs()g29/"\*_,p$;F<Dm;J3Oos6+[HTeOtDuX/V[f?Pcu&6aG!$T&6V5M'?)8brQElqC5gG04O=nMNgM)kX@0*4(qBDR%A`QRL'g)To?=cn&OM%/?][TNq9_.b4.X.77<Ej!fjniG$VORgmcGEcS["O;kjU:.W<uAV,==CP-bEoGBNkDR<Q#R]G/bYhrR,&Lc%YL2i,N<5?q9a8J6P)>,&FO]_mcn*4;G/`Mf$[8F,+`"/=&D2>C`<3nJ66S37SXD/loqM.Vek?urfTEkp,#aL&GVbS813aREhTVKq%8L&<7"#<W[$Y7dqJYKU=@PoN)9f>HU2'/+$J>5B`7K38tZip?6`Ce3&q74V3qc6JuB/12<]PYKWFF$\fGYBMlClqSs,R]$0)mcK/%%0T_,7X_kRrm]<nId+Y8'9?IZ3ch^!bodMCd!8ij9&^DT;.YF^g"N^h?u)W$`A&GW79J=IJVjs&`MBNd_5H=THc6/%aFL*9c6L1$%:,L6WcljQ<%EY9YVT5aC2:KN&WNJR]N`%>OU:ATYNnH8d^9*NK.iWIbX0h:7;.1n!W7u(,e)AH#B%#7(ZqWB5)69-D'A.:qeOQ$(%ln"DuE+XBr\`mpbqVn=+TM:kP(!IOV,okCr*XB!%8ugg<,RFcSNR=3:$!obga.s@ffN9@!![q&Kc.:[GQp@2XCdT$dP8J,"R35eV%SqU=l;"0pb]gF"nY$g"de`["#RIC@s/t%luQ!eSl=_O%&XrlEO(^:YY=C]p-8K>e:]i%:>l_Ym$C(@dU*])%rNobt[-+L@6:ekUF%$2?S42ItJ?hI]o^cd4^:*8R#d43=cDBIl;"XuK"EHHOq!e.bSO_4g%Z-pgpGK9_g&BE9YTaZtf2\F(>.9og<#P;F.Ac=0bLZ5,>;%P%'M&2f@#Pdi`Fh1`6LXmj4u8R=p5kl&Cg:;I5[sH";gopX$C<P5ID4)G(BANJ(CZW:cM^Fi%<5LN;fh%ItY';6[2tB9f)hb'FUi%Z@cUDe1A[N74q>[]8t8!#[tRl0[%]<m5SL=m(PnS9rgqF`.CPb<GH8+'N3r<GKJOZV0uTbo]K77S^iG";N\f*PRRWU*EeO':OnJk%4^0ZsPhNr'-obGR2hU@IP]d7kO!\u3$cCHaja(m+iG4#lb2sIDN5QWE7@EDbJi<u=$X'W(Qs^0QqBNL_@;KHbKNc-BUM:X+\dnXn%=+)p\IWC.qaIWjJ-G*fT5GHm"m.fW&&Z=lU%9C[m-OV*O*1f/9TUAYt.q(3VKMQZMZ:&%Vm3B`D9s_AWM*4[fhh]"p)Al(nJ:>5o%C6hHQ1M]m\(A_amJ&EN_MoC0rqPd<ggGK__GZ@T\.AFL-o[BQ7LrH!_LY!1=qi3O*]\D5G<f%%tdl68"%;]XWdk".E]gYTH-?=5K%e]b+KhUQpK#-,eOlsR?90<#;oRZ#I'cL/aV/R0m'p^"!km9W(D1S<lD#c@S0_'$>.F<R&]p`c,%1]=uM*cHAG-54ub<Z.>e$*r]f%Ze<&4NE=$[Qt=gg%O3X@C[b4BKr"8_Q3l&6,&WLL\`dklb5hQC-d)#r9QcNt`5njE:\6FW9)_@j_"GB4[3:aP;DZ%>^7VL;k\N..%.hG@?j(Yb^S[:FNP3:MR7.6e8[W%eF3$&0[LtFm#B]e1cQ^KSoZf!r#1,ZmV?[hG#7<f58+XU:==!hpMR`=[E"2A=/<.V"o=cmW^%<QfoN6'=lm[>6Ru3`XE;dR@(g6#Bn`$-YkdRi*qkY,jD+Ocd7G*FtiP]M,G<OIU4n.reRWf,cm'$K+O<-s0m7,f6('=b'P5n\U"@%5c0*7.Y4m#h<*A;j-6jV0S'9Qi!(qH-Bf0'ODtNjm)X`o8BafY#%Yeja0jnb-psAV._D@TOPE`OE$e+^D;SqaP`m@CKEK@>4V9nG%#%ZkBj8q)3Y<n-D=?ndC)hfqM]NP0QXZ%NqCrLQol^!oOJJqV)A'#l2W&9QJEa>?X"^$s[-`E`-0.g[AJJtNr-$@HAC>>n)DGUG'%iSIB>e=[&CY0J$::npKk8nAC_:n3l<qlkUQnM"YrYe?.o!Cg:G3QQpYAfKF-^hb57(7=K"_Zj\1CtPCsOUVP[/[F>cZ:-Zf:q"H"%"_AY+Ye]TJ*#=oYKYmktNGs+cPF\!uM5L=Qiar/)GhN,*ianQ=WUSh25o\;9jnE#=*CFI8MjMt`*+Npl9co>13PsPg@jD[.N%nGj%:^>"eSdp^Q;1*QBJD!'kK,_N!6<u(3pjt<*\a`*u#qDM@_YQ=_KtB%L61RBj0d`2D'0J.)8dt=0"^'eVib3D\faJSN?n[?o83jL=%8:*`>4AZnn_dd/H;`mG+aZq`+1`<U8PhTRI^S-i_`5r'9R9?BMTF-ZJj-+Fk):kl9,o.J<Me=bYCP$Y_ZVIf+!OJ]N;S<oK1g6H0%`c4?lFB9^4IZJO_-!79UlDgnS]Rl>6Hin=n;$DOS%-g#ikc>=G:%JKH"l<cpOUS.ueS*Gl$hstYCf1]YQRS#!&QFAs564J78cB'l%dT@XmJZc=VTiq^pa,XFPaAa]$JPPV_l,tk<JhGb"j[MpGUI$cO8@7/0f\opLTha$u0LME]Z[t1;HIAfJ7kY,hK`XV93eg8Sbi!1G%%%X=$kd_WNSPNgNA"c!q%H&uNia6Kj>]Ztd3"&qiq6>:.&V>_2Y8c`_+P3P%)P)&^pWlM?2(aITJ'uj.fZ_@sT\!k,bUdB^l"Y@n%]''RFco!_fL,s4HIu&B*0p\o*)c=>j`:[(UX=+&>/rdR'W>148PU<<R/r9d+TM@p@`?\I+U%fm)!3+H&CO!ISbVSQU/3M:4LqNrY%MUNM".'bu316gW?j\miFT\+qjmsdbYVZRj016:?U9orU(Id+L#-=)8BD#i3V/@#/*<U?;,H8J''7#S@n*\cGHB+O&1ZTpqtTnH";%8Y_:OhdE[8Km7g59j^r!#0Lp?/<4"EE-b].]m)GL'2h4j<:7UH<904k<%/#G&3?YA:IQTa-J.X+T2h.1[MhUsag<oAS^!P9,hR15%qR0Lu[Y%pOp7ruoLBLL8b5b8STF>)#M3XU,%n%%.hm+654=rFR,^I+No&T#Ys-%U&#7aj:=I^#lVEn'YB/cIe)E\E`98ZLlefaW!%NHsJ5ZpRNl_No"dFd(D;ZAf/E,D*LDIKmlnF.#!\)(jsG]DMTfgptte"sqh:P=#_Nef&@tkDOI(ctIk[$&u-dSTY=uqZ*=;4AM>"%inAm<S9A`t?"sksT4aERp$*[*S??uaobfmcbXo?Nri#R'c?cmE0/i[9)=h:Ggh\l4HKFR-UIol>FZRd,)/Z64Qmjl8K:.]2?"5\\%a>30:9CTdN?fgFKrhQU3]%Y3E6hu5)Ll[O%_!V15207._[VI*hO2"4XCo=B#AJH:"mY-F*?#uQtRB'Z)qUP?+b'FfL9JaY6q;'SX%XNKD+=K_U$)1IM_X9AQ+C:'O[n5.DjLh`7UY1.g3Imslkolm20eO7.]auoeE4;@(?B_#:F@HXP`s%0cq<U[1)rVKib]CfLD2KO_1%)Y?'tp!FkWHbI_^UV#HX8nE\T'ke%Z^cu*g,J@Hm?EOq]<m^PuNHVuWr/#P[_d:#jockCak^:eBen6mM1[FtU4"ff_0>.$ud@I`8%'E(@kfl0nOQT+\DJptRdb5>'+^UQl7_6;._SW(07IO2Ym8uQu?OF%u5]\jl'`[RMg]M).\@Qk7)FBuodNoQn-s",1'_$5<;Vn$Vi%5J;u@,t'[W-YF@-r#PX+"]:)j8XM:0bIW:l[uMLdr!-O"mk'o($Qh'<'[53k$i^D0^!:2i&sDoE$<'K4TdC)jK"q45TIo0bZZ=l]%\/'VbQ>D&-K-)*2,842"d2kT3K(*L>CNbe;n$82f\mCdW#Zq"!\sLOAhT2NfPAgZ;K<PCUb/WYq6;U>7s!K)iNtT1Va_%su!^*kS%,O7.A)urEpq7UJWkD%Akao>pDRSfn!K?QJ=.3(&uE%.#;+i))R_SkriDf49<GOWOa<fKeOWpkK=Cn,0BMk)-Bc5<cuoR@PS?XU@l%]EE\2"RsUMR#n@2j*3YL)`-i1*jUjY/mFLmKV/]T&n/S'emqlUU?dp:MuF+MY]qmp[Fi8^W#b(<nUI8PN)h;(-A4AUM)e?r80o8!%it'9#!XtGo5>XpH=ID`a'\ZNCBgaj:=rnS:6ssDWKp$(N(l6YR.RDiEAiD;Rg1RITiqe#=oll[P!V:FZMOqK8'VD:S2'^[JfR(Au%-XHK(]b>h3rIqeu\3&VEOp(Xqs"3!@JqqZ)A--'B0BH@p->++mO;QmI4'6*X?dOM;*;n9epELWtmEXU+r0NgNAGIr]IkM>%KBF(\%V95q:bZ\Q;ZI.qql`?#@(6dtL]dqQ6#a\Ro<1SfbW'rTuI@JoKb\Wq@TRZ"`UA\5Q%Gc$'goMa1ijG"#HqDMB([0I7ic%2AM=u\d%m70:@V5e`PbLp`HjokX(O8_/rQ>F6NC-boS`'BE5T^oO:D;oA-&g9;$Bl'Ean1?=8Hk,j%;?)gOSh-'8fE8@IK!(QN6'AB^ZJ7QQ%#a04c]EusCrm3[;M,SUGaD=*ciGW9*&3#Z6C]J;tK>=s0R&"pCOuq<laZ4%3%[no(e-2aqZ;gUcI5I-=au1):MmM2AO:-d2d7DEg%dm+oE#p.+"*b#4abG"6p`Tg#LFn-;UQWc/1RUh=r$q.BX,m\$@5fh"@)8V&Ea%/eSQ3ni_lpE(TqlW4C@ZjD]$<[j!3gjM@@nFtu%:kfeC3e967$"oD`lZ@adhRc8J2p8FE16rChoGL7Y)5;.6V?>48Eges,SS]V_W!kF+b>UpD&El[GTqtn-%@Y-DNFYS%:"DRt8jo(M%c8<_pYI0eQcN`UkXP7LGaNOn#TUAKleWl2WrTnZ1@Ge@cr2U2nSLTFQ*W6lE7D<9m,kD=0gt/%?cJLF91M=CAqkH>r;6DcAkrNk'%TT@G&bF)\3qA"(!:&am#)sV^GbBq)rfhVDb&]odSG?/AOZrf!]<U\8PM1/H<!;@ip$s8k-LgLbiT(bYqQ88@A@"a!!a0(53^&<ZV%4>=:_,d44!Oe49+BiR2g)!:kFAi,UM0jnt3em,+6Ct79m>^9-M1EH?S[a8m$/9VtV-cOP0X\R)ao/57RB#"4=X4]r_ip]IM%/:58%4TF<$$pLI-baFGX1oKBs!AN!tf*s"#Q2Ob1WXm60[.'\@5b;cmJ!GA?1?+'Bl\#2O@1iP"C\[@O_PYk]qUoQ5H?EsUG,)1A,@Z7O%NQQ2?$cSuSnptj8WI>^%:q./<bm,c3-0L0ES+'uA0=Lb]eR<sSBl+&r[]N^.ml^l`#OcZj+&[TFD%GT6s51CJfYa-`3_kJ7B^Z44%:GG,O?r^pJCZp!<hZkY.0"f9Plr:ab[IF.&47+.=r"&4TXo:8a?jp6.Dn[cS5]Z;+s8McmfF->M2QHd-Sj0lMbKd=nX_5FOnZU`3%F34H8/hmC+9Hedpj.]jtrbG@/+5[;VF>q-0s515Ls7gHmmm_0`)7ghk9,LKRb"2HRp-b89h:H;QnaRLBD9F:$n=0HdD6_W<pJpGd%&9h6X^CSV9%3usKmr2k`e*6dW[cZD]^Z;Lc:Xf@(:[Rf2RjfrGVLO+3M8Cln.*FDONIc>r@<\SNDLW)<+8)%"V`X7V:`"UXlIGe)%hI#rDX87;M1\k3a:p)XDN<,m&:l$::-ST2U]g8JnmaYpLSS"cY,L?!!?PhGfUK;+*%IIBYR#t?I`<bn3=:5E%Bj3i9hhpS+pNCVP%0)RosQ.u7T)4bR9+#I8u2UcUB=.LEH"1pSB"Zn@5Yr-@Or4Nc,`$csS3ZAR?_njPc\Nd%e)ZPLQc<SlrS`\;q7SZ"Y3N;a;6b\X%%kKe*]VLa&Y#BdEF3YmiIG5c5$NkU,]pX/:\]NTbHWRi'+Q>OKOgWfI[:[jJ`eCt6C(_$^+2Y"h1,ub4`"F1?!SO(!@D61?M>Ac@q%Y,571s$acJ\Y3oOAk=<5_jU.9d,E>]k:bL@Qo+E[Qe]LWid]LZ",&FpEjOQ(HI(=8$%c9cdB:e(cs7=NfuJhrpKh*qX3F*MTd8i>%re'XV#6J,N(L;4M4+Ge-?-nZ+?,Y\PI97uncuG^Ap@GCY]p<Oo$Q[ae\GjgQ^6c_E3_A*_;f@8BSjSV?4fJ)YTIV+S!StAJ;Qo]K%B\#]J]_uYG5M\L$(L5)tZ3YVeG!"[SmgC-Jkkb34H/;-5;fu5]*g?m8l&2*I\I$@5a1qL7CV2=S9YGY;ZhLj,Hj/e)R$IW'^fp-t%CA"$>5r0IXS\[9M>M"#8H?_>o[9e?R.+$b$O/H3mh<k\2#g%pM3\a%hpROh<m5So`6b4Cp!s,2E7"ahJs/3JHYpt3tUCNi4D&C]p%+#ZHnj*X@%*T6@Gma,[C4$"L;@,tS"VaXk[gYgZs]nFZi+X%$]m(%K.8cOe\qWE4r?#oA.:E=REoYB/+p+3eeI[4dB?@DHj9t?.b%pW-)8Fp"g,)qi8Sq#gK$lQ:qMr&&f)8d"LSPD*s/]`)!G)*GueHa)?sjE&8ZTM)E?mCd`1"?rJ_$aH1c4nAjO8*as(<UP;.47DY(%7,ALChQm><J_l#S=1E/^M*)aX!M'gNW7Th*(?fX?[6SZEC4X*Z<I<%5qI15H;XTN2DWo]Y\^lFUm35,pd=1P;c.oYm`4l]:#jh_S%hE`*`e_bq;Z0;r"M)"GrVc+Hi##1/!c+?7='Z&6>ZHPKLRm[$3h@IA-eR!*@J2dYN')UK-kgQ_9gS6AGl-jKM)2I0Hek!8jZbHF*%@)(#"BEu43]am$Pa?F\c56;@$\t+:[1m1-XFPbj":@GqepZhAh8.#X=fkRk&cM>or\<r6Cb?i>/B/&>n5Ym<fq-t;Z`";&2H;kf8%<k7OF+G5"#?'P6IUL6dT>s"hOS+is[?1k.V[<fUXd1-8&\(b--''q#OJPMhnK_=Z+-mS0R[obT$<c5i`(("+rek([k5D;@nXg?Ic%Iqjp'2-PeU3hD##Bs-e$D[u5SHP9qgQo;N7IhQ@(F@YX_d*9A/G"?>`,MGEE9D),J)KF">h9!t40/lXf[/Njr]p(icpK)W::]4;]%V$=&>8kl7)182B_1p'X^30aE88VcVT8!$p<7[M-l/K^3hMIe'8*n:KOZ2tN.JQ&5&i+b2f3_8O5h!#>%X1\_UA`.>=49XH=H>iHC%\$)"fBB"]kX4M7ooVa_7=9,Za*Lg:I#@=rTep58unNqo;TN_qjPm8HhUkb>]?GG@5OjYJR;ZEfF79$eq'h137c+krRIeu4l<"9KJ%@b[HM?pgLUV9>8_QVPDk(8H;n%j.MXB$0KZ;-f2]N7"j&HfZ/.4SUG$.LQl-pbtS]ZuJI_4II<L%p_4rgK[l:=C@ao]5#C@/IP1A%/61t?fTeKAMDc;[KQ^(u.jNdh9+<`,BOaaL]_-`B3)PqAKF@JYlf_]4Fa0!"6%6AolVru\23T1:HKaOPX6?C)p9*N>!'Tf9=M5AX%oiB)t/I1/rHfml5gA6S2/(KuSFq!4+BQDq)##<u_?bH-uha>a^e$%?qYV0baG+YhP_Np7-L9>*h;$D:#W(eJ;4!-Fu)3k(--=Z\o%(thCk197_oKYYN73#$u[E=>mf_I-q+$s(Bb?tC;d<ZDqr5-c2[6[QG,(D7L;I52$#.PC'.NK/l8Hi5c[Np_MOX,M\EauJ$(#@['-%HDT@+(ZM(gK[EjB$[q-AcrV7rIH>Iq=*C7?CoekAedNSV6=Nl!2`/^5,NoLG,5[9:p.r[nAD)[XUG5\j,P#N,PD'TO*X@hhE=c7[%6KIJtj`W$f9B'&)NJ5@"=BI,6KuMJ"==cJ:)"Jkc8RFWnA,J'd=Roq+(-9PS==h"eGVoCjDCc8<>S)giENiQNA+9imVqN#s\^?FV%l%eZ0)2M?+Qh?Xd&"Cfef(UA&A--JoDr\'f;QfN3HpQ32?Dg[B'[-O+8#`-6B2m/Adh=`o$9/M5B\\Y%D<A!@4pS'D$;Ep#Ef"o_%@h;M`+mI[58WaT[)Jurk).:Ai*239PpBY9]2M4I66Nd28Q-G^Cr#iMrDI`#74'Pa8D"J6F&iTY0B!^!]5Ji`*^;thYU=a.?@S.Yh%1L[^88+3L@`Z@Y%M\,QYF2_ApkfXrbBOf;%U"="TH\9'p]s"K!-F:M6/jeoFJKJL@m!jRn>!!.u*3i;CHAr]9"M&Y)Le!O[XGVX+%Y!s%MrW-JZ%nG?k=O/N8j"_j=ENCZ740Sd;SnrlXfZa7gd_-7]%-r;hBm6R:Wn-=8Enk?[R"f&!U>Y':kO1;8"ZlkKFLon/`b^,h%!UmtX#TgD/R,;-6L8':9hsU6]s'-_qE60-0r&A)2D]<Z@LLlsuU\K&A`@7Qg)#,X!W;^ZQrni_<:?Rt<JAeB=%S>H(&l?/('SRk4%DGjlR4rsrtY"u1]NdOIBrP<?aEmpue*SqZ[Tmmlgh/DB5Jmu2OW*ar_>EsBBd1i5tN5)^(OPoVdfRn"N9AFt8ltmbkjrS_,`6k;d%-kF>N:A104NO<ee39.5O"qmO;g`u\JJnMO$!,J+=bT7fDaW)5.#3f'\X#jL4@BUcbS')fo<Sn1hF!\NoSU"@=GL,,ho\5$ugT7<I%D>`#1_g^d^n5^M]'kUMh-!/jdmS.7[;OW5KqVnMo[?p/BS(`MGHAFtuibsM\*Xp<&fhYrbYF!`*b"&(QZh*!F+5c5DHbGtjHbXjt%Vil<e3DZR)g@FjtY'aa?k%hk^/pm*[N/(Tmg$V>[IU_8`Fn]s=^^Gue"dUp`6FJE/[I3;,hQbbk0b1X0f*e,Sod1<rpRWG%gdC'"%Wj&&NY5585V]4CUU'V=h=_2%=/[mq!]2%ZfYP6b!="Y4'cgR<E^1qsKpYLnOl)USqct\J,8aGnPCk0Mc)WoVs5.>i$2:mp(D6CKp%ZZN`C]$"!N>_ih)bPAR/duB<pVTdG-hE$"shIccpX`s//P2h$i(9f\Q(YO*[g,B@k)s*pf[A]YJ=&tNkg";_(Fe60Jh7h6"Hd>T>%CHYNOQ.;H(fgW<PoM<hKDN+7J^9Oj[hj],B?Xkgi[WnEc:AWIe5']30P9Luf:5cj:?]qD+QZ_1W?PZCpJWji.j8Gq6Ulf>o[l(eQ%lc[\Ihd61L8UaS#PgkTJV#@-tPBam=aj9)>dX<04)Mre6WlCW2\!2qphauu<0C&IX[or?m<%;F=p\Z@t7+&Bqr'J"3g\(lVHN,0(%hG5g'-f(EN>*P(SYC%_R5>\NPUi?(A!*1.aY28ZDnk-KVGFn):mqK:1KLn,9B=`J_G\kMW1hh?^RM="5:oPjSk[$nT9<LjMajt5d%B[YMho4RqM@+)`oVAC$/8CTLK7A\hLMkEWP()"f[:]?Pqbs(mb5O0,g8J-Y"e"12^45UFJU>McIS'BGX^nf)uQ/.5/1]L%sqg5;M%8uDs8r:W0Qps9g0>0<8jUf-1I\I^Ho2BVm4T4D5kU06-UASHY]mDaY(I4;j/?e4[o_)n#kgSL+ja-U)ih*"cIT-E@!b5%s=Jn(tp%>>e=Zb:r1HB@;EY8%U1i'f;m(GOMp6peZ-.MJ&W0e\>jQQ_6okd`KY<ks+FkGA?SBn+=J@d`]n3"M0ltHe%8>l^%o,@+***FSQiE%o:P[MTRQb4&6lRiNC7X4hCQ'!![k\Z4FaC79tE"6*-\mi-S6[>Om$prDen*OY;b:4\\LdT?MEUe6'Im3\%B[@CJqMUgU&=iq:Cu)%k@`[DT?k4]""4%gT<&b/-@J51;L7aij8OBgrR5VSR7>&;dauB]4)iVSoQ#**RM9'_qd$n$nr;4_n"ds;Hu=,r3M&a)-J%">B)&C@%dRbsGR-W0gU9TJ_Gm.!E/F=u13;6U@hH!NgQupA+.2qp+2^A1QL3q?tB5sD93nR_,kMk:_lr3^77OHC8bD/hj\CTtQn'&YEHX<._%(hYqdP$O7qLi"3WBk5q'q)IddKkjuePe8i0KiIcu3U&l6=0Ao=dYrON]l^s*YW%2Rbl*bRs.njOZ^X!_G6)rk;h)D'Decu`W]?Df%E4u%p8br=B?f^:arOL^p$2XKs3d?Pm"+Nb82n'Xn.lr7#eSLIJ9<%ogY.K/7%/H0j]DlHPIr0\\h$*eXQOZqieut[o2jBSc\%o2,%cgo7Wi3-j+nY,7B/*12sX6j1=nEXQFm!U\Zf<`#&jWNJ_j'_CblakCbp:g09]"YmbD(t\U?(O^"J#s\r[KD#mafU$bXC"+%]8]iL%Acof^IEJCp"+P`W^?>rR^J]md)3h];JR<o_.%0\B?X$lkSX6!V&ZEu6P8n&ghiAIok:Z8UC:eLh%/P*dG4G'9,oC*Lq=I7T*r,Dj%Z9'E=rL0<X(1O7.La<S-r:UKPF_Z3NFf/<EcMP6GfBi@"ldr2HrKXbg=*<m3#g,.>k-FNB/E/5dh3[<ka6+29S($+Rk.q+,f'P5X%Q?TC/!3r_W[s.FmI@7g\MV_eTQ+f;YWVLT'0tNh<oM;SI,Zg:Y%ni;8V.=*0'GIh+Q/bSaFtIoX41f\-E]Lc*>.^5/IZ+`p^Ieb8%^Tt39j4C)..(oRNT-l6#[-I!-P"n)Gg4F4VK-\1*bVHa"fdOKCT#uDL?$S&HZoXgi>?bp?41Q/\VXrr?ZF!okajjJ`;1.gtS9\XA%o^<S>4[IdW8,'t#G#I#6qp9d_%'(paHs-CldD2>(dB2(sk_Rs*k['?%VI.95"\)a1-T5<8qF/^K-Y7kBB_1_l<s;&u3ioE4Y^Z2G%6MCB!fJkmklfbN&o4e/sR348*$pBX>>6I`t^=#\^V:u1<.&j?\ZiTh)P*V;hp$c^;pZb?LU&+`%dFbV?Zj3^X5ilU+Z,[sECqB4d%*<QZ/4d+IgmUL>1nj&Li(0TEtTtG9p.KhA".NEAl>g)_%%J;RPk-m<D/Zn-j^BuQ2ImF`Nh#@-IK8o%)>+T`l5aF[fh-Z+I*5XFN%[&:r',0S0mY6u=n\b,";f)clKr-kCqT3?;0Ye&r9Z'9)Snl#$)pO8B#^lh^Mg6T-FH0ndq>Eec8M6%sV.H:/odph`i_F[g-SO";D%m:*:jb&Hf*ql.<XF$Zni:,eNCQEE'A<r<fsX7u9Kd`1MGEUL'>NB!cOYc2Q4T9V[NW:4.Ii4k?brad.F<NgfcZFd)/I-`c5U;+:G%P@$YW]j-+GY2`gVFI-ckWiC%g(s,N;U<W?'r&/KtdTlXS3SQ(FNJe6,k\9^:Ff2V!6*n@:V@AjQIJVnh/P"H*['IoqB0@%WIipk`%7>$j^.W(mTplXKOj?Ug`E,Hn5djj9m6u@Fhbc/)?;Te^?3gTM'f&H2$*4`^SikTJX5)WVO>TE*a0!?q64H,sN/*Vj[7aQ=6ep-QR%"#l2<\00NP\f7:/,2oO]HFo;Z:1J!U6<'X8flJ)/V%t3D#@+'M6?TX[bf8KV46HNb#t[mM;>c3TZn!0664WffkD\ts1t;=ULX$&0%82l.`.tE!fGpW'[+N\6dcX()L!B@U.AZiYTP%s2[UJ^`?\jA%q<Z*kJ&?3-F^OhJ[1G0$MLtHS!J,9-N!%i)YJe7_<LEBk7$\1k3%_)qe4V#uB\!RQUr?2.8RIOjm=\o&ohh3[J='J0irfs`(j?Y"YRllRmtbSS!kT78m@\BZSWh(VL)Zbkcd&e-,UNY-2A"\,;;Pj`Vm%TS(&/J&s&R2NNcVZ^P7l4f`mCI?C+Z&&`Wik9n`0=Dh..,Sq\i*r=??QTQZ'DI)_spe-K4@8Z?bM[ET"P$.8PQK7X<L;?Fg>>f*V%gL;<[.3SBHBZ0JIl]386[V2oip=kLjQY`(PW6bFU*5Rb:'[MsbIXCUqptjn[+(ODRn.os8Le"7q290s(-lI#K3I`T59"%7P`:Tsi%BY/pOo36uq(tZH*2Z-]B#H2JV;4]jH7RIdUMZY?.XeW')qg@^8CM`$GETq$6lKM)=Ou#lU\b1mH29Xd9B1>6opFMb$hb(XBBf$dp%)"FanqMgD$*JbQXB71YMnbKUaFQA7ql#;7P(&Kb!Kgsk#XB>54%r7m15%s\Ogbd^WZAXMTNcY#dTD#g_$e%9U;b4J;k?NreGtZ%W%)A#4i:at/,+$aOUq\Id%M2l,Y7#2O?merVMi8GfI4NTInnN8QO5oGN6?c/I??<B8`#q0(A$j*:C#<NDD.t)Z]6FlHf"nQN]1W\[+%%%Y4pODlYg`ZA5uC^?&(XM$9nTk*RTh+X^g0HrEK_uK?6]0as,aK+QWfWGe]&/1WG/E-E&&A+Q=S.<J\qI67U92f.,Sa\<=*VM/@%@nD]39,_#(p(nZU8b_&GQ:*::rehD`.fr@im0VTsVh?)/<.>n_0\%E?@pHmbgiT!V0%dC4bA$odG$TC]=#/H)rLfWA55rh]@h#%%%c_4<B.d&N?,#N>'*.&(hT_!6>*C9`M;'2/F"Mj*EiL"8s()Lu&H*ZN@6J.I+hRuHZGofA-;8>uOG&>h]A;fZ9!`*=1\g4ksLra:\%&&S"L)BcY6j.ON+bIN0GJX@GQ4r%s^*Tp]:T^ml5<G6PN8JI`9=.s%42F'M1!+I8.:B61W*7lQ:mc-3-#iCo.4Q;<m$I)Z$HfS)!%9rNJ3/>SRJn6$nq(9U%=\D:i:FnaX,NTW>#d+dA;)IJ16!&:AaD.8<hhid`J9VS_**=8[k,,0ufr'Z6.XZU,k5t\MhiKSF9$,'dL%3:G4Z3%uD1%0F]*a=,Vj\t#;DN/5*FdNHVeGRShg(XsjflgGDicB!*A2GA;R:A<D;isN:366\5"Q"\,!@HL\QU;7qH?^8RtF_]TP%<f"6W=/EqQ0bjtG=DV.Po6H*=61!FnBYnQDSV.!9-+ts[hZYXS@7^l5Pl%nG0$,F._kK9>D4if<T:^:shlNHh.M/raFl#<V5+p7"%VMdgNkh+^&i74C:n?u\=anb-!^5M0H^mL<SlW2j>OZsj"I<,Fo2h\^LVk!2P<l,ca78.J?[hliGfY+gV&NfqFYf2pG2=Mga%c`:6%RjYd3VhP?AE:bFl]u"`E0hZK_0oj48L2e;oLkrdZGXPCZSU3I<Nqq<k?G8q^Y4aO'U(:NT.e(s(l!OD-gr*c7`u;uARF)S/$0.`V%&o&p*)pq0T!W6QRicQGB-b#:.'HncI/Hjj!m]NgVJnadOmmd=-KYVS$(:B)D!\cgU"+(>^H!lUT(.(=PF:ItU)R9]$C"99AUmm#C%].lh`ptDg/^H\kuF<QB?1HEk[Emqkab*6j]eOs]EH3*@=kqjB8dS0^GW0PD32NETO/c`jU__F8H_$<Htr`Bqs/Ge>02qFr3l''N+%V_,[=h+Z@W!3OVEGjt;K&A'suV^JqT2%XSdkU:OCa#t.\#2U/L*F:ngK_t@bi*l/@A'hq/5OIFJ3&ZofSc?$T,Ih1#!,KJJC^iYH%<q3L9M>DKQ,N;T8KSddVN.$#MTfn'Ob@2/Tr)nLF*pZshKP2Q;NTuRsAO9gCVt;O8-,ohSjT(dhkf[&!3uQ@k/l4oep,B*dq<8hH%bV\sJ(g)@8ZGj_?q^hX?Es4_Mn00Y15I"ks[5[)J:+_B&99Ej)/ab>e=K`7<2ghHt+N*L#SW@F`88gr_DI78cdcB$:eDL5:l+[%u%]eSCB+FTOH\@&;.inua@,2:kl$e"^a+bqR73:;SNr.obcr9fJf])$.>Pg%s3)Jf9q;6OR1mXD`N5O_UWoR6fH4/OMWYRk^#j'rr=%E[A,g7HX#RDY-LubD<B+&M6s]WGGK`,)?DiL1-&D\)BQAOms_pjR1o`^W7Ut>NrcPl]Ie4UKj#`FrR.A28pQ<kmbE)RCh'I-%jf(%*CJ6MmaGgli[HX^`lm(AqJtu+PJ1^3N\b[MF68#ec_9IGQDO4<B&i:Mf16UMVt77bFQ-jiIUqSTi:N.W5J-Xbk6h2jLUI8;>%_if%2.Vg$8md%ThXf:Ph(%b;%hY6(\aniWYn64AJ9l?HWK@"7cTr8Q8i\11?sPh'.cjb/M+-a,e[GKW%eGt\Si><qFSEX5WtG;&)j2H6%27VgpW[,rp2gehjqt5k8]ff<"aNS^Z(Z,h<rG!9\H^QD^&Y-D$&D@L;a@Zf!\0!YHrIQ5)Hi;H/hj0$C3074Tq^h=9"@7UO>B@u=%J\5BsYT8S50!N"=Xj,Ecki/uFq/:-FA6IcAj,>)!@^K>_!TZ'nQrN9S>mW'#Yuq%-Ka0oq?&M(uX)EC_l1pkMm%jRDj1`=F7\YpY%s5<"0:E14bZFs\a1#[@nLrS9kCXPc'[XZ@W1s)P.X@+D3WeKHg?E+Pgdkq\@P1K&-mVOfcG;/`5IW_KqSj&?^Dc,8.cGa7P0ZOl^%]hj"3&dO"KGX%n$[+G_+_oPtc?&7\5MI79t-_A^7qq3NWG(XLJe>Pm.,-n^$.B0]<JT?".9&S]Z_KZ-jIcA/8o+AKQm`>5Z7'=t$%E*SE*%'Q!F*"Q&>(>dJK8'FIC&O!C\jjc*`/Obas1c!%l&-bXQq\Z\-!/US*7n%h63@'@\&8%UYoN23FE'[`hAKrDc7KCerU><#\%K.'opA-<X/<5g9>rL,BJ*a]$LOrn$s6R''mm-SK)WAp3Ke'C87LWI"m3m.?0Y:JHT&0'LRj6p[mL(mM0:1tn0]#%CMMSbMZ/ajmA%$M0Dded;RJ/D("Y=s!CL^#\h=rN.K=T_hsgamJck+fQkVmbu#pPY,C[fLJd]FK9rbH@E>`k(E?S'Sbq@b6?:Lpk[8I6R-ge^V(Ep%_,K*t,'ZStN/5NEL'D59Tr9h7-r<ftXn:`0I/Wp8"gdk-LN3anQHjgg**_bK_!%H5,3"=:>eI8dO3]+7$.-3F,0$pKFY7-kJB!FH%G+5U!6h6H%9G"<G*m#*6mhuNgYAR2-D"E+B7P#pK!%99,"2G>Q5)p"C/#I$&9]F]Vq-`C?mhrLl?JQ.NjF[28a8HDNi>?4prUJh+%?n@Fmk>^uArdc2C>9hqBS+?+cGVpAWI)P3)L$-:TqjF&n@b=V+.M*7<4Vg6tKFE:=Q/6_2K]Eu_Up4Ll^dWMXJjN,9Bb^B;K]n</%Ot<#<o\F^`fDu1K0J[oYB)M=3/dXTjbt[pq36f]hs246B&;c,Li?NrI"ck)V(af.IQ9*&iSBLL&kA[f/l+$(-)@tI?dCaF,nQX0-%?o^3a6Ej4!7#^h!`$NXZ)M48&d/`u52hWM"N[>=tDqDs^pgsd%Go&u(/.9+'&apGV!PjdI*XG#<%ee7&3cdsp3d?]VPX]<.8,XPR%r920N1hU@4I-_G0-B%1)a?MT6m7&=TX3`'Md?t@kfq%,1U?Es-Z&k%unOR>5^Pf>#A)Shpd2<E;&pbII?'-NdlK:@0F@cK_Zn\kW%f['#"kY6ab_UjcogP5N<h$"`0+XC#@Q:FJqIlsD\ZeZjX"jtI:hFYS`&9b8M,u:\5Z1<a_,'*ib+cI5\F$--<ZQI,[U$>^q88+S%%_.MYs0K`S#Y!p:GZ[_2U9]^\)P_^!OTF9tg^Vsq]:HDk'j\dUj6\epnj]A-hI'JS;0r=2RVJDnW!O2!sbZ;.hX2$F:b9-TrHQn0A%Opr8D[Pnm`r@kI4g9)VdiQFHF-R.>*%Q5*J;]H_?m1HWO`j)d(,=KBNI:5P60ON_hSBTt%o_h]q%]kU3eJ>V_iqTU1NkbIB)$p5k%6PCf%R[XT7a4I8Ga.$9X#0*jAnMZ'lp&pE>(Vehuj)oTi;[?7nkcjufKol0;4HhZ:0r$Fd`>OR\EYc*B5dY<H3$H0Q&1QtR[7hFm%S!Zt%-60\bd;Sl.g5CV;LSoY0g`NBj<qp]KW.Juap\ON$/AQ5k1)nuL4Q1bc&G7%ZL["+s!3]L<L^E'BG'3oqa#H=A9]ls)_r@qN%hjs8dh"p*u=S35Yi]iaCQ"bOVA-77(**rb72s7p@eL41W(G7dM;2!<SjdV:/`##ksC#t'nOkq/HiP[\k?5Z%6P/62#'@f__I?k,=%UN/XFY&KiU1(k;?\Vnj;F=Zi3o-dAMB=U/!.d/[$J!NSn$;]hf7USka-^P_]?68Vf]/!0:KeH6s/:03!3.-!DcZ4=!A4i7;0sJNd%AWZZ,Mu5tN)uEbRegQhRq/bL[ee-5K`%FIb4j1%Bn`)h3pYq,8*m\'<0CI:VP>TY`8C\pSG<`L::A*F5/,WQ^IJ3oNIRD?R(ic/L%P5&fggkds4mZZr4E.#E6jJQtPkL0'`*.IY&n8redr@35^f$>LB5Ubq4[=1a1Xu6^53BX/h.0P))UarZP7Y29h"JA2[0</%ec9?G:%mHenZ^9Cd<,[E]Z>p&+pMhN^CSaRctON1's+E7&epAZsT!Ia^aZXqO=*UPtO^?FpK1JRhX[C%LG?@8mZ03%<j8\KMVTL6Zi,t(EC%,LP2S&V'I*<5!=;eg;qIm4)$TM>g,@C0-g<9_kSnW7ocT')e(^eZL[XU\?N`U$BG,9XR^)X%YB]UA0F/eUEdtVdHCV[CAd"<shs2%3m1Kt^&1?nC=hIL%X.]&Wa029=mXn-$WXg]<.gOk0,1F09a]FUJ"][rXMIr7RVNY8>H$9OqUd[pdk"H]Y30ap(hGt+C*-*CNO/Fh%U$A;i\YUS!6Ihe2jF+9MhT6+)]>jI)l3nE<6jcqT'uMP&W&bnuaBjN-<==R543LS.qceq%T5UFgE.?''(97'/?soi"0qH?T!t]Kr%#pmb/]c\?1)EWB[G/=7OW(t48"GDTEUVa@8Cuks/cPFm^Gq)E^0n5c0S1Rp8+j@97FE$q53nSuPlq&<XSWp[fi9[(<7;7#?'YJ;d%_QsE3K[8amiRn:Kfg-1=:h^XUSBWNU:G]P52`NmlP0l8Jftoq1575^Pd&7+OH,RV,"bO(_><-\J[K)R#gl$E%[W'df+,+A)*25MS%4.(d@A&QaH7DDo?bj]Efecl:jO#Rs'nE_mTjTjbt^//q*)Q%O-U"o+(\N9]+Z[Z;4>pMO:JD%0,1//a[/J+Fh[jM#0dQKQLHa9a8%Nppic:^6_CNtIs8&=bnl<R_tZ/J)[`kLVY)Gd]kVG">q!Omm1<i,#=Cbs^OD'16T[#g1NPm'-@2&9]Vo8k0"#2.lKWCJ!=9G4P-=%mui(r`d\u"/JqXj_sm$^i,$$/2=.a=FrV4QWF+d.?9?mp8%60X[WnnMW7ookou)R%`e+P\/&k2'H"5FN%eI'":@2l`7J<pV4n35G%C1doedeco/Cd/DQ<#i:W9B4]C?u>O3Ys^4<J`o(N)U&!kkk2rrSaDoI;]($oN/W!fKhkKTS8e<;`"(Jmr5ZPg0clFUFik<V!a<)_%7#ZJ&7=QOk4;_PVN#80RL-pNJER>2M5DpAfqcs)+`4/?,K:bYm7m\2UV@t]PocX*jLiFJEk8S5"Xb^sI;HOaJBTkiC:KkYR]SQ+*%&=Z_=3;=js*]kYd1%)K`r_CDADe/gr,K@]D&c<n`g_lCN>7onjHq1(N0g8Y+_20DV"06!-2.CqoECjRNj($"Rr?,S)irf<3&`Zg*%0nG/NM"p<5K8=LPNr</"pc(.s-]])TW*)@HLiJps<"ZO@:)Yi.M0`s/:Hr<98hj?i&`YcC((X+Y4(=`DqLVh@BgmsomNOA;YQ]]W%N?@mU8]8-RmUFl^j3tn#Y:\LuHZ73UZnWfF,@cQ_P=CMCF*@LW`-?6uenIU4oB<(uiV[I)7#_-kf8Y$nGXS4_p!9$8<jc0TUu_gn%j$@g5VAh6R)TTK&j5\.'40eta(4DQV`&Q9)p@FWBDT"N6Ons.VXjIa@D@5ts&`]!m9uI_i`]8a8k<uA6:(T-D@;`"u,K<5e8>[4Y%Njs'M1]Am:j7laeXoL6%LiKHsa;D=:a,UuQY`)7!@baIGqLs`FI/8EQ`7'S\[m`H<.]b"R(nW@siOBK[@nGYn7u[?+M"l[[E?$]T%1X4WE%]ph4(lq)`9AE<%@N=cha,L%)`43!^AEjceQ=WHdXZ/Vb3;2YG/9*nVLiIn<Zg7JV7?!"Hg.s/,I'!6U'1[udj<#<]1%'bE%Lkp&,%>PkW^D.c,`J1/"s(g$@<^2,eDafFcr?BYHM[giBQYAmD>Q#bnhhquRJo/2d^8DbfDT.?7;$5:.%_!5:W5:[Yk]!fJqO^64%]-?Qj.69RJZ@4:NiDu=(iq\'U3o#T%BCF#^7#05=U%pE2&Grm!E/QHH;UVa:LBmXj:H(>i`P_UOFLYPQoK1IZe#S]l.QVs/Gd.RL%_ad`\SQ^-F'cT>f:Tn_Z\@#W"WYn`m%eoMWre9QT?]XWS7u(;\m#X2b+%:t^8P)j=%VN$;MmN24k\pnHO\gFo4?D72_ttt3iF;dr%5E-/^HP-0^FLX9pq)>%c8,4Q.0025>_E4=PE%<h/`7suUdG[A&Rr3>X'cSdb3BV"tG_#PHPbZ-u\"6'1r(;(@"_^tDKrIOs>L#d%%kjLrq#OZ0'dG\,B\/WJc)''dB_b;jIh!YuIIWY@@F.$KZ\.orHh/`lPh>MtI)5D<J#`8#jdG`YbqsaM^M[m3+)f4NK'ce>2`AsLQ%E/-"<CXM*-Gnm.LUA?\ZPW$2Uh72:$Cib\o7%&s$WubN]2fn^KIK@g5^q9Vd0WdTH_5nR+C[]I*U&BBG<<.JH?9iS^.,DugW0Fji%G%\c8/!SKbYq\U+K-2M0mii`\hTW`EjQpo'/Pq*BCJ!0ApaY?b'OEFUOB;\`o``3HbTKf=o]fW0"BjN3$sg@E]4ejT!7)0;p%[sj%:)uI3O/*i@l0g7fH9n)#ThA/\E>@WK-O_SWnr#s6:8Dt?bQNrlk7NT$U3&f`7E;@N&up%9$rf9Jp4Ef<NMWm49o,$U3*Akr;3CN8%/n$sp!R;e*89>c<'0\SIm7mWceDVDK^_)U]JH-,>@3BeXbW/?6J1q?6YD:45'QuYnUlWQ0s'nI`>@PG8MF9@Yl!R^cI]#D]=5_KU%X8X,6\"Wnt&tY"E=m33Rn,61@KbjS"dp#02oTX*d*at,uTDOW.-2G&sqdjLWJ5`D<am$*$@X3Q1ZljVlLZMCDG17,jQIrkhj8u\]%h;\gT]_uuWM;@JtG6XF+N[]+rXJ0,eFe[3/l9+j19osAkG^Kbb5_s9tV?4#*(,,AK8*XRb-ShraT<P8dpibD.I)g]IN="S)Z5S_2%nq8an&@sLR%N$'J5bgEX@0&])I4js+)5k;',TPkYM2&t`MnQZr?X-*LjFaq+>MV&[U'M$1B=HK)iLQpqDY[9X_*^UE'O0e[%7G3:%$8]W&:Es'HM->+0iCU@ji2H=Vl/C:)YHQj<CWS5S`/67/NT!!Kf`mlbTLT,RO&-[;pd8\brae/F*Ra^pCfoYR75@5U9A>7g@30[3%O_Jq^;1T=-@oHIWamG`DQtp%<alKm,oLoTSD\8,DJ_"*<6,#V']f44<&HL561IA@G/*W3UpY\Hu@lKt+Z)Nc4%h6KaR8A9Ol'!iF%9ID_5_QTB5oV_-c7'26bVMaBcVT2!>X[F)hJIkYahM6!['d3X0Eni@/Beml\J`+$NkU\4HT<]Y-TqBWHG:tmbV90\o;(Ph]<nM/A%`8@QV\:ZZ!QgZ*-54Zs#q6EHp@^G:P+"(b.E`)CmpqePP:SN:,X'Z0QlOtShncP1b*^r:.WF.GS(bs,0iJ1oQUl6_JmI(6BbI?'/%*'u4\TB3!>dEhA#mn7ro:.2/IpFHR1+[N"ZHLF7nAK:GJR=`]f^_Z\rHVZl5GdfB)Dd>M5RX@3)B,SRidBbrh/=Ii!IH7^s(64r=%-?of@Q:KK,TAHp@d3sV"FY3)c7VfXP&^=S,Eq!E'_OkDuaAkl*HL6DA<h>cCiUQ6V[,:i6hNZpre?WaSM5\=T3$Q#LrPMTm:.bA$%$q1FB0bAL\22FNIF8.Ntna#.X?R16Z8*fn14%eg?Yn\E!/W#C"rSFmH+Yk8*@00=ZN!a:u$qn+goY?Flj>=CHZ!,P=8(#X1km(tB%HXD9GM6d`Qcunjp=fgESL+mu!@X/$H/RR,(#nejMn,C"VSpq_odX&:9hm02`#<uG=rK!'4@!!?_l9[J,fB^pUi-YSAo>(0H7NJLK%"?71#ns,2L/)@AJ46^9sGiF#On5Pff?'Fuj^<W;W.uS&!\5^q8\bBu8:*8@W'_sa6.ERI[Vmjb'rU&,"DKR;2=qi=&ZV8i8Q*[Bt%kOl\mrb3D?mrl5Q4'0jWhjKgBLeJuO!,p\q(1>)/hWEAa&E9GqN;2c!0RoS&STS8A;QcH<fCIJ$I&Y^rqWZ[uO5B\%4ITGIgn#e?%8Stm8H+;6>Q6XeRK=YKolom$abfq1=@^G=9`Q$^3Mj@PV]UdA;^Y5$nV>=g`Y$DgX?hLU+nRM%RmI^"[IVG7K:C#c9QZDiqrUTQm%dCe>n3#UScm`1W#?aHf<5PN8aB<BVIk'JB-?%(?EoV.\q9>+Y@@<SePmqbCgL!S#r6a:sDC9F-ZmsHdqMCIZS@QQ/YD9_a"];a6F%b4GVSXHGSZY&7:j4fKRkmRW&4gOcdsh`6tqcV?]O]uFs&2uMGse?ZirG$8$E'[9VRErKPTLQJ;04lt^MEUf*`mq.V::&TGS#B-B.%?<s6^e8)*K#oA!e*6:]@U:r&m@Z@6F]@p61@JYY2\gaJgFM>4!5>Xp:qblSR_B6cl=hXaG?MNsU[C+ISFS>G#GVoUl_mf;mQ,Vrm%Bu/G<Atl-FrM-3ubJS2I>WgE\Xtm?JX,Y7S"NXrPDK!I3@<)/#k4;5%GI5#qMlU@FT1eu!rO(8W31?1uo;DDkrk)=Y*O^.[p/9`0%/XIe+dE%O?r0l#?2bQ[(%=WY@G`LX7;V&DnOXRgWcR7<8/h,&]<q]HR]16MaIn?EA\93c%)"ej&%JQ.N_Jj\co?SH<]=<..c`Who%hT[[nbB&d,iX#P9S;jE[V:kX`iX6aTc>:.Ar\V5j>rMd(an3R&do*n(D<c@^rAGhLE97Q+?^p_TdO1d'\'&Gdo37:cpu)*2=7>h5%d]H9LO*5[C%;iL>2D[G(pLc\GbVmT_Z6],#(3>bIf@.+3f'TR$Dse*3kIW`2hs)/2s%mu(W3&Y^bBu.q3dWalg%;M]fBp`r<q16$%X01QbebPKDc(cq6m>m;5=D3k^iF%,<2dbl^i^WN=P*]W"l-&A?0R^ZEgn[$&occ)i$ekQ!qfjc:QMm"sMgl0/[W^27/lTE^_Huk*%[.*d8ekKN5*Ya:qCYQCDkoS9!QnmMKr:OoF9:P=b[>=@]elHUjGaW9SQf9^O24S24oC\Z3B$Sj5>"0O64r0GGDfY8/rcj/Hs-nn-%W]#BImW7jC[sFp^f1`u9fH)l=rHt[V;^\W&8&0ae]Qf*9nY8GMjMiUlY$D_KYHc,XD:!\[TsNHY6OT;fhB0CR.qi"..a[7OiTf93%E>J-1Y0?'hNt6@)p&)C2SE2&?34U)H]O/b2j,Y'8foBJT?tXd%c$mYCCBsIs;;F9G\GL3"F(k(qGr<&H*>XqO%M)L9RGhZDn8N<n%C>8Y_m_:L^fBmK3T/+'?UJ9>%X=i4Zp?+/Ync$qZ]l,I7k,\)\]6Gg4(US]p+ohM*.]gS><jhbQh.==3[M="&nl.o=B%g@0A?@TX%F`Oa<nDL8N\HoL.[cQ@%[mhO-Hr(@uh%pHE-&-X])`X)Xf<;kUB&aEtX8JZ8ct]oY[LF6Am!!9(h_'9ui)<!5np%n#)]"_N1>LbX%M:jm6[sn%=_hX'CZ1li36Mc*'rW@")5KY"[obZ#&\,@j,C\;:/gUmF(n#I^Xm[K"hh$qeFEr;(A:9Al'c^/gs<9efhn(5%)TIps8%kP+id"pW)PGBAEQXinT16*["Fb@^0`a+pu[Sf^.l,CI,4QfDk"g3rL;YOGFs\Bc0R=&3o+S_ai">`$_K`QZB?q9A(!Y`o=0I6r-"%/goV\0F?d1[[2clg\t5t\QjB;V/fs]4/6S=>kuOG2BE(VI.lpWZQuY25j,GbJ4;_=_gT)3H[0qoIQl%qj?DSHQ*d7Ll\4-meJ\LY%r[94Jc*UW2Ib\c]AZE4nh>Vl&n9/lF7a0AI$<J^@^5O_8A5BYg=\:9G`I?tIr9QICD%C";\JX^pVaS7>IL!ODn[c00h<ekH([?OF%_!uh/>J"1Qc+TbD?\&Ji(\2Tb+h(MOL)iCpEuX5C`RID)ko-ZS\X]_pG?#!^=k1I?*q>O&V)Tm9Y2,n(NBOb/%8:s'N7ol#b=r)!%Xu+_*/9_>kG+;,3fh_R6l=GO,+mN=BJp5PjY.%?_o_%5+)t!bA-JcCiDiQTtkg`],j.ehsQ@*/Wb)C^*q%hFtR`0^@QKU9jO&tP+%<k5HBs1"+](iE!;IV^o?N>LUqr?*cB98KH8De6W0H/+JK5Q/]*Y4>/"0LWr:f@jN@H\2hH;"?AC^PaE5?f*VGb4[B53Y%GuiCbcO%>eaB0ZHmS#[H/2:Su[-YpQt3Xcfra<fa="VfM@4_g7QE5\XYL#bX83oJ9l6To<m3)D]u8,p2Za/^SiXW=!so<"mZ#UrV4$O7Jq7R%gR!Oefp(HO1sI1qHG-PlfkK8Tc3ED0Aj$lG'=mG5hg$lf'o,GJDh-A-%rCF@KrJX4*jLY";JNJ3W/)Jn^=h6XXQ3F,Uq29ZC[5YP%UYjlr5F`_TL?6i$qI+`[?nP^6ZHl&4#FMXADrPgcKt!77SZ3U?l#l<,!Y9o)1UL\(R'/\ij!X?u]j4i*\<RL_K1!QX,SF3h!VcL!%?Sm2;H5CeubHJ'^n(RK-b$i!sh`JdT2W#$'5dEA5\gN#AUfAAB&f#NNhcDd%%*lhGmf$K-Za&_;X36<XITJ7^Yn_a=FKD!<L=t7)%:L=UC_t<IdbeV;TgE<sWZsL,ST(8/cQ.LZUVo1/qK$V/@e]c]cBc0Io614\_md"9[@XfEGp8;+c#P;;(55MUE!7R(o"N,;>J`tBO%CE##in/X?MWM$_@[IGu4W;"^P3oBBp`4k"[V_=LpQ$i8jgI-Eb3Y#(GnABo3_qG2:qKm9#95me&mF^f@!s8aG(X%8('PSTR[,q7Q%FV9\*T.AuD1#:C/XeLo\)TuecdO/L[jutTk<,R8K8,``+"m`L.J;^u1q.]e'>5]:=0a_=2:ZsTF#r"ENUQrk'1do#mj7TDioMu(h%:%e2L@Vb?SpJf59Bre[DF8'/0[]mF>grNPLO,*P]i]?:A1XXutjt2.%j\p$T".qcab(p%6%M7rQ2JY2YeYg[gFf^_)Ia@[8]i^Zf%(Lj41C3<%]3QSp_AQEjE\)B^5Fn")>9,414rkf^".*juBK&Aam+&@\#41=Z58ES=l6E[jgSj0a;)/X=TfIjfp2eMe^q9;gkgcUV'%o3LZ)NoOVO8@MK4/EbF$RF@(%*+?[Tr%>^ff8nb4jc5BChQl]pX'_6"\VrV!GlL#VSjXQ77U))F@)ShaQX$]U$;W#kq:3fX#Io>'%=O34Kr6[D6VfY#MH\mAEVYJNK6[(9XKV%YY"[jS2e\0JsQ^KiaFW6.!8M-B\HF&YHOjJO`G9LOdX_sY6?&Ph6W7IeODgMSbgcXRt%hN)6,n^_)99Nb&4XJAtmk^g@5/&^jKLtBbgG;)rehNp'TlZ&"Z,\u5mq0K*-%VpF%\_07;r0Z=;:=&CrD6;?'37Shr&BoW>_\7rZ%":E%YjR\XQH+/B568DkY(O#CY4+0qcC`5b"^%.TS6[.6e$/?uN@^`roM*@A2aOuqlmsO;m4.T(c5.7\[!9Z[Nd>r>bCurOi^<Dj:%R?UV&BRlmZ#-m+tIa9]2?p@VN?*>:JFn9*$q?LX;HW)]EUQ$$%#'Z6'B?WV4JR[RiePQ^tVA@@q=$'\\ZJ&unV;NsiR!Z=*d5g*&%?f(BO6q340<$Rn06kfi=/NijP5X*dXhq*/bg"O^<$'fRUnnTANR7Mk\7o69X$b?$+o)tCdA%D:*_mN3QpO*g"fm'dYB(PBOj/hb@%eEObsJR+m?bu\b,OgmhXra?7q;bCL>#\7(+S9O_t-%/fVGQ<Kt]^VeoP6Aq72Hpu\Ec<q\m18i8-CKeLfRDYXSt2NuW71hhk/](u%8mLbIojB[cpa4a9r)nrpmq;-Q*dd+AoiVp]$X$H3IlUt8c0J<@W%jW<>&<.D+e%b#'ZhDA)@.^'Nl"^?3PE`,V>B]l*;i*OosAdo%`0o)>FK'EY;92ckZ:*I=!*;q;2RYEB^6;m1PS^2@cLl6KX"3cZoiB1b^aZ*5qs@%0<#\3Frq6ugf@UYJ.7\Tt.647/mF.9dhV#l^%`]4'7+e>Z[n,P^KJ9k>3F%qPc142a:ra6c5I#id*FAh5\g]At"0H@/jca`0D<job.TV>$PDHFu*8a)VF]srNN6m4q^'3Wi\b3"m0%HMO*gie>*AJsQ&g>#HX2#Dp5b60?GTnWsrH6<ML3kb9D/&u*M././JLZ15pJ^\_ICC!=1"/l+/L\h@Q'5J(rT+U<]KhauLTr4i^m%JsbR@mK5*&F*Z7u7i.3CF.^p0N^ViRGMr+oKTC<SIV54#d.oSJ8C&pL!BRM_b.X,`?,"+Ta%ei1WSXuInVP?rHVVrP:\-m*ruCkI%<6$LI!i`VnJ9U:X.mU#k7J7`[Lea:C^W.`%9\pkrg3Pu&=K.D0c2p;YT.>:[e0aT([PL#(@n"u6F'Yo]GV6)MFaa,m]WV4DrIYM"%'OG>-$[^b@(q09%@bAO>?Rc%>MKDshN#>S]HESKWZ6t![Z]r9Gm&kpIm1M.MdQHObGAhNj=3jOmpRV6dFGH.mM7WHHBQ+%imJmY*%45BJt*JkC=[m&FH[@>SoPiKlhm-!ZO4B%0u[c=p3c/ZE[S*96=SM7`_IVpf]\(o'CNSXok\/7]q'_,Z<411ufgZjqumUM'(::@Lt%gRfc'H\mo4CMfHN`LA.,(Tn_7XC!i'\_b@R@r*2>gfJ@J3(TDE982/npU>NmAbHc826htu>jX9gT8d3a^EtQ?bK!L;GPL>_ce9Em%0PaI>!dWe=(%#Oihq&83WYRsG5BHC=o3jH,,\$.d,h$!Oj:7Z'YEh<0[+!g,gBT7dI.<WK=7K(Ikf9VUE8/JkCUI:@lK0^RE:!)`%6LhIk@'*<"rHZ$Enf3"`NFNuh-*rk[hbP*sfM!<$l"'2P)gE4mD1T)A@N[//&RsO3>DAVpA[)u(/of_`gY^aG\*7>0ee[uZ?p*@j%',]h=);?n(7D:<QEmhg;JkboG+IPtZiUfntEReqm3OhAU]t.m0G>a=Yi\7.([8gZ<_'TTPr$e4E];fbDF(t&"#MJt&d4;d:$Se-J%=5A6aYl8BB4_8Le?a0aC38Q6^>A<L#[`,@j-^j+,[7cV_8N`+`:#1<rn3D)[q<o\JoD%8pM_Od>%L6?L6,ZO`&/H.ciT"A7Ygo2O%$e-i`%R+0-+%<7A)FXat"YjZF<`1XR%W3.->3cEAV*^,)c6)]IKjD?o'4riDH@)"3j,<Pt/=g3R$C1PLCMua9ZC>XP2rn_*6OoEs%\O@m4q,5dFr=(BeKg*)&[<ulPmTarfalolVI<7)K\YW)6/,ae2#+)HEjk]i`qYBqFS(PI/TjU5QfNRRl?bkUjP5..A?-q^@YNLV)%Qm#rS0W$Pg:3ZT`1;.)%%D)GKr?ntXq5nqps'Fi_g3h+D40asElkW4hb/Qg#AOt/h[+[nHTm!e4$kB4/O8(1Qc-'dLc&B@&D+Z_p%f`$`[Tq)mG`Md5_Tu0q,rOi]ZF\&V;Su`?*$V)ce!gA5#jHt,]8J_WrbMg;>;>)4qp9hAT3@H'9guq5%a['X7^An+=HpFS6>#\)1%G:`VO]XZcjF^JTGZODR&0V_l\'916n$>,c$o>s[G&r,/4/TV<ZPUr"G>/2grm%u8sX6fM+VJ46nr!(H_D(G$k[W\t#GZ)&t1m?<S%p=Ik7esK>KS@5\Y7QJ--D9Tuk85u`+%qCb8?QQ#hNr)>7PM9USdIr!P313o6']T]7HWuIQ8ZRYu.XfSQ)S,^e`EYl0RO&#<k#Gr=%=Q/)V:[;9M$*gS`T:d#Q3T&F4Qk$USm7R3!H9mA+.NQjdd\VZ_#r*uoFYsEf<@Km,TP*85*hOP*N_0[np#Vn2kkQsgqq`90dD?RX%NI/I`2P$_p-Z/CMgj=@H":s;tHNkF#p+1EZ_%MktS.]h2LikdQD2rs,IrdE`&pr,&KsuIB)Zo+aG.tf:Y[t.S.-Hr_KtWhn*]A>;%F$Z",U8Qp-^=SFRiqq+iU4EP"bc\$38;Z)#!r/NOi>!mOb?:]Ba>@,/3Q.NU/o^IJPGo$&mhTs4)jt=7o)I/3VX%D"fs^AbE"AnD%Ko4(;)d?\N2MIHFh]\_g+Gt3.5Ngb8(h:i/&as2&]*c<ZT<l"BORZppAAi:Rbi\i2]/Y;Ns4EC$\P^)E3/%*V4-b%H^\jUm8lW'j%qE%Kdo_hlW?i=q_h8oZ[T8nE4F?f(oOr]8G";EirQ3`#Cq\3:q0?+((pr*>.@*I)WQ($Ijp=4)qIchg7j.G5CTqOpS_jf[=kqdP`%iWg:g5%@4RTBE@^^]).nQW!hAf6&FjoCMq8b;XosoB5YTf7bF8jgFgBn[3/irH@FrA,k5%prA/^O%4M/Kjd*`+M"3?hu<-A]9hE&%l)kt0l/L`iIXM%k)jbHUq:8cS_Ciqppu<`O]CObcYM:"bcbF]"q<M,I_/k&#e:eEn0&FN5].V,=gH!:PcTaG],`_D5?@)R&Vgjr[%2a%.$\kfFg:IaEdoDcLEVRDf:[bU0$kMNn$qrYSAhn/R!X^BAF5P*m&k:aR.rJ/.8GPCC9Rl<RAq1&CRI.tYZ4#_Zbj6R.dT>11#%nPJO=7btTOh9Bs8P6Zj^2niWrJ1Do05<KfH4NdZ)h"_AU_"\`bhc*q[*RU5:`cqIApN;q)B;r(>s5gZC+8tj!V/P4:pYs0`^\BHh%I+<_r/jJm^r@=4q?iT+Yql[]*biUqWjT".8rdtH$q:ghjIsq4=$ifM,^X?G<l/SP>G<\_S3:;4bRCiCMePAE>qXVUlDk-M`G0!A3%:&4SaBGQ^EYo`#6oB#W3o9ZV5f.ZW,q82kJIdm'Mf?6*ks,YHls7Pt*%-TsN)ZKWnm9^n>"7rpj)h7Y5ea)=^?U'$eZN>ZV2>C/J%_q+LS`-h*o(O4HAHl[_9LEBj])XHR@G.@4nja[6pV164(o:P+bh!]=:+4l67E9B@C>MdaM(C;;\Z4;/$mO#g$+EF*cV%1T6lbeh!%r43R3j5&fMk98FHk;TRc?g>tY)$TaHIBW:fF'hP+'7>$fe@%'CjYJLTKn&p]T0I9j@"3RndM$Sic@;7cIf7F.lOT%'47nD:HL:DV%T3h?emd%d0q!@EQLV!3)oJjFR:%u,OZZ4s\NMECbV,OHX(aVYTiNo<2^AR!G$cb3`J*4]S4dYQ7m/>C<T/09WnCI8V?PNUJ^@]Ha%rV?^?rm8X"l1D$kmF[tNs1E[G`YV-Da;nR"r6As$DeIOjDY#RD?Uiu-m8%.)oE-W,`ID.(IIiW:E9H,n^8m#phnR]#O(oO3:J%Y]%DNS9&A6=KPB?&#$nuq$a/)P3"==g[A4rg`an)l@Z]63.JHb>:20#)E!ZcDIZQ]C:,mk8eC[jPP[ocIO(V[l!:)uk>g]ZXtK$,o.h%\25C6V?t+2YMHj=or4kH]p(a-pCB(Z2_G^*AZlN+iL,aV]6`n):YqQ_k:I,FII=rkZtID1`sK?Q'H_]aVrKdY<?D%+MWVa20E/l4%Y@%+GF$G,$8g)fVk'MJqF:btUA\<&Q?BK*LcTVa:I-'/Lq^!?Ymk=_1m(]\rU`00>l1M]2ji/fX4u(pnr$Nj5Bdi4i5Pt*h@L8)J%rI"%H?asH^T^cpqps,/"ErWh%o0L^aM_AH:ipGcmY?nm3_[V9[]m[cj@1ZUf_Rkl$J*['*,N%VCo9[o(9CHc7BE%=;Y>_?/M-RcB%rQR8c]^Xp]p]">JnhAtYpine/#Bp,CcX+22oYWI$hmr:U2*BLf$t!*Xad93H)T3?G3-Tc9pQn!`#S'd%:R"P`Uiu^mTE"l:S&0D2%\EtNu[(Ps<HMaF`l2L.pNuAq)Ss4a(M;MZdp;7^8a[PmGn'5p3L6!LRCnACVN8.M7]!?6o#4(),ru&*Y?<7^Cm,m,GA*h@AJ,Sf5%nJ[JO7;'uX4$="3^;mHjocoM$g$ZS"jid=pR7U2%Kl;9r^kcF:N.6-gJJH4LAjG)>lH:so&4uR+DpCOKGAU6]&)6LC%t9/bq@mbg%n+*ZC(fh9PI=ROY+,>aMonaK'IdkU/6ePe\F#%TbI['*qQ-:CG&)Y$\T[oIth$\]pp"7_H]q$3kmeM?]K^eQUO8\*ZHYGs=^P[Mc%o<Io%rVCI1_lF&,s6d/`Dgh3QA'b)H`4b\HhYNBT$3G/mY2rZ-@V_.qUn]EgIi))WiqKohqr-go+"hrGq-3jH[m*&qSVEC%hd9qj%ZNJP?hFe8fd*_gC@or[*b>[ki8+N:E$sas`^q#FT%6kkIaKAclrohY[09"sQ^@D11-_n;6Dr/5=5N=)YgMlD@:Tn("p?9,XFK=I2%I&Q>feX=#Cd;'Z8IHf0i_rH"'K#OOVHV+AJ??ti7(N)D5b,9Fq#PQ(dk$iad+#_*-%)[Snjf^jg&%[DXaigl9HK!V:^V'Eqh6G>L%'9WqE?TON+k3lXRnA9,$s6tp]6+HU0+%MKNII$e=cbd<*Hgu`Ls7+<uDp#7BGi_<@d`Xkp,@-"d.6kXf\u3Qtr*PToCSt%%Is:#/%-boQPUi[[LFP/E,Sj'X<H9\$OmH'DD5JH'm'0gtrjlrtOs"O*3#JXXAm,fBcRF_<8aU9c`T5Gf?k.,tj3M,Eq(GT&//a)??0,-4\%L.)a7Kbpn!qrQ7ehn8X$V-=bNpu]`.ms[<7$B7inqXHMJHuS?Dj1ei138/?.T"]ccZ$.I$rA+DP^@ZF@)KGS^&BOb:Q1H)Fs8;S$%k`IgTmr',n`@,KY07J!$V:Uchn7++d%'+j5(P]tXiKrS/[m'TIb`fCj+KjU*7_U.4$qKa[X&"4kNu7u5>^bl%GQ+C(0>>8o)#!gf%RudMo*dd+jKo\EBj8.:VmG47p$@?ppdgu697r32q$)oM(G]ifZO2$a:r#LhG,`-oD8Ul!ZWu6TaiG$,<YV$LJo^rH=I!Oi,hr@X6%K`-2/e:kYrQb)_:mYh$hC`(l-^AFhu;BPiJihc9dnZg.63;<<A=7K\2P^DGKo1*u>qe#qPpV2.>[hEZeo(PA)%6JRm`uffme^sfm%9g:aR"8Sk"@ID92s1\%?DgM$Fr;8q>e@rZ0`hhkUqQ#^hf:RA;:Rlb([:_-7*L4s(bGROfbQ.TsO/_N6XCD$$rr(.&_`>:*P=1)K%Lp(IN;_NUf)2:&%d!j^HW]0OsM^P7@f%;cSb339hr\XPL(S83an_H:AcdSa1rjAqYE'rf9FUr*@)crX1n;Z>EZlS;lHT9lrM<qaA%4A/t:4pXjZk3Bq3rF83E>l&4!at;lT0Q6%2B<pKOGQ4EofccRRIm88I^H.SWnuY,@-AK;8\&EJPoT<P!lj(LJ5Oss3!sdhXSfbQ7%+V>:cIIu7da'X2R7/5+i>5l\FU:l-Lk4Thq&#.YsH;+=bkdB164\GLd6_YdObM\LM-Qa+)o&%D9^$=MQrNo'UoAkB8lgeCP]'La@%p4mtQSNe/Ur+8))Os(o1r8scdIkHc\I.*[K,k@RcUD&"SbA[BXZ'u8^fK1sbMrCJEm=,euFkT#D/Y_R<d+J@ZVX'of?-pZOl$D=D%q>^KSQKQm"cPG'?%hE;6:!B-S@Xj_23F#H@anGYAMsAK@Keo9)WMdGQ_ghAgEr)7i%;NNubgh45Zo@t89'X%O:]0F5Yf0C&J(W(r%s!T]#(Eo1Gj`\=V,-(Cu]A35RTQ5kKhbO"#MfA3h4@BO(qLuT*_g`I$b;W$!IJDmZMsl/hfH6Hs2fJX_h(1Q(D]_4D'hS#7m#3T!%f"VD\r-@0!,A6u$"7/7qqg[\.Ijkp,(O?%ASFqBoao=Z`s0IcTp!3d6^WQG'jK*ia0)]A<s!)1TmpRLQc23"OXFGuDs&IqU,A6s"%#k'G<rZ=/d+3`8Bk5@OAW*0-[(]2Cgs$tB2+*[PH]`2Ud2<u>m-%D?Ws2\@Cj'DXFn,JNVro*>GVo8l>o;mFOHi>kjs,jYea1M7l%hZ"g5rNDA=J!0R+aBAO6l.<TJ;cN(Khg"NV<?6fp*X#LRr@q@-]rTJLHhu<<L?"=jKTpo9^^GR9Qob9,jYq(ir6`)rL6T*(n"9XU%+"PQ8aL9,R9lF>5m(4Wp+I,('eM!rdL>H]DroU\hQ=#.@f&Q3]28^cTStn@]k+-Y=n6g@ia7h6Qpr0@nq7H-KncJ9/n\e,0QSXVF%h:60;H11_np4+@^Agi8'T>#F1fr%$!+8aZj^EWOOmL'<kIQ^qbmdk)cZ]sp-Gk9(a^L)9Opr>&Iq2=[+qj!**b`aOm%8-?6Q17<2%Np/cX?dFjAIcij8_X+05Y?Z?jSk<ZXMfA[P@otoZ+("^&r%?R596.#hId6)lk>B=jXBYRd*JKH3$^ZK3GRlEX+$XuKbI;r5Pb0T&%p4s!oM]f5^n9b;F]KX)Xo?&H\*0[UYTKg/3op]`@j)Ecps7+O>IpMhTks3FLLP#LB?iST+]ll4@Q03V+HLC\('p@Xm`L6Lb^HSu@%1lG.ValRI@odVlJF3!5]07S'=kl1%C%.3Z&IJX7nro+/aT";lHd*(>HoC[A$gqPHo'B5Df03idO8C1#e^+-SQ><Hc,PDkR;^$rjb%mJX)PTDn7arP!FTU2f0PEEkrAmf't&cFc-&d2UqlIH?gap/nUV:Hge#pM^%N+6?)NaBr;cq89=AY$M(B2t*=-BB=Wup`KG&g<]WB%cA%k0*uX:MDpOs6[:fHeB<V8Sk/jg!^Nf4.bI;BeEU3$GfC/[qZS)=TjK32>^2`u8$YSSTYK+%(Sio$(`dL"Q*rkjh!nb4.:\aT#%GP:%ks.B5X1JVjNrqO7gO#P+/r%t)HI5[XElg3eA]!L;Q](aK4`sB6jj&'q^T=o<CV;Be\f?Tn5qrtH5bfed=MfE#KJ*n,`U[1?-%)l#WtTbLb#>rYHY`<Dhk+LIp6UF-6_BER[pM/Kuc^%(Ih53)8=AX5QkIO<Q`<0Hic;pRt1L,=?q@3ls0fD>9E:udZGYq$Uf=Wkho%5U?(DLt&RmC[(3UR2GctaEVX@Y+:ES*Q9q.&6N]_Dr-OI#e4;(MEUgB0tHi.2%s]SQ*WEp`8lu*/AO#i@#Rb;W;#A0[$pPNi_e#>%83';Ub.)QC4bhK3+++qBjeJ8;,LW#&PEs5=c/G+7<;i0f%')n7o8WWE:'!RC0)+BH;KYJY`AWhJ.Ufu9Wr=C]*B-/I#]X8I,^>Y1%#;KW=R(D2_OmrV@5k:;mdQ+Ciaht(I-o&juH'R*D]Giq`8?:d>Yl`^*,RhlV5GJH!Ngt/nY)73mDbESD\3QhoXMn5#>T258m;e$C%U"XajiZ#)l*M9NpkA;sCm:mM[Qo\8Q.f+<u*lauLYqT,HgT:$d<1>'T,`EZqgqC@,_7O3JV6O4ndDo>PaX++&=@sn!;nt@TB2/6m%icl5(@mP?giInDflV[;EPq\f.<$KTMY"L(JNk::kor3!u%83r;W<)TPQ=2D5n_RhkO)_FbfrUb^5AZ;=R7cp9;TibsnL-GG]T.,3%\]k#>l9&sJh7-1;fR;eT*0md-L]o_<.1fS#!$Z.T7.aueq%O"sj'fq`%*[J93!<U\ri"p*_bq>g"3B+gEkCZ^-Yd$DNX7&`JrK<p%j/$@HF%<nH)-=k=j1$7oS86's=<Y=lb_t8[7k>c*XoS!5WWnd,=A-HBYE`1cPTu=\rB6:qa+=OOG-9Y>9QMSIh:REH\DDb#VW3:+%Eq_0OW8JVdEm2g2\@fiU&rF\AglWMfh/-W7lcnLGi__+!*]k'CM2_BTq*"7.,,)7BjDJ5r5[(*A9501q,(9C%hJHMN-Vm78l;M/e%!q8WcXi+7sKHW6q=H.^LZ.MF1+)a0_%ui^rTA7ER"fXZN-P%BADiLe"Y8Y8LO92ZeA;HLGU^ft).kENrlI[gVZMf)B.<)EcSE-*l%OO>+-jEp.^<1PdZXSZ7l=/=lC+Id.Pa>%8U:f(_3f+tgZR,mT.cU06Me3XLS5D3.6?Ah0Aa,GFgLlK)M-j>><Jf9Y$@f9,Rp,5qi%/fXg_H2R`]+3V2F'YNa`5lqPl1_t[EA>il[52%l=#['&fAG^F.bbLM;jm!b2oVcn[>MlZ(`X9Z0F5nl<L<RS@#7-ZJ/N5#Qf<KA5%&6sMY*0E@lcp5Tu"^FsF-2b+N@a`k!/GUHF_N:pK.%>brXZ(nq&P1@?<'qS6c=%:,4qdGr5<Tdda/:!94@6W?m4`V^[`MW%d8B]>%F$AX#a%F9'O(Hfb7QF.;+qbeQ(DJC?N(mTf!@q\;So?7.L+hJ>#m*Oc,Z"V5OU*_F,S:BkN+jD"I>+Ypr@sBlf$1?(n,U`J#Xph:%Z#2?T;&KFnaA>flqF\.T?VRoFG_8%@.OP5F%a>e1IgN`W^HE?HWDR<6^gr-7/YQ^CD?Aj>qjul,Pd-O)KHBfmNK)JeNCt_uZst\6%!Zj6%5C\O>i<9U(>9gq2)i>:ZWI!dX2El;>2)+)471,.Hj:kOS=CVRIo?bh2@<.k\S>Gbrd$HK9MVuH-k/LCQ'(Wri`UXL8Qlu_n%?N)L;%M8hSaM:9'Zp<CXEMB+7(Cno0?kFUA/:`n),gaQ_+OZt`JCL0hj<CBY/2prX-=DKDG(E2@MEkAIaCEofYaUa1N?9"YYX[`0%``AC66NP@@%>1.%EZ!\C1^qUG630pUr^.iP,"%V#g0\?7d:$NS$aE=+"/PFuN27;j)#J"u9HqU5Y`u.Q^.0&!VB/Y99h;$j6cM0^%Z3&T;"lh4!lkeWO]KE\&1fTIJ>On9t/D_HALP/-5EjtR53tX"o\XC*Km4dGo2CAUcXogGT[ifg\+?IfaKET:hc3a5c;%?`Z8u$5G%.4+k3,r`BjYTTrnn:lp!\V(<P:gq!=;8"&c+]i-j?>*S=Q1$I>f:h1.P%'bt/rMS$n;gG<b'>X8(AF;sN$djN\A!K'$E"#(5-\l2%gCt#XU`ks5PYDG9E^QK?G["K]q_W-RY)jf,l[aq?d%e3rk5-rP]%$@jYFes90uPd$UH=,I/R-+H*O3ND)TZl+.Zr\?b.-*)c?7>B%6Nbc%KN4<@acli$r#)ZU5Ubl=RuHGpXMH4c1*0`()BppKC#^MX#muN$:CQrV`[`lZk6Mrbj]u9uE1[:1[c?s:?1DE6\=3`S\mABR%0b8ab&Y\sC2<[BUEBVKC&n>m*!-<,h%9/1/f4=1UlTqBO1*ajE)q(Y*<Lknj_b9KN2#:tIc!@V`20<j%JiXl=ZjMrtk82PoM`;RY%S;n7;70aL0d=V_-jC"M<<GN;R32Bc`#r.jkcTQfPE^`n'iT_#3_26AX^/3Ei@hFWPc`r:rkeYHPlAO")7:&07MgZ^f`ekju]nd/C%b1&dt;!,V4aRHqSQPVJ\*nJ>7K*05lMY7nX.2+.!5'MPCVrNMo)l]8mXE)&k?l]c;k..C?k]_[AX71)%Bub/K5"#"a,qtu1nP*EL%;re_XO[qVs%!BtU_qX5LRU$.Lj&89S=,6`2OC=DSWc\o"_\bqL:p#fG:kMi-TljN@4uRE*;[-'O!eTMg1mAhJitY`0N2mjfXAHP@%7DjhT`?H!ga5baD(<]e[@f;6W/%j$://D+j1^Ae6`n,u>C"7L:ON*<`lA5aPPUPPM:h.(eN5l]pd.si>L@+HK+\TPm0K^#m5Ne2s%RO*"l^47jtY0lART-qDSk>O;83aF9Ug0UGL@".7>->J8TY;B)agf,D!9NsJ>TlN%Sm:]/npH7j,d)7!F'#c48H`n&"%RB*A'/OsY%1(4XIaLjW#(9>G8d4@,pl-.$YL@ksc(qj1R@k)NA@d?CMd!MQQ:dt4j!IB'O")3k7\kZHG5JjC83V9Pc&``I_3cX.p)Zml)OartK%m1[ikV#_%o`XU\n</g)CEd(nng!1[)_daW4=sqcS9UqssrF(,L1pGr0N%GTp]V@VQ0JEL"*]>R$!T\.UY`'GmVdishYQP3>][70-%MgDK)KjgFiRT0>eQk*XZ!hgJac?9H/$B,/pSSa\s)2_,Cp7?nq$V?!OetRdqLi;LXYUR:t=n',QfH,@W(BQs);TTBH,i'2H85W\=%.rZWX-KB"W#l$KW;KS-R;>1^iEibEF@M<*uf[E6W9?J/tB5=J'jVpPM]I<M\K\_0L8joO8K"$Rt/?>6uguZJ4\.u9\\T<%QO-N9*%Gn,a8#Trobg[0)Xq*[R)%+.pFcuI3>5f0LeU2L;!L$q*8TI+7+6J"d8TN<8&H@sU_;[Hu^J4ucSL4r9#]?Op],0bdX"tAVDcqno&%*+do`!j;l:M'\8I91!lE>JeU@69N+UR4ATbn/@;Y.s/83ZBAIW0$%$ZpOd!u501`YC-rGC-1\Mpp_7TK:mN<>l^2#4nK8*hLh\uI%+?u&5j-dkMl?6/>=rfH"r_fH]$*KO8KAL^924#N.>1!esiJOFE.BB.,HGN:OZ.+Lh,8+2<RS+MD+1+f27JPe1B0+-1"D']eWDS($%=ZHS!_EO#pG47[n<Mm6VF+HD,OQ's`2*">A0#,FV%/<q;L"s+Uc*0$X7iq4`G-Qdb&!QCXhJ45anaTLUp&GRoKg`s7<LT]C`g&S"%Qm94LZ,PfZe^B,)2#[XaT*U2R?<1;\UlTJ6ODu`M+NGbJ$\dBMETTW]f%d"FUHE$(hp:P'MkN3D:N(<%OXd7J[%K*&^fm[!!u\/F%o4-*VP$oBQ),)>SjI'S=%0*^J$Y%WF5QL]dc<r\t<@hn7%]!XCTp%0!^sjJI?Z>cm98&KhJ2it<d&?`>8]Rg'58C4Q:K'Fl'-b+W%l%D1[@e0g3.q%4S.&US0mu7X:"+q$j9rR3,q[S`+dXaU$1XkeWJaklu_kmfbqa"$Fp6htZ++'T#3!(#un*.1)^]2?f>JL)Tp=uK;%(N8*=J*4MWIpC$jgUUsIXit@.NE1:a(gt$d2,*B1L(+UH?m*U5G.8anFg*Vef:Rr^.L.^)N]8(>*<T6fWnqs$Y'tVd4nEC?]'nN4%5rFRPPab)_ND9b&D!1aE[_4U>?OqVO1b=^\3#n&J9Q"kI_7T\PDc=GbJA9;s^*d7-iAAG*m.QHVY@uSf3^NK:l.F@F]qtl?pX&:2%.2X3M:W;HqX@GGXRSWkU9M^Do%/F9iA?c(#nB4QX_kZXZf[ul(\dKm_6Xg_pEZ3*d8dksWp3UA<#MD<EgK+.H]a_=Fi_p$<o_HKO%*:B9kDPpompTB&gWVp4mV'ot3q_DC.>%SH&joT-\8bF7Z>%SH&Q5$^/58BUPBg1p:aPXYGL?a^]mD<BX$#C(4^HjPUi%Z<?/`E(,%")8ddJcL'X+N*5pif'7m5\N,eSJUfAL</jT"CZ*N/LGe!`8F]+-oWNg*>jS5"P+S*#8ID1%YK=XSC7I2YcikI+BO\g,=3:V89T0g%@Bmm@%;SXd?)T=t0GK=r+AWPQUK8O'GBOi?/"a/!fan-9(k?&lb1d@Q39dZ@^uR5\?\"*[WB]ITN5P0"!'QGl,RR!u0TZ^CJk.D4%s5ZdXLl@8.l#4E'"VQDNAnY$Q:[:%*EL;^Fabed`N!Ktrojo,QSHr`I?5Qlbj2MGj3l<\:b,`Mh;'b\t.=iTTQ$$147CPu<XOUo]%?KH@\QGIOeRZ8m]2>qbsI[glWOb=B6+PH'N0.GR6*"ET+/JXNci0*[-R+W7pGg2uCEmpAs733r5>2eutOfWJ&6F>@f.<]"lHFnl]%8L>)5%dMTa9h`:XL("/CSNrY5BbT7Nr5,=u).&ace>GT"+I$+A0\i@bN[0pR9QMeQAM=0SJ25tY&>!KBC20%0b7_''o*u*:8Cm_n%]QG*Ya`MR>OSJlGSn)'F"+c@q,]Gd+Ys),8pnI((/*.2`41Uu:7Ld:q/L<q>nk;/aO`:dkJ].#2b<Oa)07&?k&KqiW;t(#GXsaSe%$nNtB=cYp!G""aY7OmOc!K196MkNF)Wr>oT7$Sq$U6q>._c.Z-6(n@t%`V!c%4%B7Q^)I'6BSB*JaUs:L*s-U.]OMcdlU!@&N`6'%AbA?l8c_HJ_``(cM;aO@Gh[oHTWG?_jaP"V:1d4.S<L9B1(Z(1jFh.+`5sq<7&O'Jm_F`[!eBh_G9LFVf`N*8?qmQ)j$]C;3G<eJ%f*1,!.?Q0!*jAgY6'4He(3V/d49Pq@U5RCGLCHRG#_[+f+KEqI3/StZ9I.b@"L-g+oqhkC!$n#eo3#rQZL'%dfOn"uF_[%sTHZcj%S4$$l,VKaGRlHe^gA6TE_;AdE4ELNrPMf5dp@>^"6\iUcJNnWSTPW19-4BlMh)!\"l8jS@27Y'nXQ,\c,.DD9YO-TMjTUb^jd2_9%E_VR(S]J=V-q@Y[1Bo,@JVIHikY*01HOU6S#T:[M3+*L$8-E`YOi1OhK_Zk@>gm[T6Nb=Q`hB8_F!X/0!,k$C,;nt<fPFDq/[-:J%>h,KYM.@N1#_pb4n'GOa*1+?f=RTpG`NbHQ)@uDs5r`<t<K/l?V>Bj@`F@3`#U")X!fkp_mnMYq4SRM&E`&!toQ!VJ_^NXBiTNml%3Xe<"?1&K,4`Es>jgRA_N!%AJ,Jm;5_E5[a6%DGHU9>PZoKY0mq(VsdMZ?;P=c3.:3+QY9.j,h1#+d8*q7_eM,ndn?'Ao:>@h]-^%-DlV*NbO;;L]j7EAR1_#AZq.D-\9'PAd3nn*F*ZfaQkiS*ptO7%/[:tH1V5:7"i2\&=dM:BiR)g6tic_CJcI16CWf&MBF%3,Z3*+%nXcF``);\pE`'k3dX+[>\1sTqVu-B#e=4_&$)VUh[1+o.ko.=B`;H3]AO#<h#ZJ\dhchg$\47;0kfeZ]LjH!OaH-aTeH$FtR#N9h%Mp%DJH!\D@1&3oRhdYa$'sc>3k3&ZcJXtO/"US(uaRP[PmB_no,-CAY=Hf#b@l[3GZ!t$#G_4_r*['9?OdA,384<0Vrg(V4LY,i5%pbsf3n]"<0k8TB6\BK0D*>F06^*>Fnn<&RlQW//i`k6ep.+Zk%,VdV`S2nA[>_HeWEd%F7B]bIoN$&Pafq(Y>hZKY]hg^0aRe6sp%R4b`)?<<EZH5B#%:kTRO):r`mM0-\PXhALgZKHUEe1'"@M/6O92$T<K^1V`:iO8#XodSS(Ch,sCnp[\j=Tu9jJ;GruEAFWm?u1I^%R?Tsa+C]a[M7B>]J[_W=RTD%Zngmat._(:>GH$tfdA;gF/(N+ZMh^^EkcdZRl6T2$OIgP2&$JBjpE9@:lJ0?bjd28cQQVYLK/\T0%-33pBKqg00D,lC1)@D&o#8\gL<Q&2*c49GP&rd5l1_cO;cFarh5b:$Zrc_]1-f7tSW%0c#1+,B[n=2H^8O!mU)j(cIWHAf$O`==O%7-EZ\E]V.bX",tW*Mp2l5X_NQSY8N/6sG?`>6$):@g5Gc0p!s$m@+S83[qeeQ]'*@MH*t/3A1oBejbagFD_h\=7VFZg4U<k'nX@n%$/gI8&H,2e_igc('<)(NjE-b4:#)3YZ/p@2=s<b/R1E_`dKV9t->$GFG6IM/<hNQYV+Er<Z6k-5Q^5q2_/\>tX,/]:^mleZ.+TZ*%Uq><]a\n22/da<[!G!uEBM8In^u]H-,$QHGOY+R`d5^0#9]@`8\HKN!$-]B66n>BiLPUi7Q7NGl=!L:RaT>[C/O'!A"*$J[<@5."%%d(>9S'5\?,X0bY]E4'a7&gJR1SHO+&.t`CVsRJ(@#7Hnemq?+Q1^JW9bmjj4#L!fS/do,2jl[_XKLC_&9AJp?XfEVF0\?\`Ngfk%QlRg1A;Lq$ZWWIo$=28d=Hc!:QgZHUA3o"AMGIE>E];U^?t)h38U7cl99<Q7h3nJd;qbq[(7]!8I4<_m&5[/S2-CLcX"$K<8K_.^%QroP;]P_)_-;1S\"]HU19K%\a=Ysc)[jDIan($#&CD'0X[X[tlF6`;^DG;a"=d'NRm%a*51BJOk`AVN&!K9Qdrp4Ms5(K1h`0u&R%"&aQ*B6S,(d6Y&ek>`DQ/bTTMOQ?;47>WT=ZTlK=l6naV;sB(j/]rq;1XRJ&r,caXPS;e&8mo&u>mBBpLcr:<WBD\n04sn*`Lm@.%#AR^D!`8Vjm7GIRDMNXCXpLsYl0CPVSWD#&`HcroS&KYC^//U#<p7EE%UIu>m*LG;4*8M<>blQ,qIR'&O3\eR@Z0Z1fV1H:[cia.%/IFlkK\<(-=gmN,J7a]@&`IK5.$,9fJ#Y(-bXB1tU-MCEM(K(1g.k^R'NeF4<GYP!!E[O_BQCk&'$uS7?s2:nPp6Q=1olq^.$/=)%PnU/6]?.*Q'Oqg_,AsA5.e.a1[n>"eP=-#+$OCk/Z:55=44R7fCD9m2C3e2F`U<DB5?agIVCeIlBZ\-d/Sc'c/&pBf?+[i;8rg/l%#?PJ6Wb.A;C8Ik?9oDuBZc8Y"Kbc*K4!kZ"'_*j0Df73$lRoYp?4aq_C`4m'+O0NYG+g>SH-.]S.?Ke=Fmpla@.`e$.54u4@Z`E?%9in)lUd/`JW^R8nAtpn*FD-N2J(eF4Y]WI"<:7b2b%6_k.S).*2-L3I2iCZ'(<f;^M\Lt!:,,=u^=+o1DsS[h9[XpnPOniPPOnn'%Fi#EK;%o<UPB:2Yg285dOK9'q9N!!!7BDoQ)$t*LQ,FjMOEJO!71.!!?D0e;_fA`r6;19"`Zg413Y:.lR\V\k-+EK8&A(Yb/t/T#%_`G8=Oq)<>Ht&9@Z0rqrBo^A^1n/S\+>7([.AjI?Yq<pAc1#"XR^h%H"*:FJ-8t,8W6@_:2X*IPQ%$&2ZdV=MBp3/ie(QJ&-I%@D%onO5o67,T.]9jrc>r#?E9o<c]A9=^&U^:\[?"m(QV*LO_RP[VM=@)VP2,t:rrt]l&7O`G.=&C>7.BS,2^4T7P#q*uH2bJXGrHMe9%%OBZ9)5T*K!URuX*CqZkJ&Nf>'#Nc`agbGPoS?@*b83jI1eC=!DNb,oIFfc1I,/X;`'?60AmT,V8`nR/8V'9B)d"20,%d#k/4kNm%[11$a$;ru^?klm^h(e/no6N#1)+T*+H$BN?kUad_nn_OF?dM^k7M+kGEN50R.@X$Q8@?+T3R=ehbK-$d@Fl(^B@k`;P4Vu#2eMu#%/[dRI&qHf2P:*C7Ls,[a_MMNcpQLjI/Ek6GnMA]ZT.FCl$"g`?/TbCk8Sp9Aa:j?-CWc^?UO6%'BN7hSE<;-e8-R239BWc)$cG&S%K8a@7,R/=?SH=Jdc#P?bida&6*#9j6+pU\okM<);)2%&4Oi76Of^a><>C&.U.ADb+]Z"gKNlSpb-:K2#RM%R''V.?&/U`hc5ihU"%]qX\jbQLhCCsO^lr06>/E`2_Y6Pk4D@.u0H,@+j#!0J]P8G+1aLPH`=:d(5pOfVnB]O!O.AZ)@mWl@Ya/Cl*]+7k\.<!a-4ZA]9U%@BF3Z8<OT.`0s,?0XM(N^!fN6*35%YOmn;]P1t*g[?7DG%H*K>!70Qr6-G6CB_.quV%tsJC.IDFkUK0KNLEX'h5JOk\=Ju,gF="R%IMAHT(9'8kF5EcAomfmo4XmK!VC*uQ.dq2@SJtotJ]ViU4]1<+kn".X<<3gt3A4btM4anM&VO'_8@i,pXKKHggEXI`3*g5Y#PfOb%0Os0FZ.h-A6J2P<nRh;q<??-4QJAfaIknun\.616^i>JoH./3V8A"\N<VC6o)$Md[]%i3HQUH'nbk2ot=:p+WEF>"geRH73,/6\k%8S+)u9GWc+,CLcmJmQ"qXdH*l`eZ@2_5;Pg8s$H3A5@XAJ<*+gfDC<DA%E4.%]l7-VU,+N22_dAi\P60(Y\=S5.POf1VO9R4gVBK%""D25hRn[2@^G8u@X!a#$fY8>.BY._8=6)^?,i_D6%BPJO,T8b'?6><Z/CeI`n9s5P)YY^jA0)6g#?L8$P4&d(0^u2QX2-rl0Y2s%^1PtB?%,/gaSf,;@hB)3aNt?Dis^F%Lb;Q\%8O:^gbU^%"bc*0C_7k+SZ5jr)g$jGKkuS5oGu==P)2KD66m-l9t5A'93b"UBUl1;%`Semo\6kMtd(oA0=`RmCk6-t]FeMK^T$IGcPX@FG&B/gCF>Mqn;Yl7EK+jWh2P"q(>MQpoh8s,!`I\?-IAu/L/(NgS/s+ENgW@;T%,@_*TW=L._Cjh`4fC`_3<RC1blZB_i5eMf_,OSc[J[oKX]F(IuW?4opf'Y7R7X(D)03%/&jo:Q^+548pd4s;$IaTrNQIp:H8Ptpa%fZ9F/4K,QSHiOa46H0:-_r8_qEmfo)RBgY7/<GFcVhKr&'Y1_\28"OFEA:D/k&i]j3GbjXE%sVHqBNkr5bQk:<Zrsn[Bq$C68O;+%&QqNaJZ0\#/l1#r)!Yr_a[C`T-;ChQ?^7"Ue0Yo?C2Y[=<K0VhW&E15(*:KFX3iWr]:Ya)VP9Y=%$5^!_b??1nM&EEQorU"*@;:Q%%?0[fn,O[DZV2:t@1EiQbpNsm'0H[q$oHeM`ksWfQ'I>a!TKBO(*3[&m[F"0`kqf"k5UU#!TM==-5"-N2G1.+d3&f=-oiVB%#WVX%[hCJ]P-,`K@T_>2m6jXsZ=&lP6"-6h%Z)$18_H+dN$rMkPgpEk#"[792Bi>SMCa?7M&93o$(BQj6jsFNK[^Kf(mLY$`J$n%1nJ.E%LP*jpj6]5CdN?/c/4.:JKSB/;,@Xd;,5VHd#3@P=VH;-H6fgYc$^sHlC;dW2^r)hl#4#Dc*X4K2MB)k`LI$?KY0=0A0S&Mc>Bgu#%NNq,"nh;I(@t>iD_Z3>T%lH^7&.8aT*ejhbb+`>*G0FZ-1^oJmFrH*H=cA_F)?s;#)+jr3ogkM`1SeH0(jW8@$m9KY#Oi0QU<5A(%#(Pq^\fD10)(]A6%*G8c46e0sZQhrU/8S0;'AFq&*>8clhJlFIp/oJQkYp#kJ$Cr%oS^E]7_d.r1AYS-ihTrD>]98Xr$%>RR9sgZ%0D9+>I?@;Uhg_pbF,`leAZhhgI@9D<Z7g8n:A/6Ogl6`MbBpNJEsk\8`V.Ct?VluDQ&-j`dU:1`NI7/+F<b.sQ[@Q1(K?jf7`TJ7%#,t\0P:mIpV=!=O8nUT+9#qguQ>)coC#mGO?^#l*,&WPs;[dR)b7p;,I$kUiOtT)311s(j5S>;MA<AMr6tTC+aVP^C$QJmcj*W9p%pG*K'jB`a7Q0SJF!j"j!<:;S;Wddb2Ksc!O[jLhnj-XVg\<iMg,+*@'!.s=a./*coQ*tZc5`0l"_S%dc,i#>bB&SK.HeAuS?ZsB?%Q\@$fARZVY!_i6=nLlsZ5JmnT1]dlBg6>;J!iE(R8E!no,Ll;c!RnJ"F`F_Mj@o^<!Gc-W0Nd.&K+s8pRFk!E*+8?,6'@?G!OHsl%o^?ro#adNF:mHPs+XbIY0`hP];`@rd:*<Q'Rh.8=Z9'=>>$)(t_SECMSE4KcH-"X]U0qM2A;%R70MOp]-3_l"o$^(E1^csK'F^(n%G7"OF:eF>/QtGl2PC`fJNKbRiZXf.o0JZ<n.Nr1r"Kr`+63;mQn_>8g"7mi,r(HW3R8*ICB#U`-rhXm;fuCKpMeDu?95`csRM@NG%r!P%EQ+e:F8?a?fqWK\0@PB/5_h):maiM9uaSJ&YK3?(H31/jY2Otfr&Bj8m%L-$7.SDagAeCo(K5"BbE8t>pP=UMK_#Ub5-QEPV%B^'s),6OCXYLu@1)_!%+6NF6bO9u3pW9G6/#Lf2T@B:L.i*ICd0YhcI3>h[b<5AqIZQo2*G">ZUL?N7,&`mDN$/&]+bX.8@=ifT1%(1nQ16B$PbpY.Zp*>8op7tcNJ&`[7/0QJj/U7TAb-jR(4j'Z\L-Nu<@_+)8b04c-Ir0W\#YqNgg0QUAj$>(o]ah[s3S)-]'\I+=L%Bah&N!:;91mnMV&Ota3-S;W]c9c)'Xll[H[k4[J!(gsc?,g>h-b1_Y8D+oQ:c<"L\aMG5HoU6a.OCI0%b/-ga10KtnArMG3Z=m`V%QA9''b`le)?\."5EJo:.E?ZFtX-s4?Ln/0VFsCFG21%EJ0Tal=RD+Z#'BpGD"2SpP?!%pZ47tZC!tA]LYH]e)9f3[j8@P@/&Y_QD%hcZ>T,--ENR>Ppb("J=iL;Q[g3bat\A;u?F?q\diR&R8:%l8A)jC)F'(f+NOg=&0O4NoW*-4_maO,\oT^rXDEbJndo"2kuI8c)#'%)!r!QW^A>?"s89'6mrKO8"aXfLCYq_<*%d-_rH9WY1nQBR1q$;*)hb]8f1,00RRXA0XbK\\hOTdQ&I4gQT2)c+>`9`T)ugP/E?0K%>"DZ8=5QlrCfX'K)R7>o;r,lCUo^edU8"XPUd9Zu)5]E`UbtHb9GO/0b93c,L"Jbo+<n[CC4mdmiHArk9ouBE^j'HTF9,[hm4*bh%G'QPX\X*TDB(`I*HK`-]_8(g=^,1`5bI<bT'P&RlqZQ7J_@pQ0_hqt27bMeZ-I0^j^<G#,8ue&e7O\[PliY%.<`X$j?bf\Q#fC("%BuCt3Dp?^p`42G$]rG)>3b.d.X<Oo]<O5'8Nq2BpWj=B*TYr`/>ma+M2TsHZ(K+<A81_&i\i+OFs$<rF#g8806#84e3I^Ep6<(u[%#Rd"^B"&IiQ4!&8#j$l$o46U$A!C2(8<`<X7-&$rX[XHQ(1NRF*;Tf_G1h96-5F,b3J/B5p8E%F#B)20/Mf;2&FZdT#OQ]Y`\;.V%QEHNWa[n[/b@YefCphKUf+UmGK@6Rg#;*T[Umg""M&dPY5+aC4Ur<K]"'s-jLMD`o0T=Q,9hk@>NS5RXaf;3mgri`P/SQ@=)(0RZ%$tC$\B_R^1<X16k4Ue;!-Q/H>YXG`&2kPgqZm/K-)-CLR)NSI+k[q%'I4-9TciGdmL.S25bu>Cl?"^KYs-2l8!#o-$lStll8s>[p%,l>Hb4&*"ZrJ[`[3bk8OZfj7uIf&9UN(+3&-*7P"_o>C2jh_X%3k9'g6UVrLWmrK]c=jnT-EV4%f'+&(l_tJY[F:/KZXM9q#Q#W&%q#Xlg'@qc\Uuq2++W+a[,_]_QC$!)90Y!a2K\/<<@Ockc$8H#!"Ucep`YqaCCe0@f<.L`IUblka3#o9H\WA7T+R#@=Tkhn:?'feG%B/2IMoguQ'T?2,tB9&]Jf]?R`FstOdPuFYRm[*(q%0GUj+,4TsC=B!O<BOq`l<HD"GGn1jb:f%L%&VuqTNFQ%$EA?/A"nDQ_Fi3B%q$$*W_banp9Yn#o:1MXALTV/Oe.1!1Od-a4W>i1][S09;G]%n@``]PTg%[%W?jXiW9A:XA)itdqVNnU[Xd,t5]s9[OiEZur*i[\A%Q5%a'69M0sr"uF3$uK+Pc5d1V8=c_;RTuT=*uQc+@[j4<JP>SF&AU`1=IGdt%A&mP6/!6>VW*ruJ(RH66l7kjN0?XU$8;&)Ob6hI%nBoM]L_L).EajrH?jj8J*g(&&\7%)eaL*08@=M!bC)JD=&+g9^_)A*q;KA#3(K%c4LU6s/^j<&%'b`h$IJD3@0S:I%JC)]u@s3^]%,3"1m)+eF/PIDP&"KTcS_e?RUK?e),^P0!DLa[WR#n;&uFsuDCFP]S%$'tZ]Rlm7Mg#<cVJ5J"+*>r=A&ElU,!sN"FD$E")T`UBm%U=C/b)FjnPWCl4O5O&>IUjFiM(ltS!8>=,!A/-a\0s!jbr`)lE%)`NF5BT4d;@ReAGM&PS.7%FcaX*F"$+5UYb+o^qRBZ``%Ri9$%c^n]0`Z1;@-bt.D]i7iT0Y$Z%qN/OlO5bAc"?ToCHr]![5Yuc3a)t*Y=(AS>(_'YK96l\V:/g6i%:em!B18%=]foBO:>H<8Q5m6X%I4"Lr8^5\.ZJ9@&r!/'PhEImDg8gI?\N!!OT(6%?hR-CAE.4i6Rh5dfUu%-Zh5jK>eQl0$gU8L>[S[%Q/RP@j1Zhc'L)QO;>FB>I%BYl&i;,!sYPb.jn++Zu7FF:KhRYL;$9nJdUl<tBD5lno]aKRN49iRrd_Aq*b8?,Fnh$T<Q9m%TMPFH9'/dI]"fIQ)l?pSAk_PcKn%ZI4S&hnTung@J+h$W+Sg-rMq-O85b1/r3`RUc8*hBs3,*-7cE,"du`FZ`]RUM&#OoP3lXa]m)M>b+9kM3KnG6o.=&ZRAK.R8^]#c%nq+HNAF3CnalFbs$.dg<h@IFaqC;3+)al#&9$!(;$4lieQkLM=e-M@s2cd[A&s;jSEAjhIBQ&2$eYB*T>N$c>nVG.ZbaiK[(%m83%qlX3rJ!IZGn0B(K!3<2q!>EnG`aLrmAHRJ6kY8,[Z#i9[oVBB:d3@g$"79)Gr.6g+q*dWt#`5'GMj0qNF$knl:0;2#_%nZFQONG*%&:r;/S97'H,AC?T3@eOa4dWMq;!Mr0?r"mB0`Z'Ub6GfjnMDFHcR1ee&i7uu`c%:D?Su,%l4I+!'PWhHOa:m@kWoZt,$Y@K>L#FR%8_s/g.V,6#[Et4%efN:gLIJ@7j;<&e_k=H#:N;j]["i')%^);/cVMHa)X0$.(JB:)!(0!jbI$iS&k9=4S'QI#[dO%e9Mg6ul*bm>%GBPO#42&<ngO$7lPZF`0!+WMbbJ%k]hW"5X\,G(<#?IfmrHWg`YY%%j]=h_?*=^`[-R"'a49Xs_Ge.Ba@k7_;mPD3Gnq5RQ(\<bb%_r`3D4nI]h<XsJZhOPZSSo9lP)MT[KFTQ$0n0%k`9Z5QM#lTL:'3_SSP?0Y///Cc^"K6KsXt59FMZR=m'G5Du1.q6OnQPsRoakY=%lrItfI%?nOqN,8"hE[7T_6dMVSf.4Dk"p5IQpO:)^hG,.2=H7\/7b:>9&4HC&BW5m,k_@Tg0of'\>W3sFg60&(^Fj\Bk:GhN1h7c%pKOR1L;EZ6PAF9N"]Bd'R5)'W$$lYjr#+3\L1GQ09s.*P/Me[+!A%<RN!lcADm=Y'Q+j'b<9O_L_9?^HKa_I8g3HR*`78"GQCVqE%_RC6DU9QjC3%/(ppj-M6S_>/%#7rpJ.7jVN?r!bi1("*(N%(MF$XbOgn_/O?XXHi*!'md2Wi.%,`7BY<I3)F>]'(sV!E@;mPSP6(%8iPa(400VM9!^_&V@Z<LJ)K7'gHJ'[a)[Ah2S%WUktJF<F^(.=D1["!9?qc=a]-7Z+I8h]n;\B]V-(0f5oM2D2%K9K*Of@<l8Ta)%jfP1AdK7lcWpMpW9HApE8la"XaZ-P:f5aShVb9.t87ZO*$dR1KQF%_AL`*GM5&3r2(b;/*F`D#g'$<76&'S6[NHF%Nff$DGRK4!r%Qbd@?kW!Ql=h<1LeMC86f6[7hPVn)TKkk7i8kpsD9;H>T=m9YfZgpVEN:R;[ol@\2PH<]tPb2I,n$_gEE)=M>ei5^^Y>QG'TOhij%1;u3:M+pB),_-==Tj/\o[J?t2,k2".]E08t5oBbRj=r?X4@\:!p.3]TUMJl$D*9IC/&UN!2=>m_-n/`J5R/K=q8'4H0>X'eKT?@@%%\tVm/`#ZCdlqt\#/VYdl]u;-eg^\gP#XLHIg)KK,Z,2,3Zr@;=U"=@5;)&gP+F]7BJ\@<N_k=;Dbs:t]S)iV\1r5m#=LPq.fDeX%:cB^=`L2:]#Lh,<4(@a\R!;c'AN$f1pRa8Rr[uC3_8HiGYnk:X09!6,q#CY%p<q9$+hj:1`&3i4,\B`M6NQ^E,\UhhRZ%I>fc!.J%d5nEP2Q$U4R5KF-$Q;:\NR46;EaVUgArqlOd[Us*6N$rT`[+hr[gq[s3Hj]uk,bX?g*.1b?G)M3*R^cp#QoanoRh4nK+#OrM0+`1%V0sWLI+Chu:5ZHi,(!\>lH`5DBp3k@[CMH4@BfL:Olo%YTfn^`)*RpbMn5Pp`t/W%3q$qWQe:PMGH+%tX$O"Lm"N86d%qU<]5#5g%h(Ts$a4.+3ip7@JHr;fcWb2.4fbZDW/0^-;4:osfo1?VrJP6tP#A!*BG2t!uZuCT`FC<'c?j$0<+BbgG[RMBKqCP/'Di\9H%JF@^%bTXh-]g+ohW4i"s;Wqb-e,tAr`\/@5[JLIh;M<V/hLsD;hno<mCDL4.]DV@j[(D`53^0HNG?\0j13ZW(NrguT'1c3N?t)h3[;U!9%DXU88M74db:;^$drEVQPH<oW+1t2_3luITq!!!:fDl/XT5\QL#OZ)E*8Xj3Zg&Phfh*XL4XZQFrBuAN^6#.!'r%OSQ=o'0`D#bi^%%O?T`J2A<<")Wir+_3$]eT&,(TP:22YoL+R#fFo;=D/.4+;"p=e5.)BkY+UP`\)m+]<#54%2#MU1suSq"sdoYc$#@Ag(;A/Y0fcZ%@dGXaOZ%S48]]:MRr&4=U^\]sH(d[&=%_'KVDH_V+2pYT^/:I9D*sT4S"VaUMK&)(C;\o5;S?4#D1L!7hEl(8<?9+^)^&%ca'rnA%Lo@aa)a]MWRB\Y`?0]!Dg.ED)L3EBM[/lT+?kR6b/PfHLNO+cj/(=cb*)^">%1oCLc;9uNYtuBP"R6E'=bqdcm"gAL!2Bt28=T8P%(2:+HHUZWgZap-"lHH6!i*cV:U09hbD2:V2b2Ab<!iH['JN!F"\QWB1%ef-<W.cB8r8d/9+O#RuU)U]e@5c&eBcQj9?k5nOa;I8N%,fD:/72K7daTN`k)fO*bG0r69<*XN*!LO]8B6j85Y-%O5)J'#PV4$-`m;prNG<QZPMb28D)doLF$p(8I88>"bOf?\FQ)6%8l)5I%%_0I56rJ?n`f!i^FNNifG6JgpNnsW^o7m@7bVJ+Y!c#,G_r\2?HaSai0ac)>JQ3ABS[(pJa8=g(uX!b_+)^<[s0l`G63O@kaZ<J\c%Y#66C&WjLXNUlJCk`LVP!+CQR%'^sRP?cT'CH#h#28j+=84.3L8/h42Z(^*@6<Z1`L6sM*%C%'#'dPWSL.J<L+Z@9-mTo)%U$\:]%KFIqg`L7AsPh8hXA]R@mFd+`"L,-C]Oq6&b+^9OuP1tgm2tDi^D(lF(Tqj?Qko!qtAK*5qd/$GZ3QI#^U"YOlkqg>6b2#Z5;7!@t%hoi-75ADY=@bkC;[;$g&A@"JE$F8?n7^:W^<bFmSCq/r%jhHC`VC8_]Rjh2d_T'iX*@nu2I<q_DObMFI`9oSU>adLfQ6YND`5Yq'%J/MgK[b4)2nO\NG3X&`TTS;%.XcA<mfV"qF1M<4$2U6@@du(DMIZln$mB&0!2`:C3#O=Gm`n38c![oA7`d-h7cHXHJ)^%;cqR%.Z%(Mka,N"$>Vr0/$;+B!o)`RkT8`g'/TbsF8,#(XW+XVdQ#;\ijF6qZrNN"$=+Lp\(hop?M)"2ncW/lLD0GRLfsh@:DTa9IIMmB@]P%I"nG?M?V\kPBO?Q,f[f+24YUqj"0t>$aObQ!CUF6W:)"M:Le4>IP`FmgA+EbUEMPF,8,Et+ZA+,@V=!u)e*&^(1KXNcVd%E@^B%N%$F*_`^g_,GE46r/,%Bc5?+jp]Ka-3A.8I4U&LF\*1W\\YP<uOO-8`_S.?YEU6S-keHh"^GZ5B(u9kK@/;L'$fZd"&U="NID@Vh?f%[2>C0KIt2u1[_?gBNnps>5Se<Cku2S%I0H0l;ikgp-gQSZu7f<,mgM/alhPjCpq<W0fE96<b=hLf%KRtUP^nLL;o?UE)AK.Z/HI/%6U]^h).Wh#bke)LBZ=2#V5R[lB&+1.ZJiZ]RW?;9+O^#`$8`TX\o&EsZhY@TA4+;0Hl-B]o/*I/(ZmDo2DiX4QEG?Q@$hB8MZm"j%H?gGcb\$\e1X*kOL)"90.VAt=!(a[4--4)/]]Ku?_aa-r_hn;u7V5ba%1q)0gS.d)X:So.2K"iNZ(Mng?>A;gh1KMJ2R`#pAE/b=%k;6:q9K&+V:DgM_)b<3^/Yo8c<>'SlmMA9L*B`M>8XKs/J38C:f`89r,Rq)JMIM=n9Q<;7Ctr(17DipAq/1b(9bjEl^.=d=P4g]W%`bdSS,gODH[<<hB`bcH:/C;CRV0sW9Am,6lcj!*/bGkhlLY3-jSjgM4gl*&T0H5D'TQ(\^B&cu29s0X5)s>02>%'=,<hNW)2KN;%%Ns'p>`PIceqk@Wgh4RV'gqZ&1[3utd!\6l9$AMHU-ipMK2O%Y(?X]E'9l$b&4ea+f1WY=5@FX;F%'fn3\e]V.U&K[\eDD!O;iETP%&k-_i42abC/LLi55dFE2@9,&n/^p;E-+q'6H6eVlc;AkP*.h]QKg6mt,B\Zl6r2n[gX<MuMJdAVUObf\gNiRrc,Mb<cB=ugiq:)+%8<#AWn2p[VRpQf6YWXuK#82Y,!;_#XBLNuIkr@jkHU;]q+MMPkd#blPSsM&A8_0l"o3"HQA/>;=7AU5%Tnu/F#u#K%$[ND]!!'4/%_Hn][>g-h.q5(t;"3Cp9S!0N;W'-t_;De,ba&kFap4gDK5_EQS!DTNjknn6X/jo"?pb^'U1HZM!$5DP,huJ[%gRQ2AKfbB8oQ,OR%EK;Nm4sY<-rN$J@`qBH_8h%'*Z]:LlNsUA:2,`NA*D"ZQlqN/6F;sHO<V^VpB`c-g&0P:@I5Hot!@GuqbEk]_AYLp@N8Od^Rj9'>%3BNmK8CP1B:R!94EBq+`SumfIYZe#>oi*,]%3!R^n#ko6XiflBg9`O^KbcZG2eh'A0?Y#9+P'r;!o_NL+DSDKZ.h@+`)Ms3HlAlA%,a2nc/5`fiOu1C2:nmn_U,'9\a6kJU$J5dSP\NMp+Ucl:#9")n%-&U-EoRS4kk3ka]_V?Bp(=Z^#S7ReTKB.^Mq3n[lTPaK<_oVq%g'bL4"Z&!9FNVJ1T[X:t#7Mq%E@P,^oe9EYeo7M-"6M24]gF^[E>C4bE>k-NG$$:Z.hlCHWf:'fScqT<V@bWU*e.C$W@XkQJ8+ST%(tJ[D+/9)PRD]OLHUc<L$!Ac;O.&*pL1XH7LfI#sKOTrSV/'96.fqM7,63SSKnk4j7.gCE:KIP@3,(CV!$\*s0OjteK[#m,>`QhW%<sZ_HN1gJj0eQ0l%^hsm3b\BJ>n^*&!G45nLQTJ7Z&5r2'm6*!P_SGmQsDdhQ($?c<>UpMa`EoH`Zb_s.+:8qV5.JQ1c'E'mq`.u%03,;E9iddBg7CeQ9@)/-,W'-a/nsmEG^:uEKU`7g?kWtC6fV<:MRkN!Qr**4!0KYW0P(Mn_4J!^F6kR5Kh=W[^UA;=fegcjQ]5]4%ets9dZ%I<+dK#DaJpLCg>Zh(teJ24K`KDo$I"6a<YZ%D$8M_JY**$CQkc\J,>?A0J<N<J3M?Q>ji$i'.6^$$*!i"W\<U,q_.@POP%PEX%gQG6EGKRlZqb)KYcK4V4E@pNjI!L)bbg=[Eq/7"R8i876>G!o[<&i#2p,VNY,/iotP_GS`*`!Q#fo</q"@^clQ!k+#C=X=JW%4$]OYF<"[6-5XODIn]d#'RsR3o,#$q0C!6mD8l[2PeN09b)s%"+d&EfigD+_J9WGPHdqGPe^O_'fq\JT"`C>Rc>$@B=.a]Cpr=/?%r3WfL,^kK!=P@g.%Yn/nC<6Lf$]"rfBD1l5<iOIr"jIM,/]p#o&l092;M>B!@YsHYg1?dc:eRF(!.H^#!gmLR*KsMh-A-#hG`C0]%K.ZHYW[A7W8>:IfccY07IQEh//enr@g^U*K_B/G/%+>@pD?iGTnH]1cJ#3?q044?j.u5BCQ9mTM(+j!/QD(&BZ4,.>iqQfLktrK5%NJE[,3uKpih\i:a`7rrd4"J1J.!iK>HI-Xfs-3VpPc%e9Hmo.&A7i6)fM1YVTPfoE9+G`Z/Wa*TS>W&9/t0X"@/s]tY_0&*'!0$8%0R^lO&j+;._B.-X,["srjg16"YI[RiN:,<b%:b5BL;_eaZ,@;WI'b6bfi/R\VOcPSPnD/R%S4>9+P%g@BDG</%^jL/N_@s'7XAeM%ai;V_d#BQ<.H!<a5Esc'42QjURJDd-CH0SY@U4Pq$Dni/j_j,Yl:%d&Mq-miP)rX">UtbtV(OdOdZP8Y/5,<1V$&4`[+!/]6I>cF%)PCam,]&+3bZ%nq`>Z8J(hGqX'Z\Eo#4/S.!GY21_r#`:[Vf\N,2f%'f)*Q:]A7;n1K:N7R#ne$+]>],Dp#e_W,c'8Bj1GZaE,eS%7''6hc1[M\a\fV`:0C.<:)sM#W4?$T]Hqdt`IgeBQ,B%Z'56*00rgGi/3Ie7_J/NgZ@c(7OT!GCe:eGI=^)u;QJq]63iX&<S<><K%d8rH!kaP2^hI2cJ*D&,A"'#X(\u;m15ErMkgQ!sQ9#o%W7?'ofb'B6d5$bo4MPZ_l;N4LeNI0MU&m4FZ50$&FbudDL`djWiDZ3IG%`m4k"ApOX/:EE(!3cPdU8i*JMDKC\M=BXrLl&Pt"XBBm8i@Ke]D@&pYQ1_J!<@g4g9][.F[pdE9?lrpap66+;;LapsACO$)Tm3?c%Ro.KX=Pe2RWEFgf!=\Qk]LNFB#NjP'AGKndJse5/FB';Ad!ljgfb#^9mVTi"l^]&S&j:Db_^l?7=C7Bk!uO*(`,^[u4`6m4hnL\u%\rE]TTcC^AbHi*G+TTFJ;C\*nZOPRp=T]q-OJE>/Z"7m[nl8$\.jLBh'`j_jT=X5q9Bb[nmj>,I_jP,EoN.P_"*#6@krl_)?o9E4%bp%g/>d;8"[%*GhasX6GP7\rRpSN+%/Ea]&lkOYXX7fb/m6MVVZ^-ts9UPkn<GaT/$'L1THAs[rXEgk)S2h9]hDR%8,"hf?&aYJ)%P[R/X$_';u^#1J:AKnr?Ml164><U^->pc<'AOEhpmY3#JV7=3IoZq&jmM1U8_rVDD(8Eb6_71W,n^k+aP=2*7,$'R(<@-3I,gF'M%@GRr&[iunECHcHFBJY13KjM>'p:uj2Z`s-LOeU8!%J=@jFA!R(l)SU;CM=YX5\Z_uNPo7r$6\.knO6<V[0S[aafsJUS#0_%A50?9%nbKJ=XR<dW/pEkt?F.3:V9>10?l]IIaB"La7B-DD208@D(;J"h*?SLb"4;b:[(`d+jYYK>;]:>%%sPdn(Wlji_eo(;,BeFSe@Z#e%BDq0+EhT:_NE<?YhWh$?WEh`9Op!4!hX^L'1LhU\G;!r*0p,'YklFSt4BcDZZ`dP0C<o!P,*qq4+mm(HgL$sUShdom0jmGAdX8IP%FHA=e+Hke';mi?*4;'Y>1m\>IZ#]Vq.O/DrM<mr`M!1hi+kH:JdOYZ9:G@nJD,SA9X8e^VIM6-&d/d/AHp9,<Q+L=587@P'!J6EW%I2j/jJC]h4ij'WI4G_sHUC1]&GUf"lB(j(ulJNr=CHHlnYTWV-HP3sTn9\[t&A#SZej^%&LaM0,n"7!allj746X)C3^!:LC.uOUX%OD/!3/[Ol$4F;$^&X6<+qq8'ISWtlS@dPS<ZklkL,&8uGmMi@P:"!m/7.heS-R2ZnFY\%%J68(;WSW54C/nH*H(mC0-mc&0KoHYn%A5'QbX>3Gk_/;2YWiFpUX&cFlgo?&E%2%!Pdg"XbTOg>N@-7Amp/<Q/Nibe,Yb*E)N8rUIc8191,G^D$3]FRGoN[R.WEGJ@@b,^=%q`-Q\.HPY&f9m_gIW*-j^+`V#Z652UC2^_%^=d5Q]'nN3NR-BEe"lIaRK*dAAQr3.8F?cGB#bT*h8aA`B)Of+&=;Jq!4*<D'&XD3%/Q+@*`jkCn7RkP1\WJDfIu#@%q]qInA2%"]mj6`ejFedO_]Jqh\/#AU!>;K'Yad-Bd]0GcfGYV6VpR##mlt&.Z*#ela(#sdoeik,%Jj@ogbShCN'at<[C=PiiYq+jHDDQ&HaSPbW+,e5j&64Q?_mjB8^m5oTUWH4nOp'cX;UI);16k4g7k<T8e*DQYkCKIpJIK0H6?C)X%O0cF))=p*]Y@pQO+O,jU[\GnG\8"`YR$S,pCGd4!jG4WdD]btB+L)+G/`i=sC!X4o5Z6/%383ROCmj@'7=i[C'+B+.'(neYb>Q=h%[pDWTcc,6f`f'!=!O6Yjd^fLAhs4V_R!meSgrqkQf0*0DN,mK.ajE'OP)>i8ZA?J[0_A,\$'qY5`kk!"%QS\6P)-Ag6fIjMVrEQ+%Zd7]tFj9V3VsP>UH@KGiFkW!j2)B&q9r&dJY3C[BJO9VZ-Qg=eo%/YLX3pR5PL\3&1"jdm,+-Zr>US"tR#<Dm=/\d=CC:&C?uje>%#F^(PkmjpHOGoA,:1$B'Vegs\9nCkrJK%HT`CCUV=)US;b(35PXde*(CRT&kYh;\ti#!IR?[]4hRl+?"N&!2n@^`]f77q=q.8=jc%EY0b`D!G,0>f<.g0IA[HS"#f*,f$"AU6*LDi]<OHS/KdSW6WnC=KGIpOjHL]`GMI[,l-sEXaRX6!YV_@^EGGGh.k5p%84We#k&2,%630bE=']>3k<64I5p\)a5c!^#7VH'CFg483<[]9"-'Bm/jsEU`*'6&uVP9s:`/JLT@V>5l/B[opdY6#3,Iq0f]"Y6mZ3-Wf",(qU%#K)Y0`IdUf,9*,(@DuE,AY#lY8>,Di2[SI9W'%"lqX>tckMP,%b9Rgb@p'6VUWlb=Sl=o45@@/e%j5UR;;g0>n]lk8/W+N7&<hL%%[41alkQ%U1nWR)*/2\%D6qXlI.&Yg8(ALTRGgl"c6gg1(cl1K'n[?j?Y[ed)!*-'-&TobYWon:uQP`7kT=TrG%k*gtAMN.W,hd@6%@38TKD2;f7=\1EC]uq&qLR,;I&.mgIm.aT#AZHY"3?W;S4B7SOil2A2ToD0Hm(kSOOo*+*9l>Q3PYeHXZe)m\p7=<#hbt9[]G$+-%6JFng75.n0,uldAFe+rAgjd`9@n+sUdGI9lp&Lrq&;LgQeK"q'kU9*pB4iIkQ8r+0<g/I"*6BF#&j_\aJ=,XE74Qa&f=C;!`l2*M%LntB-fV4mJga[]:P*pgIef]6f,&W/.F998aRa)[IK[q(&F@QJ<>!Abr1GU5Vc6_#"!(H3d-4>9K4BCVQLkR,lo)R#!@5?l:%M1(6%57l@!fW!Q<pVb#JgAqm2)e.>q->!i16s>f^J\!<YJuk_Tb=&T\\J#p6e#U4=%]<F5_"Xa;+IQEk'4L@K"%3[E%PXb&+!UOMQW?V8%""a,Tc">PnSb3^G[\H!`HD47);85G6><^C2kS3H+<47lMY7"#>:R3%d"D7[,BE2>ak$S@Ig!5jtLRU\2h=)7JLZMZ":KMVFVDQ]o%PI8&[QqH1WdE]YJZAXW'&m>K1[u,WZ>T($GS1a7ph,*'<+;fJi3#>r],AR;5Ot^EOFAetC<4[7`C.?$5JOUoCFImoAX<>RuNr)g,%/P1E5Uo[EW,1WO!@4ilmP,1%#V'"-eo;dnn3Z*u>1"(OA=cqAgRl4?uj%\Wn3G9-*4Q$4f/A90Vf/t%Y>#nSrXbEJV1=*Db98bDE%9,0$=`Lo9I>N`%nm;C/a+]$7;fF4tqcW'kOFlWqoaVQj;PY#S3*p(t[R2T4T.-g1&bL/+i1N'MJB0/Lt4eFQ^%bi]KIAel_)\_8#%(*Ju<%$72/>h6Zbg2c?H\n5Xr`l%l!3rQq6!:dY/aMc00AB33:_uPY:*XWQ:O=1:gQ&1WCZP3_6(tU<hg6`^"(3O(cN,'2N0QW3-%M9'3M'$%GZ(g",'[k]\@C6t.+`8E%nQC/=3`pjf`&VDl[rE\AjE;CT^S[.c>3:'D_Ym:m#THYq9S(iuY);ZJ)0G:^X2BE&'/J>d6%4:HgQZ8+5U_p#'aahoh!7X6(M/W5or[!3F@n._un,PA;c;N6VB;o":@#S"\-,&[J_o#%em]$N,:<jL'e4"?LtYdDe31[]&,0F[R,%f;+@8'=^KK!/Z#r.Q!*BQ;(IngD=7sS+;(F!&>3Y.4#NeCl)uJ`(3#\7`59t)Yk[I%$7DFmu<-+fHOcO[YU=HA!;_Rq\]o#T5!=o%k*&RbB"jfj0lm\\MUAD]frX)4;chKj(+Nok\PY(:D?f/.'f/)2UgiI62C_29ASX=N<6SStPDZX<ZnX:VbtTNs0$DATbf.1K0lr1I%->!EW)A=ncbJqIk4D3N<(kc'a1nuc[F1Z<`%&:Ct<EijK@Zb`X`P`nA`i'b*Ku:$/B=4gm="Ot`M&6N!=YVZ9PE!kb:5G8dj<bHp%"lVqh9S#3l(a)PJaL+Qka^&Cc<#.Ep;(50IA9^q*9UHY><lNFQR&LTC'*BMZZQMrce18PWaSj,UpDXhL,cgeX9T)FZI%t.gCt`c)%0gO1ZTY.r-/2]m'+nqJfc@h'pD&#q^.L(\D@'ek3^nO](6!e/(G7uH<^Vm(<Ke4cd@N-%<Ir4:GDi!O\:IM1LrV%ZS1LJ24R/+`@%(B^aRlc!O9[H5n#BM;)H`j'Jq4()ME[P9KuVNj#^KM9VF-;)44U6P`R8]3S?['GK)+N]5a2(oSEkiQu!]q&*Q5o`fk](KP#.uesB%eKWY@DIsVE7`DmCW_S_8d;e#X!g8Im6""8aAD`X))b?A6M6!sVMk64L0o6a#fbI0+:a-+2"_)7%%P?\ML`!&1]T\/6EO3q(9l3s4%pp>:Y1LtFa@?@;5XOabFl!Cd#ahn*u4YGf?(Q258jK6/"+cMQ?Go0rG#SZ@EB=1P`%g0`f1BSgjDTA-6`P_`_2C[]r+MGDEpaWg[%1;6fSi+*L>7`>@I7b9%'K7oj8p8X3>CfsM+0%pp`'r0e_9F2FiP66f%!FSRI\/8Uh&TZ#GP@\bhbVcYgN$)VP>d,")ZK>fNLljCs%88:'.GKomp1.EI62_J\IP_oK@-afu+9L.[[)F_KHO.&bd6B$b(aC8ToAk^E8P_n(Ebm'f-0JPX59T2-rk&'K%#n_6/Qn^h;&qPhc%@FG>FqU9%J$OsEe7`2<(AYW[7BXH/@.sSTEfiHA@.hWn8/f`n[k3CZsIpU)dKSRB!F`ho3k@-=n7`NQ52^2l%MFk_d0l)-\UaGgT%&$qcKj'h(Fh0><tT8doZ>CQ,s;_T%!,K$m/KCLWo_Fu"_b+Zel/6C*K'?A,II:HBVf\:Y<.3/)_7"2:G.b6h"L#,'1)snlu_kORe%%5Z7$j'cJcUu9Hg@AMl%?kKBhfNF%JViL[!@XqRI-;tE*8&o9[-ojs#&/rR9OfS@?.4ZFWGaPHsQ\SSB$Bu,W;\s@?$oGC1*C@\<%X_pPN<;daJ1C]"/`(VCb&i"!4(_:[t2e7l&fb*1O%M2jj-Ol^^4A9a\;1P27@7K)c/6g+U@RgI'Aj0rd0Oh)U'TTSQbL/Zc=OC:U%?#""3lg'b1(`s>?-_m(t^biqmC!d_><eWmjD?J:.$*T+e\LYd1Kl@#o?&mj9olAZ09GB-8W*'Q>km!TYO>]a@YkMJ5'S@Y;ZncMW%\kDnKT'd05M',&=RiN!7aoP1RX*BFg<bE+Bd8"n>I0@fu@fD+@g9NiN3?j:h/`"Bf&KnZKP1U9^=,asdP%5/9GKPt&[462iBp1/s%O^emMDKn`YQooF7XP=$lVfT`.Q>oe5Rib'Oo$Y=AGu/O2a`Fn2+7bY"N%%=eTZADQ;KUm%1M53YfXAG34/b%jiFU`,0jEUe.)Bgi%`5.8XXPsH)Be]c*a5Ai/8.h+Hi&=:d1=b9.jpiqV\[G2#%uBTHW,5d_K_DK0AR-W^V/rnO;WMEg\ll0,&a2^,_=`1PZ5e2@XH2a9%:"p&nOfcL@c"Wlh$Q=(]*M$ZSbqF.F-'i+k"gT+JesMca/R"'BIS]h.db/2\FaEg2kromfO;u]WI$,85QfY!n]LK?UFdS,rSVrbq%m4IS,R3k_0BeB3m*?aM,!$_(leeUlXIFg@Zmh+K2@5!oa[aJt"CQE;q`@+qm)^Uk;Jurs-M)cmo&2ji(2F*!Br<fW78P.s-MI@L3%N19bG=@J]MfB="$C8;P:F/Gb<2)+Q%M\NR)o$Ht%VoU,n,E.?`emrV^VX0kG'1gNJA$"(U1>?RB;q4^MPF>:d.^#.&8D:L;DC8S!%P?WZWZ/Q&5J0eZoK>doQI_k^_lSB*Wh;MNRXV'aaJEJEVMai^tfeXbZ@m\Q>7J$GE:+c2ZZXlYgqL3G8d&0[I?R,R!6r8C>_:@/_%XDnpe_4NkUUc-m,;SpPJ.Nt&D0nE:C-5oBi$L'OR-%.$B#SSMC8ed0A6(NMCk`W?8q+>j++T,V/U+M!VQHF$R""[>3ZmF#91!a\O%i7DL:@T*i$6-RTr<3(&nQnqoY3m*ofW9S:k7f&6Kb"W7qE?Y+QcT(e*GnE"TS&`Ag6t4MYJp%Ag:p[QDTqRfsY0cDmD/c9;?0$I@%#F;DrSoT!Q@85cV\,_Y'3P_`Y"j>U"M++reVI9OoN]OSJN77V5<U6(92@D.9An\62!m+;b9P4cooI\28.\U\"XGO`"'!l0#Ya)r3%\^!B=Nifkn=M]XKK-hTs9-0&$$mLEX!Ji`dREVO&>`bkbf&`g0WsZeFnZkXbODKoA8F"@-=Xo!!r.u[\33ZiBTui[/<libR&l6Q<%[J&qq!h>]Y92[6A]0AmGUV%?m&S'PU1kWhcfd\PO]t%W9kj;u;&@P_'5buuU+kG-$7<Iu.!;gY3IL%5`f_&\t/=!7X:6FL)R!g`p%0_S[6\-g3ag;,F23L)V]ShW_k8iMF$M?esF'L'<705^a^luhR:CKPHC`;MI;JTbQTRD+(OMVFR0^&bIfqtBE-bXG@9mT@:Td-'IN%a=KkYf2>`eVl_9g_7j.ag@_c*\r^LEg2FP5\5KFZ`4haUh=e9/HBrj*f@<pCci>6Ap5rsl;:mQ&;+W<Qj0Uq4-p9e*R+,$&7GW"7%DK&"THke4n&<GOM.U$W;C:F9V59stW3=$MEpBQlJG$:9V$FEOd1^gZVVTiS$>+j.$*$H&a_<U6hpA5Ji6mT`oMH)iP'nIg.Qg^Zk%:'<D9-(nmf\YSuCZa(R]VPt-.N1ML%$!f784B2bR?;?sk@O46W8lF.Q(P4c6BJM1T2,]>mkU[FO3n^JW'TsqRoBV1(R5a6-AZKs<%0(>lJ@!PDeoY9&mloq?dft=Cq)R5_O_KopO#di7SAoDW]du<)oae1a]bjRU">Y_LC236FpW$-tW4+``*YpH?h$H-sp=<Imjbhh8l%s"VRUU?Cth"Frm7Z!c;f+K6ga`Y(]qDV2IVZ2>dWVmI@$(_F+OMKlKe3%fNZN83+YWId$.6BIK3M-/cJYZ!Dp7Yf^E"=+,nU+HSD%Bc'j?Est\[H^_?5.hF;/:pirD"e/u#58jW%&I,,?AJ=5>+5'PA==(FGX$+$t3nIcU9GSjLK,,oq35->Ha&bu"$W?i9H:o)SeH\Jd%9/FIo!g0bUjH4hOoAYW3!?-ZD]%$eV>8@b]MZB8Q&p,asD$g[#)2R^i+pI7g"C4`<4XB'.<h<L5#nY9B'Hp\_lX&/K]c.q-Ha\U#%.ZYH!L7Qj"JV;l2*GF:_=D\J<Yn1ot<+f7]YAhWr)0(!d/#"5JC:.Z-=UXd3.2JuH,X2p/737=0"iTa(NrP4(G0Xj+TN[i?:,/kc%EG`TErU1ZV`b[[0!!Y5iI-(Yg*.\0R#Xh*F4nBdc,\jH2+s3A$&-LqR97,oTq7h/SPVo0P&?Y6%+\e[p'p24bF$HjcRPqqK#>J%;%HGec!$eo;<>?fb/0MmnB*al&g=h8%Ila0C;L4F:+qO6G`ADj3)P_h+P)G&D78TE$jf!_nf>Bu#)Wtr`JispTn7rh*a.%dD->%%k[%"U?K"HUkf5#VO*!m9_J\;Xm(UYH/]f3JOOHBOVVRZOg/Z4b9hJl+sm2-i!#,n@miadPSUNa/%PO6Ag#8S&?i.D2akDg53EBA59j7%qSpb]SYOP.=MIUR)G`JOG`-_,W<eTaLJ[n^a"f9HQ4kkg85T@e>.:U7RP*9lXsY#897kSR=ejc.BE4To<s,JM122=Kdk,1p@R)L!%;+inLWg:';oP\CR^F*k3Z/7"\52FRCMH/%X;kk^E"4Ilj)/pHo/OY$B9HJ4$KMnRbf3=L,VW0_LmB3LaQ6tZGJRX7BQm(0X^Dqjc%/1J;iBUIdbr#[&Y"SfPP/7K*7T+n`$=!Xf-8\pDtYlSE@Z3"ZZ?3qA7B%/XEC]L`eDUp/$EAQ6*d]Ah)h[\see5@DlUDd^re<b!A%7)W,2W(Ce2/_LX!e_0>ejq[_&LunO>\m%F9(&H?pg^FdXf"+,@l884D4$_F/k'34WHCVPi3/NRT&@)#G#NXGBMmR,6mZZ$u<9l\Y%o6,`"$//<4Ka7rrJ;Aja#<A:m/&b[m!<VR(B?R:pZtDB<<p;IJ6*nTO(8Udcf0:pO3jC\YP?7I^no?Z^[R:WVB-df0V4@n`Wo3UB%3!2]MB@^e(#9,lsEG_M-#*>p8.6C'4Bj,;B%Z-.n)G3T5oWY<j=#l:1ZQ#(h/'2j-9Sh<n93M+^D>2L5=aeS3iUi)e>#0#`bBUd>%V$<J%;JR&*SdtkLA^AqES5*iY;'fI>H9\G.a8!_^XM76Pj&]qmVRC'$"S&m#XPGR2']Z$q[e9hZX*.^7CsSQ:$9OYg1EG>*e+dpa%W7]Q+b`8.We'i'p&D;!3-S9RWPqQU-ep'Uq4K#Mt8W$g.Z"3r2CpRc#=P^n:^p4cu/=9HkoNIuf7r'p=2;kT,F8*BG(>^Lo.eO_W%d%`al(JPE.]?tBrQ",gf8a3's0E.8EOZ6VDh<!dXg6,ZSNH\oqK9YWBN^5i*@fVV9P%Z,fFnUu@QgmrkS?qYVR@T;"PQ`FiU,$E[%CEOsdMa4ih#aRY%4^$`$-dK5\bH]2ij:22]@883#]SPVq<$B.AFdQTRO\8*bnTH>q8VAT2JYcN'W<'=@A0-M.)e(/tCRhO-h4MA$%>/L`s'8R*3W_MV^B6uE@:g$oPG1<SiSp"6[;KSpdmW4o>#c@\X5Su`0g<Es#>L`YO/=3NcDAZ$QCpM#Ol#e16aD^[+9P'.')lFb@%P-CmJ&FqH-d4?N1FO<-e?6W9J@p'L38FjVpg';o&q('?^&U8.>!\m\s+gU8=&IAO1E\Jd![)7jS^33.kTb)[=c_/fR]eHQ4PdEi>%B/*]71>C3PRt9("Ssdi8[[(Z7WQ1U4E04f%=c,:4U@Y+JA6@E;*Kl52hm&_"JLa!sW_8Z)P_[cZ6SQKq]&>*5W-IdB!XD>G\hRtN%71"^^ZgYB%D%D2BmEdRH>\^,mUT09Kbo*iu@1Yt%)S1b2QPq,Q8;9\N@pgpH&;ZK$&$se8'"mIP3T#T#Ou0rs"=+S9&.>@*Vjn*W%$RGK<;Oo^ZPU;K&p-mO[n5;\&bQE<M9$pJO[!T/n[fBVgLfBZCdNHe^7)\@#%*E_bBO/l7g@`f#dkGMLkqTP8QRNDJO0&Y(*m:T4%4/UTFDi:g*0TDnB9iSI=V%'%LE27TV2(O-T-3<2LV[[%cbX=9ZKYtu9M9(pVknH]G:b%6Ha1A:U<>9)K=R9K-G.1cfr,J[0XF+J&%&%QdZR;FM,pXJ>Kr9E-JolH;X)QXO;7U,u"Wa-61Zken:Z>8,.;$FO9XX(14o)Q&F.lQ-e/"/r4Xk$LP3d+YqZV\&OQ!F2TI;n"A%2/#SaNsq?&"N_8;_6\s#/=K>AT.&-(X*&=Q/2$,6OC/e#]Ur5(9$.8&#TK!K+:M;_Z&agkS:,*U*_M-l5Cj02ire0`Go.b^;DKHY%&(o,)PQKT)Z7R^hM+#Q\QWuX><_?QT?[Z/fOAsm<&s`7C<_^NVR?k!h52'_7P3><8jL(07_";S=8TZ.jj3S+&h$A*&.;Lmj$$7@d%o6O!$",Rdi.h"H^3G#Fd'g?A?MG`S&Hn/6(MA5o+qSn<<nn&Lq4ciRREmn,^5iQ30.mU7P0/hrBHZ't+FlDlK\=Fbb/gTnO+$^#N%Lp@o@TEA%lAhrR;@9XkM1?^udFo<J9%`B/Xp*>8Cj':'g;Gu^HJu*Hr-b*d)H]pc$euH_RCT@\Nrn+I[Hb;,7kC>ioXt<G`8c,#i%p:)mAC!ZfZ#+_.3Ag`5&p2"+'hm6nk.YF=[:DPOKP=;^Fc+,Un7'%`C0^+%o6X-hX%rI$8CJF]7W-G/cJ^"f46&0`dHqss;a=LsV%%/P]Qs(Pob.ctq>W#)sRMa9RYi=c2?GlaP/GlT%mQuV][%q7euF\Ga5*1.e^.gACg.8@b8=i07G\c-1&\#\$!TD.rcpa1L)Y^IRe%Z>ujPP<WF,im3GrD7%*D\fo4gDr['H(I9n$jc_nV@T=L@TKaioc%O#>kY]l@_E$LJm3cJ5[Vqg4pkC11IXig[IXmOeh[jA9%hN<h%%kt!(^*@1*\*$^;r:nJ:7LcjNb(O\rCGOkaJo4+_%g7jF,8!\h)U9fE:<X4<Uf!;a0R)Wp$.R)gO9[.F`M0/I]q=h:8q_8FRje16%>._AsW.?An$h>D1ZCh^Y\_3OqjKV#TTqM13I?U=4("03pe`+@<Soa?p>2+X\m*#*=^1M\(k2sn33C\Z8MOfdY,=o.9m?.`&;F62c%QuFqmnZX`pUU@?d'2BhF!l9QEBo?=$8RE[(e!V9bOT$jI%a5\h3>KhofEB576*Q=2:5&dSm34fLEu:(%bf%lH"rscVb@%a138Q\g%\e&MNKn[;obb[(b$>796"jp\YQ"qD+2&-.tVT_M`'C-kb[T\f9>TabV,eI*3;rR(C@YTP830>&#b\RDQb_?rJ:2$'n@!3YCk=d4m%8-C*(E%@H^Vf3uQ8AlLY$R1#_LI<U;lMsO(S4K,ZLhWs',pl@-K\QHk]gH>IM*u$?#q$?A/*'r"h<oc%A'p/n'7L1+-N&>-j\0nt%gIM%L*%EOnfl:cPC9Gi`Pm7.BHMeMF]k\'NH5P'iA;[oPcS`Ze]=Dat4#tPHmpBt\)un:2c4j\AJ#s<8$Z#XVaoMBq1aWY_qF._F%rL6ReK<2.c8CD9Z2_CY<D]D&p6q9c1c^%Or^8iM-E-*pae>-1g%:)9am+i8o[B@YOHk/=\(G\-I8pf"f:lGd(&0(,oD6<SiS+R+C%l;T0d72i[+C;j5>:(KJYj-$uXoS!*H]"c\CeLK"#$PfNTD(tB)<a/'&Gp7olnIl[rU\^bon'/PF_dBZP9S3YWn5q#lWldLF(>CKs%;C#HXPo>/8![al$NjYAh_00(7PuSI^cAQ%i9Bq\e&s)3RNH:`bg_MqJ]Ecr'Kp^N:KE[cuRm'HrgBKYXLF)A5hs?5GThQ%3m=3[W%ql6il4KU8$KRe&@^\P4\S5fXQq*kH/R<B/D^cdbk."rEeY_fh%BP?cmq:ZY>Uh=]1)+SW@o2NDO>^@8\'D"F(@/Y9=]\8mh9HVTA%T.bq+j1O2KS'C9X0YX$3YL>I4LXYa6XG>gJf,MKh0D/`p:Z&A=Ys*TH^&at+`8R31q5Y=^Do!n4DZ~>%AI9_PrivateDataEnd_F%rL6ReK<2.c8CD9Z2_CY<D